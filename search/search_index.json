{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 Bactopia is a flexible pipeline for complete analysis of bacterial genomes. The goal of Bactopia is process your data with a broad set of tools, so that you can get to the fun part of analyses quicker! Bactopia was inspired by Staphopia , a workflow we (Tim Read and myself) released that targets Staphylococcus aureus genomes. Using what we learned from Staphopia and user feedback, Bactopia was developed from scratch with usability, portability, and speed in mind from the start. Bactopia uses Nextflow to manage the workflow, allowing for support of many types of environments (e.g. cluster or cloud). Bactopia allows for the usage of many public datasets as well as your own datasets to further enhance the analysis of your seqeuncing. Bactopia only uses software packages available from Bioconda (or other Anaconda channels ) to make installation as simple as possible for all users. To highlight the use of Bactopia Datasets , Bactopia , and Bactopia Tools , we performed an analysis of 1,664 public Lactobacillus genomes, focusing on Lactobacillus crispatus , a species that is a common part of the human vaginal microbiome. The results from this analysis are published in mSystems under the title: Bactopia: a flexible pipeline for complete analysis of bacterial genomes Bactopia Workflow \u00b6 Documentation Overview \u00b6 Quick Start Very concise and to straight the point details (unlike this!) for using Bactopia. Installation More detailed information for getting Bactopia set up on your system. Basic Usage A subset of parameters users may commonly adjust. Tutorial A brief tutorial on how to replicate the Staphopia Analysis Pipeline using Bactopia. Build Datasets A description on how to make use of datasets (public or private) with Bactopia. Workflow Overview A description of Bactopia workflow and software used. Output Overview A description of Bactopia output directories and files. Complete Usage The full set of parameters that users can tweak in Bactopia. Acknowledgements A list of datasets and software (and many thanks!) used by Bactopia.","title":"Introduction"},{"location":"#overview","text":"Bactopia is a flexible pipeline for complete analysis of bacterial genomes. The goal of Bactopia is process your data with a broad set of tools, so that you can get to the fun part of analyses quicker! Bactopia was inspired by Staphopia , a workflow we (Tim Read and myself) released that targets Staphylococcus aureus genomes. Using what we learned from Staphopia and user feedback, Bactopia was developed from scratch with usability, portability, and speed in mind from the start. Bactopia uses Nextflow to manage the workflow, allowing for support of many types of environments (e.g. cluster or cloud). Bactopia allows for the usage of many public datasets as well as your own datasets to further enhance the analysis of your seqeuncing. Bactopia only uses software packages available from Bioconda (or other Anaconda channels ) to make installation as simple as possible for all users. To highlight the use of Bactopia Datasets , Bactopia , and Bactopia Tools , we performed an analysis of 1,664 public Lactobacillus genomes, focusing on Lactobacillus crispatus , a species that is a common part of the human vaginal microbiome. The results from this analysis are published in mSystems under the title: Bactopia: a flexible pipeline for complete analysis of bacterial genomes","title":"Overview"},{"location":"#bactopia-workflow","text":"","title":"Bactopia Workflow"},{"location":"#documentation-overview","text":"Quick Start Very concise and to straight the point details (unlike this!) for using Bactopia. Installation More detailed information for getting Bactopia set up on your system. Basic Usage A subset of parameters users may commonly adjust. Tutorial A brief tutorial on how to replicate the Staphopia Analysis Pipeline using Bactopia. Build Datasets A description on how to make use of datasets (public or private) with Bactopia. Workflow Overview A description of Bactopia workflow and software used. Output Overview A description of Bactopia output directories and files. Complete Usage The full set of parameters that users can tweak in Bactopia. Acknowledgements A list of datasets and software (and many thanks!) used by Bactopia.","title":"Documentation Overview"},{"location":"acknowledgements/","text":"Acknowledgements \u00b6 Bactopia is truly a case of \"standing upon the shoulders of giants\" . Bactopia currently includes more than 132 datasets and software packages. Nearly every component uses, from the workflow, datasets, software packages, even the framework for this site, was created by others and made freely available to the public. I would like to personally extend my many thanks and gratitude to the authors of these software packages and public datasets. If you've made it this far, I owe you a beer \ud83c\udf7b (or coffee \u2615!) if we ever encounter one another in person. Really, thank you very much! Please Cite Datasets and Tools If you have used Bactopia in your work, please be sure to cite any datasets or software you may have used. Influences \u00b6 nf-core \u00b6 nf-core is group of great individuals volunteering their time to create a set of curated Nextflow analysis pipelines. The nf-core Team is putting together some amazing practices that I think really strengthen the Nextflow community as a whole! Since the beginning I have always had the idea of Bactopia one day being apart of nf-core. Unfortunately, I think Bactopia is a much to big at this point to fit the nf-core mold, but that's OK! There are still many nf-core practices I've been able to adapt into Bactopia. Arguement parsing based on nf-core library All Bactopia Tools are adapted from nf-core/modules Testing implemented to follow nf-core/modules By implementing these practices, Bactopia I believe is much better pipeline to use. For this I'm very grateful to the nf-core community! Thank you! Ewels P, Peltzer A, Fillinger S, Patel H, Alneberg J, Wilm A, Garcia MU, Di Tommaso P, Nahnsen S The nf-core framework for community-curated bioinformatics pipelines. Nat Biotechnol. (2020) Public Datasets \u00b6 Below is a list of 19 public datasets that could have potentially been included during the Build Datasets step. Ariba Reference Datasets \u00b6 These datasets are available using Ariba's getref function. You can learn more about this function at Ariba's Wiki . ARG-ANNOT Gupta SK, Padmanabhan BR, Diene SM, Lopez-Rojas R, Kempf M, Landraud L, Rolain J-M ARG-ANNOT, a new bioinformatic tool to discover antibiotic resistance genes in bacterial genomes. Antimicrob. Agents Chemother 58, 212\u2013220 (2014) CARD Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) EcOH Ingle DJ, Valcanis M, Kuzevski A, Tauschek M, Inouye M, Stinear T, Levine MM, Robins-Browne RM, Holt KE In silico serotyping of E. coli from short read data identifies limited novel O-loci but extensive diversity of O:H serotype combinations within and between pathogenic lineages. Microbial Genomics , 2(7), e000064. (2016) MEGARes Lakin SM, Dean C, Noyes NR, Dettenwanger A, Ross AS, Doster E, Rovira P, Abdo Z, Jones KL, Ruiz J, Belk KE, Morley PS, Boucher C MEGARes: an antimicrobial resistance database for high throughput sequencing. Nucleic Acids Res. 45, D574\u2013D580 (2017) MEGARes 2.0 Doster E, Lakin SM, Dean CJ, Wolfe C, Young JG, Boucher C, Belk KE, Noyes NR, Morley PS MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Research , 48(D1), D561\u2013D569. (2020) NCBI Reference Gene Catalog Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) PlasmidFinder Carattoli A, Zankari E, Garc\u00eda-Fern\u00e1ndez A, Larsen MV, Lund O, Villa L, Aarestrup FM, Hasman H In silico detection and typing of plasmids using PlasmidFinder and plasmid multilocus sequence typing. Antimicrob. Agents Chemother. 58, 3895\u20133903 (2014) ResFinder Zankari E, Hasman H, Cosentino S, Vestergaard M, Rasmussen S, Lund O, Aarestrup FM, Larsen MV Identification of acquired antimicrobial resistance genes. J. Antimicrob. Chemother. 67, 2640\u20132644 (2012) SRST2 Inouye M, Dashnow H, Raven L-A, Schultz MB, Pope BJ, Tomita T, Zobel J, Holt KE SRST2: Rapid genomic surveillance for public health and hospital microbiology labs. Genome Med. 6, 90 (2014) VFDB Chen L, Zheng D, Liu B, Yang J, Jin Q VFDB 2016: hierarchical and refined dataset for big data analysis--10 years on. Nucleic Acids Res. 44, D694\u20137 (2016) VirulenceFinder Joensen KG, Scheutz F, Lund O, Hasman H, Kaas RS, Nielsen EM, Aarestrup FM Real-time whole-genome sequencing for routine typing, surveillance, and outbreak detection of verotoxigenic Escherichia coli . J. Clin. Microbiol. 52, 1501\u20131510 (2014) Minmer Datasets \u00b6 Mash Refseq (release 88) Sketch Ondov BD, Starrett GJ, Sappington A, Kostic A, Koren S, Buck CB, Phillippy AM Mash Screen: high-throughput sequence containment estimation for genome discovery Genome Biol 20, 232 (2019) Sourmash Genbank LCA Signature Brown CT, Irber L sourmash: a library for MinHash sketching of DNA . JOSS 1, 27 (2016) Everything Else \u00b6 eggNOG 5.0 Database Huerta-Cepas J, Szklarczyk D, Heller D, Hern\u00e1ndez-Plaza A, Forslund SK, Cook H, Mende DR, Letunic I, Rattei T, Jensen LJ, von Mering C, Bork P eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated orthology resource based on 5090 organisms and 2502 viruses. Nucleic Acids Res. 47, D309\u2013D314 (2019) Genome Taxonomy Database Parks DH, Chuvochina M, Rinke C, Mussig AJ, Chaumeil P-A, Hugenholtz P GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy Nucleic Acids Research gkab776 (2021) MOB-suite Database Robertson J, Bessonov K, Schonfeld J, Nash JHE. Universal whole-sequence-based plasmid typing and its utility to prediction of host range and epidemiological surveillance. Microbial Genomics , 6(10)(2020) NCBI RefSeq Database O'Leary NA, Wright MW, Brister JR, Ciufo S, Haddad D, McVeigh R, Rajput B, Robbertse B, Smith-White B, Ako-Adjei D, Astashyn A, Badretdin A, Bao Y, Blinkova O0, Brover V, Chetvernin V, Choi J, Cox E, Ermolaeva O, Farrell CM, Goldfarb T, Gupta T, Haft D, Hatcher E, Hlavina W, Joardar VS, Kodali VK, Li W, Maglott D, Masterson P, McGarvey KM, Murphy MR, O'Neill K, Pujar S, Rangwala SH, Rausch D, Riddick LD, Schoch C, Shkeda A, Storz SS, Sun H, Thibaud-Nissen F, Tolstoy I, Tully RE, Vatsan AR, Wallin C, Webb D, Wu W, Landrum MJ, Kimchi A, Tatusova T, DiCuccio M, Kitts P, Murphy TD, Pruitt KD Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation. Nucleic Acids Res. 44, D733\u201345 (2016) PubMLST.org Jolley KA, Bray JE, Maiden MCJ Open-access bacterial population genomics: BIGSdb software, the PubMLST.org website and their applications. Wellcome Open Res 3, 124 (2018) SILVA rRNA Database Quast C, Pruesse E, Yilmaz P, Gerken J, Schweer T, Yarza P, Peplies J, Gl\u00f6ckner FO The SILVA ribosomal RNA gene database project: improved data processing and web-based tools. Nucleic Acids Res. 41, D590\u20136 (2013) Software Included In Bactopia \u00b6 Below are 113 of software packages used (directly and indirectly) by Bactopia. A link to the software page as well as the citation (if available) have been included. Abricate Mass screening of contigs for antimicrobial and virulence genes Seemann T Abricate: mass screening of contigs for antimicrobial and virulence genes (GitHub) AgrVATE Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) AMRFinderPlus Find acquired antimicrobial resistance genes and some point mutations in protein or assembled nucleotide sequences. Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) any2fasta Convert various sequence formats to FASTA Seemann T any2fasta: Convert various sequence formats to FASTA (GitHub) Aragorn Finds transfer RNA features (tRNA) Laslett D, Canback B ARAGORN, a program to detect tRNA genes and tmRNA genes in nucleotide sequences. Nucleic Acids Res . 32(1):11-6 (2004) Ariba Antimicrobial Resistance Identification By Assembly Hunt M, Mather AE, S\u00e1nchez-Bus\u00f3 L, Page AJ, Parkhill J, Keane JA, Harris SR ARIBA: rapid antimicrobial resistance genotyping directly from sequencing reads . Microb Genom 3, e000131 (2017) ART A set of simulation tools to generate synthetic next-generation sequencing reads Huang W, Li L, Myers JR, Marth GT ART: a next-generation sequencing read simulator. Bioinformatics 28, 593\u2013594 (2012) assembly-scan Generate basic stats for an assembly. Petit III RA assembly-scan: generate basic stats for an assembly (GitHub) Bakta Rapid & standardized annotation of bacterial genomes & plasmids Schwengers O, Jelonek L, Dieckmann MA, Beyvers S, Blom J, Goesmann A Bakta - rapid and standardized annotation of bacterial genomes via alignment-free sequence identification. Microbial Genomics 7(11) (2021) Barrnap Bacterial ribosomal RNA predictor Seemann T Barrnap: Bacterial ribosomal RNA predictor (GitHub) BBTools BBTools is a suite of fast, multithreaded bioinformatics tools designed for analysis of DNA and RNA sequence data. Bushnell B BBMap short read aligner, and other bioinformatic tools. (Link) BCFtools Utilities for variant calling and manipulating VCFs and BCFs. Danecek P, Bonfield JK, Liddle J, Marshall J, Ohan V, Pollard MO, Whitwham A, Keane T, McCarthy SA, Davies RM, Li H Twelve years of SAMtools and BCFtools GigaScience Volume 10, Issue 2 (2021) Bedtools A powerful toolset for genome arithmetic. Quinlan AR, Hall IM BEDTools: a flexible suite of utilities for comparing genomic features . Bioinformatics 26, 841\u2013842 (2010) BLAST Basic Local Alignment Search Tool Camacho C, Coulouris G, Avagyan V, Ma N, Papadopoulos J, Bealer K, Madden TL BLAST+: architecture and applications . BMC Bioinformatics 10, 421 (2009) Bowtie2 A fast and sensitive gapped read aligner Langmead B, Salzberg SL Fast gapped-read alignment with Bowtie 2. Nat. Methods. 9, 357\u2013359 (2012) BWA Burrow-Wheeler Aligner for short-read alignment Li H Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM . arXiv [q-bio.GN] (2013) CD-HIT Accelerated for clustering the next-generation sequencing data Li W, Godzik A Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences . Bioinformatics 22, 1658\u20131659 (2006) CD-HIT-EST Accelerated for clustering the next-generation sequencing data Fu L, Niu B, Zhu Z, Wu S, Li W CD-HIT: accelerated for clustering the next-generation sequencing data . Bioinformatics 28, 3150\u20133152 (2012) CheckM Assess the quality of microbial genomes recovered from isolates, single cells, and metagenomes Parks DH, Imelfort M, Skennerton CT, Hugenholtz P, Tyson GW CheckM: assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. Genome Res 25, 1043\u20131055 (2015) ClonalFramML Efficient Inference of Recombination in Whole Bacterial Genomes Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) DIAMOND Accelerated BLAST compatible local sequence aligner. Buchfink B, Xie C, Huson DH Fast and sensitive protein alignment using DIAMOND. Nat. Methods. 12, 59\u201360 (2015) ECTyper In-silico prediction of Escherichia coli serotype Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub) eggNOG-mapper Fast genome-wide functional annotation through orthology assignment Huerta-Cepas J, Forslund K, Coelho LP, Szklarczyk D, Jensen LJ, von Mering C, Bork P Fast Genome-Wide Functional Annotation through Orthology Assignment by eggNOG-Mapper. Mol. Biol. Evol. 34, 2115\u20132122 (2017) emmtyper emm Automatic Isolate Labeller Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub) FastANI Fast Whole-Genome Similarity (ANI) Estimation Jain C, Rodriguez-R LM, Phillippy AM, Konstantinidis KT, Aluru S High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries. Nat. Commun. 9, 5114 (2018) FastQC A quality control analysis tool for high throughput sequencing data. Andrews S FastQC: a quality control tool for high throughput sequence data. (WebLink) fastq-dl Download FASTQ files from SRA or ENA repositories. Petit III RA fastq-dl: Download FASTQ files from SRA or ENA repositories. (GitHub) fastq-scan Output FASTQ summary statistics in JSON format Petit III RA fastq-scan: generate summary statistics of input FASTQ sequences. (GitHub) FastTree Approximately-maximum-likelihood phylogenetic trees Price MN, Dehal PS, Arkin AP FastTree 2 \u2013 Approximately Maximum-Likelihood Trees for Large Alignments. PLoS One 5, e9490 (2010) FLASH A fast and accurate tool to merge paired-end reads. Mago\u010d T, Salzberg SL FLASH: fast length adjustment of short reads to improve genome assemblies. Bioinformatics 27.21 2957-2963 (2011) Flye De novo assembler for single molecule sequencing reads using repeat graphs Kolmogorov M, Yuan J, Lin Y, Pevzner P Assembly of Long Error-Prone Reads Using Repeat Graphs Nature Biotechnology (2019) freebayes Bayesian haplotype-based genetic polymorphism discovery and genotyping Garrison E, Marth G Haplotype-based variant detection from short-read sequencing. arXiv preprint arXiv:1207.3907 [q-bio.GN] (2012) GAMMA Gene Allele Mutation Microbial Assessment Stanton RA, Vlachos N, Halpin AL GAMMA: a tool for the rapid identification, classification, and annotation of translated gene matches from sequencing data. Bioinformatics (2021) GNU Parallel A shell tool for executing jobs in parallel Tange O GNU Parallel (2018) GTDB-Tk A toolkit for assigning objective taxonomic classifications to bacterial and archaeal genomes Chaumeil PA, Mussig AJ, Hugenholtz P, Parks DH GTDB-Tk: a toolkit to classify genomes with the Genome Taxonomy Database. Bioinformatics (2019) hicap in silico typing of the H. influenzae cap locus Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019) HMMER Biosequence analysis using profile hidden Markov models Eddy SR Accelerated Profile HMM Searches. PLoS Comput. Biol. 7, e1002195 (2011) HpsuisSero Rapid Haemophilus parasuis serotyping Lui J HpsuisSero: Rapid Haemophilus parasuis serotyping (GitHub) Infernal Searches DNA sequence databases for RNA structure and sequence similarities Nawrocki EP, Eddy SR Infernal 1.1: 100-fold faster RNA homology searches. Bioinformatics 29(22), 2933-2935 (2013) IQ-TREE Efficient phylogenomic software by maximum likelihood Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Used for automatic model selection Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Used to conduct ultrafast bootstrapping Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018) ISMapper IS mapping software Hawkey J, Hamidian M, Wick RR, Edwards DJ, Billman-Jacobe H, Hall RM, Holt KE ISMapper: identifying transposase insertion sites in bacterial genomes from short read sequence data . BMC Genomics 16, 667 (2015) Kaptive Surface polysaccharide loci for Klebsiella pneumoniae species complex and Acinetobacter baumannii genomes Wyres KL, Wick RR, Gorrie C, Jenney A, Follador R, Thomson NR, Holt KE Identification of Klebsiella capsule synthesis loci from whole genome data. Microbial genomics 2(12) (2016) Kleborate Genotyping tool for Klebsiella pneumoniae and its related species complex Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021) KMC Fast and frugal disk based k-mer counter Deorowicz S, Kokot M, Grabowski Sz, Debudaj-Grabysz A KMC 2: Fast and resource-frugal k-mer counting Bioinformatics 31(10):1569\u20131576 (2015) Kraken2 Wood DE, Lu J, Langmead B Improved metagenomic analysis with Kraken 2. Genome Biology , 20(1), 257. (2019) legsta In silico Legionella pneumophila Sequence Based Typing Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub) Lighter Fast and memory-efficient sequencing error corrector Song L, Florea L, Langmead B Lighter: Fast and Memory-efficient Sequencing Error Correction without Counting . Genome Biol. 15(11):509 (2014) LisSero In silico serotype prediction for Listeria monocytogenes Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub) MAFFT Multiple alignment program for amino acid or nucleotide sequences Katoh K, Standley DM MAFFT multiple sequence alignment software version 7: improvements in performance and usability. Mol. Biol. Evol. 30, 772\u2013780 (2013) Mash Fast genome and metagenome distance estimation using MinHash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) Mash High-throughput sequence containment estimation Ondov BD, Starrett GJ, Sappington A, Kostic A, Koren S, Buck CB, Phillippy AM Mash Screen: high-throughput sequence containment estimation for genome discovery Genome Biol 20, 232 (2019) Mashtree Create a tree using Mash distances Katz LS, Griswold T, Morrison S, Caravas J, Zhang S, den Bakker HC, Deng X, Carleton HA Mashtree: a rapid comparison of whole genome sequence files. Journal of Open Source Software , 4(44), 1762 (2019) maskrc-svg Masks recombination as detected by ClonalFrameML or Gubbins Kwong J maskrc-svg - Masks recombination as detected by ClonalFrameML or Gubbins and draws an SVG. (GitHub) McCortex De novo genome assembly and multisample variant calling Turner I, Garimella KV, Iqbal Z, McVean G Integrating long-range connectivity information into de Bruijn graphs. Bioinformatics 34, 2556\u20132565 (2018) Medaka Sequence correction provided by ONT Research ONT Research Medaka: Sequence correction provided by ONT Research (GitHub) meningotype In silico serotyping, finetyping and Bexsero antigen sequence typing of Neisseria meningitidis Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub) MEGAHIT Ultra-fast and memory-efficient (meta-)genome assembler Li D, Liu C-M, Luo R, Sadakane K, Lam T-W MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph. Bioinformatics 31.10 1674-1676 (2015) mlst Scan contig files against PubMLST typing schemes Seemann T mlst: scan contig files against PubMLST typing schemes (GitHub) MinCED Mining CRISPRs in Environmental Datasets Skennerton C MinCED: Mining CRISPRs in Environmental Datasets (GitHub) Miniasm Ultrafast de novo assembly for long noisy reads (though having no consensus step) Li H Miniasm: Ultrafast de novo assembly for long noisy reads (GitHub) Minimap2 A versatile pairwise aligner for genomic and spliced nucleotide sequences Li H Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics 34:3094-3100 (2018) MOB-suite Software tools for clustering, reconstruction and typing of plasmids from draft assemblies Robertson J, Nash JHE MOB-suite: software tools for clustering, reconstruction and typing of plasmids from draft assemblies. Microbial Genomics 4(8). (2018) NanoPlot Plotting scripts for long read sequencing data De Coster W, D\u2019Hert S, Schultz DT, Cruts M, Van Broeckhoven C NanoPack: visualizing and processing long-read sequencing data Bioinformatics Volume 34, Issue 15 (2018) Nanoq Minimal but speedy quality control for nanopore reads in Rust Steinig E Nanoq: Minimal but speedy quality control for nanopore reads in Rust (GitHub) ncbi-genome-download Scripts to download genomes from the NCBI FTP servers Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub) Nextflow A DSL for data-driven computational pipelines. Di Tommaso P, Chatzou M, Floden EW, Barja PP, Palumbo E, Notredame C Nextflow enables reproducible computational workflows. Nat. Biotechnol. 35, 316\u2013319 (2017) ngmaster In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub) nhmmer DNA homology search with profile HMMs. Wheeler TJ, Eddy SR nhmmer: DNA homology search with profile HMMs. Bioinformatics 29, 2487\u20132489 (2013) phyloFlash A pipeline to rapidly reconstruct the SSU rRNAs and explore phylogenetic composition of an illumina (meta)genomic dataset. Gruber-Vodicka HR, Seah BKB, Pruesse E phyloFlash: Rapid Small-Subunit rRNA Profiling and Targeted Assembly from Metagenomes mSystems 5 (2020) Pigz A parallel implementation of gzip for modern multi-processor, multi-core machines. Adler M. pigz: A parallel implementation of gzip for modern multi-processor, multi-core machines. Jet Propulsion Laboratory (2015) Pilon An automated genome assembly improvement and variant detection tool Walker BJ, Abeel T, Shea T, Priest M, Abouelliel A, Sakthikumar S, Cuomo CA, Zeng Q, Wortman J, Young SK, Earl AM Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement. PloS one 9.11 e112963 (2014) PIRATE A toolbox for pangenome analysis and threshold evaluation. Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019) Porechop adapter trimmer for Oxford Nanopore reads Wick RR, Judd LM, Gorrie CL, Holt KE. Completing bacterial genome assemblies with multiplex MinION sequencing. Microb Genom. 3(10):e000132 (2017) pplacer Phylogenetic placement and downstream analysis Matsen FA, Kodner RB, Armbrust EV pplacer: linear time maximum-likelihood and Bayesian phylogenetic placement of sequences onto a fixed reference tree. BMC Bioinformatics 11, 538 (2010) Prodigal Fast, reliable protein-coding gene prediction for prokaryotic genomes. Hyatt D, Chen G-L, LoCascio PF, Land ML, Larimer FW, Hauser LJ Prodigal: prokaryotic gene recognition and translation initiation site identification. BMC Bioinformatics 11.1 119 (2010) Prokka Rapid prokaryotic genome annotation Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014) QUAST Quality Assessment Tool for Genome Gurevich A, Saveliev V, Vyahhi N, Tesler G QUAST: quality assessment tool for genome assemblies. Bioinformatics 29, 1072\u20131075 (2013) Racon Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads Vaser R, Sovi\u0107 I, Nagarajan N, \u0160iki\u0107 M Fast and accurate de novo genome assembly from long uncorrected reads. Genome Res 27, 737\u2013746 (2017) Rasusa Randomly subsample sequencing reads to a specified coverage Hall MB Rasusa: Randomly subsample sequencing reads to a specified coverage. (2019). Raven De novo genome assembler for long uncorrected reads Vaser R, \u0160iki\u0107 M Time- and memory-efficient genome assembly with Raven. Nat Comput Sci 1, 332\u2013336 (2021) Resistance Gene Identifier (RGI) Software to predict resistomes from protein or nucleotide data, based on homology and SNP models. Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) RNAmmer Consistent and rapid annotation of ribosomal RNA genes Lagesen K, Hallin P, R\u00f8dland EA, St\u00e6rfeldt H-H, Rognes T, Ussery DW RNAmmer: consistent annotation of rRNA genes in genomic sequences. Nucleic Acids Res 35.9: 3100-3108 (2007) Roary Rapid large-scale prokaryote pan genome analysis Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015) samclip Filter SAM file for soft and hard clipped alignments Seemann T Samclip: Filter SAM file for soft and hard clipped alignments (GitHub) Samtools Tools for manipulating next-generation sequencing data Li H, Handsaker B, Wysoker A, Fennell T, Ruan J, Homer N, Marth G, Abecasis G, Durbin R The Sequence Alignment/Map format and SAMtools . Bioinformatics 25, 2078\u20132079 (2009) Scoary Pan-genome wide association studies Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016) SeqSero2 Salmonella serotype prediction from genome sequencing data Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019) Seqtk A fast and lightweight tool for processing sequences in the FASTA or FASTQ format. Li H Toolkit for processing sequences in FASTA/Q formats (GitHub) ShigaTyper Shigella serotype from Illumina or Oxford Nanopore reads Wu Y, Lau HK, Lee T, Lau DK, Payne J In Silico Serotyping Based on Whole-Genome Sequencing Improves the Accuracy of Shigella Identification. Applied and Environmental Microbiology , 85(7). (2019) Shovill Faster assembly of Illumina reads Seemann T Shovill: De novo assembly pipeline for Illumina paired reads (GitHub) SignalP SISTR (Salmonella In Silico Typing Resource) command-line tool Petersen TN, Brunak S, von Heijne G, Nielsen H SignalP 4.0: discriminating signal peptides from transmembrane regions. Nature methods 8.10: 785 (2011) SISTR Finds signal peptide features in CDS Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016) SKESA Strategic Kmer Extension for Scrupulous Assemblies Souvorov A, Agarwala R, Lipman DJ SKESA: strategic k-mer extension for scrupulous assemblies. Genome Biology 19:153 (2018) Snippy Rapid haploid variant calling and core genome alignment Seemann T Snippy: fast bacterial variant calling from NGS reads (GitHub) SnpEff Genomic variant annotations and functional effect prediction toolbox. Cingolani P, Platts A, Wang LL, Coon M, Nguyen T, Wang L, Land SJ, Lu X, Douglas M A program for annotating and predicting the effects of single nucleotide polymorphisms, SnpEff: SNPs in the genome of Drosophila melanogaster strain w1118; iso-2; iso-3. Fly 6(2), 80-92 (2012) snp-dists Pairwise SNP distance matrix from a FASTA sequence alignment Seemann T snp-dists - Pairwise SNP distance matrix from a FASTA sequence alignment. (GitHub) SNP-sites Rapidly extracts SNPs from a multi-FASTA alignment. Page AJ, Taylor B, Delaney AJ, Soares J, Seemann T, Keane JA, Harris SR SNP-sites: rapid efficient extraction of SNPs from multi-FASTA alignments. Microbial Genomics 2.4\u2005(2016) Sourmash Compute and compare MinHash signatures for DNA data sets. Brown CT, Irber L sourmash: a library for MinHash sketching of DNA . JOSS 1, 27 (2016) SPAdes An assembly toolkit containing various assembly pipelines. Bankevich A, Nurk S, Antipov D, Gurevich AA, Dvorkin M, Kulikov AS, Lesin VM, Nikolenko SI, Pham S, Prjibelski AD, Pyshkin AV, Sirotkin AV, Vyahhi N, Tesler G, Alekseyev MA, Pevzner PA SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing. Journal of computational biology 19.5 455-477 (2012) spaTyper Computational method for finding spa types. Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) spaTyper Database Database used by spaTyper Harmsen D, Claus H, Witte W, Rothg\u00e4nger J, Claus H, Turnwald D, and Vogel U Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003) SsuisSero Rapid Streptococcus suis serotyping Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub) staphopia-sccmec A standalone version of Staphopia's SCCmec typing method. Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018) TBProfiler Profiling tool for Mycobacterium tuberculosis to detect resistance and strain type Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019) Trimmomatic A flexible read trimming tool for Illumina NGS data Bolger AM, Lohse M, Usadel B Trimmomatic: a flexible trimmer for Illumina sequence data. Bioinformatics 30.15 2114-2120 (2014) Unicycler Hybrid assembly pipeline for bacterial genomes Wick RR, Judd LM, Gorrie CL, Holt KE Unicycler: Resolving bacterial genome assemblies from short and long sequencing reads. PLoS Comput. Biol. 13, e1005595 (2017) VCF-Annotator Add biological annotations to variants in a VCF file. Petit III RA VCF-Annotator: Add biological annotations to variants in a VCF file. (GitHub) Vcflib a simple C++ library for parsing and manipulating VCF files Garrison E Vcflib: A C++ library for parsing and manipulating VCF files (GitHub) Velvet Short read de novo assembler using de Bruijn graphs Zerbino DR, Birney E Velvet: algorithms for de novo short read assembly using de Bruijn graphs. Genome research 18.5 821-829 (2008) VSEARCH Versatile open-source tool for metagenomics Rognes T, Flouri T, Nichols B, Quince C, Mah\u00e9 F VSEARCH: a versatile open source tool for metagenomics. PeerJ 4, e2584 (2016) vt A tool set for short variant discovery in genetic sequence data. Tan A, Abecasis GR, Kang HM Unified representation of genetic variants. Bioinformatics 31(13), 2202-2204 (2015)","title":"Acknowledgements"},{"location":"acknowledgements/#acknowledgements","text":"Bactopia is truly a case of \"standing upon the shoulders of giants\" . Bactopia currently includes more than 132 datasets and software packages. Nearly every component uses, from the workflow, datasets, software packages, even the framework for this site, was created by others and made freely available to the public. I would like to personally extend my many thanks and gratitude to the authors of these software packages and public datasets. If you've made it this far, I owe you a beer \ud83c\udf7b (or coffee \u2615!) if we ever encounter one another in person. Really, thank you very much! Please Cite Datasets and Tools If you have used Bactopia in your work, please be sure to cite any datasets or software you may have used.","title":"Acknowledgements"},{"location":"acknowledgements/#influences","text":"","title":"Influences"},{"location":"acknowledgements/#nf-core","text":"nf-core is group of great individuals volunteering their time to create a set of curated Nextflow analysis pipelines. The nf-core Team is putting together some amazing practices that I think really strengthen the Nextflow community as a whole! Since the beginning I have always had the idea of Bactopia one day being apart of nf-core. Unfortunately, I think Bactopia is a much to big at this point to fit the nf-core mold, but that's OK! There are still many nf-core practices I've been able to adapt into Bactopia. Arguement parsing based on nf-core library All Bactopia Tools are adapted from nf-core/modules Testing implemented to follow nf-core/modules By implementing these practices, Bactopia I believe is much better pipeline to use. For this I'm very grateful to the nf-core community! Thank you! Ewels P, Peltzer A, Fillinger S, Patel H, Alneberg J, Wilm A, Garcia MU, Di Tommaso P, Nahnsen S The nf-core framework for community-curated bioinformatics pipelines. Nat Biotechnol. (2020)","title":"nf-core"},{"location":"acknowledgements/#public-datasets","text":"Below is a list of 19 public datasets that could have potentially been included during the Build Datasets step.","title":"Public Datasets"},{"location":"acknowledgements/#ariba-reference-datasets","text":"These datasets are available using Ariba's getref function. You can learn more about this function at Ariba's Wiki . ARG-ANNOT Gupta SK, Padmanabhan BR, Diene SM, Lopez-Rojas R, Kempf M, Landraud L, Rolain J-M ARG-ANNOT, a new bioinformatic tool to discover antibiotic resistance genes in bacterial genomes. Antimicrob. Agents Chemother 58, 212\u2013220 (2014) CARD Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) EcOH Ingle DJ, Valcanis M, Kuzevski A, Tauschek M, Inouye M, Stinear T, Levine MM, Robins-Browne RM, Holt KE In silico serotyping of E. coli from short read data identifies limited novel O-loci but extensive diversity of O:H serotype combinations within and between pathogenic lineages. Microbial Genomics , 2(7), e000064. (2016) MEGARes Lakin SM, Dean C, Noyes NR, Dettenwanger A, Ross AS, Doster E, Rovira P, Abdo Z, Jones KL, Ruiz J, Belk KE, Morley PS, Boucher C MEGARes: an antimicrobial resistance database for high throughput sequencing. Nucleic Acids Res. 45, D574\u2013D580 (2017) MEGARes 2.0 Doster E, Lakin SM, Dean CJ, Wolfe C, Young JG, Boucher C, Belk KE, Noyes NR, Morley PS MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Research , 48(D1), D561\u2013D569. (2020) NCBI Reference Gene Catalog Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) PlasmidFinder Carattoli A, Zankari E, Garc\u00eda-Fern\u00e1ndez A, Larsen MV, Lund O, Villa L, Aarestrup FM, Hasman H In silico detection and typing of plasmids using PlasmidFinder and plasmid multilocus sequence typing. Antimicrob. Agents Chemother. 58, 3895\u20133903 (2014) ResFinder Zankari E, Hasman H, Cosentino S, Vestergaard M, Rasmussen S, Lund O, Aarestrup FM, Larsen MV Identification of acquired antimicrobial resistance genes. J. Antimicrob. Chemother. 67, 2640\u20132644 (2012) SRST2 Inouye M, Dashnow H, Raven L-A, Schultz MB, Pope BJ, Tomita T, Zobel J, Holt KE SRST2: Rapid genomic surveillance for public health and hospital microbiology labs. Genome Med. 6, 90 (2014) VFDB Chen L, Zheng D, Liu B, Yang J, Jin Q VFDB 2016: hierarchical and refined dataset for big data analysis--10 years on. Nucleic Acids Res. 44, D694\u20137 (2016) VirulenceFinder Joensen KG, Scheutz F, Lund O, Hasman H, Kaas RS, Nielsen EM, Aarestrup FM Real-time whole-genome sequencing for routine typing, surveillance, and outbreak detection of verotoxigenic Escherichia coli . J. Clin. Microbiol. 52, 1501\u20131510 (2014)","title":"Ariba Reference Datasets"},{"location":"acknowledgements/#minmer-datasets","text":"Mash Refseq (release 88) Sketch Ondov BD, Starrett GJ, Sappington A, Kostic A, Koren S, Buck CB, Phillippy AM Mash Screen: high-throughput sequence containment estimation for genome discovery Genome Biol 20, 232 (2019) Sourmash Genbank LCA Signature Brown CT, Irber L sourmash: a library for MinHash sketching of DNA . JOSS 1, 27 (2016)","title":"Minmer Datasets"},{"location":"acknowledgements/#everything-else","text":"eggNOG 5.0 Database Huerta-Cepas J, Szklarczyk D, Heller D, Hern\u00e1ndez-Plaza A, Forslund SK, Cook H, Mende DR, Letunic I, Rattei T, Jensen LJ, von Mering C, Bork P eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated orthology resource based on 5090 organisms and 2502 viruses. Nucleic Acids Res. 47, D309\u2013D314 (2019) Genome Taxonomy Database Parks DH, Chuvochina M, Rinke C, Mussig AJ, Chaumeil P-A, Hugenholtz P GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy Nucleic Acids Research gkab776 (2021) MOB-suite Database Robertson J, Bessonov K, Schonfeld J, Nash JHE. Universal whole-sequence-based plasmid typing and its utility to prediction of host range and epidemiological surveillance. Microbial Genomics , 6(10)(2020) NCBI RefSeq Database O'Leary NA, Wright MW, Brister JR, Ciufo S, Haddad D, McVeigh R, Rajput B, Robbertse B, Smith-White B, Ako-Adjei D, Astashyn A, Badretdin A, Bao Y, Blinkova O0, Brover V, Chetvernin V, Choi J, Cox E, Ermolaeva O, Farrell CM, Goldfarb T, Gupta T, Haft D, Hatcher E, Hlavina W, Joardar VS, Kodali VK, Li W, Maglott D, Masterson P, McGarvey KM, Murphy MR, O'Neill K, Pujar S, Rangwala SH, Rausch D, Riddick LD, Schoch C, Shkeda A, Storz SS, Sun H, Thibaud-Nissen F, Tolstoy I, Tully RE, Vatsan AR, Wallin C, Webb D, Wu W, Landrum MJ, Kimchi A, Tatusova T, DiCuccio M, Kitts P, Murphy TD, Pruitt KD Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation. Nucleic Acids Res. 44, D733\u201345 (2016) PubMLST.org Jolley KA, Bray JE, Maiden MCJ Open-access bacterial population genomics: BIGSdb software, the PubMLST.org website and their applications. Wellcome Open Res 3, 124 (2018) SILVA rRNA Database Quast C, Pruesse E, Yilmaz P, Gerken J, Schweer T, Yarza P, Peplies J, Gl\u00f6ckner FO The SILVA ribosomal RNA gene database project: improved data processing and web-based tools. Nucleic Acids Res. 41, D590\u20136 (2013)","title":"Everything Else"},{"location":"acknowledgements/#software-included-in-bactopia","text":"Below are 113 of software packages used (directly and indirectly) by Bactopia. A link to the software page as well as the citation (if available) have been included. Abricate Mass screening of contigs for antimicrobial and virulence genes Seemann T Abricate: mass screening of contigs for antimicrobial and virulence genes (GitHub) AgrVATE Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) AMRFinderPlus Find acquired antimicrobial resistance genes and some point mutations in protein or assembled nucleotide sequences. Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) any2fasta Convert various sequence formats to FASTA Seemann T any2fasta: Convert various sequence formats to FASTA (GitHub) Aragorn Finds transfer RNA features (tRNA) Laslett D, Canback B ARAGORN, a program to detect tRNA genes and tmRNA genes in nucleotide sequences. Nucleic Acids Res . 32(1):11-6 (2004) Ariba Antimicrobial Resistance Identification By Assembly Hunt M, Mather AE, S\u00e1nchez-Bus\u00f3 L, Page AJ, Parkhill J, Keane JA, Harris SR ARIBA: rapid antimicrobial resistance genotyping directly from sequencing reads . Microb Genom 3, e000131 (2017) ART A set of simulation tools to generate synthetic next-generation sequencing reads Huang W, Li L, Myers JR, Marth GT ART: a next-generation sequencing read simulator. Bioinformatics 28, 593\u2013594 (2012) assembly-scan Generate basic stats for an assembly. Petit III RA assembly-scan: generate basic stats for an assembly (GitHub) Bakta Rapid & standardized annotation of bacterial genomes & plasmids Schwengers O, Jelonek L, Dieckmann MA, Beyvers S, Blom J, Goesmann A Bakta - rapid and standardized annotation of bacterial genomes via alignment-free sequence identification. Microbial Genomics 7(11) (2021) Barrnap Bacterial ribosomal RNA predictor Seemann T Barrnap: Bacterial ribosomal RNA predictor (GitHub) BBTools BBTools is a suite of fast, multithreaded bioinformatics tools designed for analysis of DNA and RNA sequence data. Bushnell B BBMap short read aligner, and other bioinformatic tools. (Link) BCFtools Utilities for variant calling and manipulating VCFs and BCFs. Danecek P, Bonfield JK, Liddle J, Marshall J, Ohan V, Pollard MO, Whitwham A, Keane T, McCarthy SA, Davies RM, Li H Twelve years of SAMtools and BCFtools GigaScience Volume 10, Issue 2 (2021) Bedtools A powerful toolset for genome arithmetic. Quinlan AR, Hall IM BEDTools: a flexible suite of utilities for comparing genomic features . Bioinformatics 26, 841\u2013842 (2010) BLAST Basic Local Alignment Search Tool Camacho C, Coulouris G, Avagyan V, Ma N, Papadopoulos J, Bealer K, Madden TL BLAST+: architecture and applications . BMC Bioinformatics 10, 421 (2009) Bowtie2 A fast and sensitive gapped read aligner Langmead B, Salzberg SL Fast gapped-read alignment with Bowtie 2. Nat. Methods. 9, 357\u2013359 (2012) BWA Burrow-Wheeler Aligner for short-read alignment Li H Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM . arXiv [q-bio.GN] (2013) CD-HIT Accelerated for clustering the next-generation sequencing data Li W, Godzik A Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences . Bioinformatics 22, 1658\u20131659 (2006) CD-HIT-EST Accelerated for clustering the next-generation sequencing data Fu L, Niu B, Zhu Z, Wu S, Li W CD-HIT: accelerated for clustering the next-generation sequencing data . Bioinformatics 28, 3150\u20133152 (2012) CheckM Assess the quality of microbial genomes recovered from isolates, single cells, and metagenomes Parks DH, Imelfort M, Skennerton CT, Hugenholtz P, Tyson GW CheckM: assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. Genome Res 25, 1043\u20131055 (2015) ClonalFramML Efficient Inference of Recombination in Whole Bacterial Genomes Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) DIAMOND Accelerated BLAST compatible local sequence aligner. Buchfink B, Xie C, Huson DH Fast and sensitive protein alignment using DIAMOND. Nat. Methods. 12, 59\u201360 (2015) ECTyper In-silico prediction of Escherichia coli serotype Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub) eggNOG-mapper Fast genome-wide functional annotation through orthology assignment Huerta-Cepas J, Forslund K, Coelho LP, Szklarczyk D, Jensen LJ, von Mering C, Bork P Fast Genome-Wide Functional Annotation through Orthology Assignment by eggNOG-Mapper. Mol. Biol. Evol. 34, 2115\u20132122 (2017) emmtyper emm Automatic Isolate Labeller Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub) FastANI Fast Whole-Genome Similarity (ANI) Estimation Jain C, Rodriguez-R LM, Phillippy AM, Konstantinidis KT, Aluru S High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries. Nat. Commun. 9, 5114 (2018) FastQC A quality control analysis tool for high throughput sequencing data. Andrews S FastQC: a quality control tool for high throughput sequence data. (WebLink) fastq-dl Download FASTQ files from SRA or ENA repositories. Petit III RA fastq-dl: Download FASTQ files from SRA or ENA repositories. (GitHub) fastq-scan Output FASTQ summary statistics in JSON format Petit III RA fastq-scan: generate summary statistics of input FASTQ sequences. (GitHub) FastTree Approximately-maximum-likelihood phylogenetic trees Price MN, Dehal PS, Arkin AP FastTree 2 \u2013 Approximately Maximum-Likelihood Trees for Large Alignments. PLoS One 5, e9490 (2010) FLASH A fast and accurate tool to merge paired-end reads. Mago\u010d T, Salzberg SL FLASH: fast length adjustment of short reads to improve genome assemblies. Bioinformatics 27.21 2957-2963 (2011) Flye De novo assembler for single molecule sequencing reads using repeat graphs Kolmogorov M, Yuan J, Lin Y, Pevzner P Assembly of Long Error-Prone Reads Using Repeat Graphs Nature Biotechnology (2019) freebayes Bayesian haplotype-based genetic polymorphism discovery and genotyping Garrison E, Marth G Haplotype-based variant detection from short-read sequencing. arXiv preprint arXiv:1207.3907 [q-bio.GN] (2012) GAMMA Gene Allele Mutation Microbial Assessment Stanton RA, Vlachos N, Halpin AL GAMMA: a tool for the rapid identification, classification, and annotation of translated gene matches from sequencing data. Bioinformatics (2021) GNU Parallel A shell tool for executing jobs in parallel Tange O GNU Parallel (2018) GTDB-Tk A toolkit for assigning objective taxonomic classifications to bacterial and archaeal genomes Chaumeil PA, Mussig AJ, Hugenholtz P, Parks DH GTDB-Tk: a toolkit to classify genomes with the Genome Taxonomy Database. Bioinformatics (2019) hicap in silico typing of the H. influenzae cap locus Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019) HMMER Biosequence analysis using profile hidden Markov models Eddy SR Accelerated Profile HMM Searches. PLoS Comput. Biol. 7, e1002195 (2011) HpsuisSero Rapid Haemophilus parasuis serotyping Lui J HpsuisSero: Rapid Haemophilus parasuis serotyping (GitHub) Infernal Searches DNA sequence databases for RNA structure and sequence similarities Nawrocki EP, Eddy SR Infernal 1.1: 100-fold faster RNA homology searches. Bioinformatics 29(22), 2933-2935 (2013) IQ-TREE Efficient phylogenomic software by maximum likelihood Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Used for automatic model selection Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Used to conduct ultrafast bootstrapping Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018) ISMapper IS mapping software Hawkey J, Hamidian M, Wick RR, Edwards DJ, Billman-Jacobe H, Hall RM, Holt KE ISMapper: identifying transposase insertion sites in bacterial genomes from short read sequence data . BMC Genomics 16, 667 (2015) Kaptive Surface polysaccharide loci for Klebsiella pneumoniae species complex and Acinetobacter baumannii genomes Wyres KL, Wick RR, Gorrie C, Jenney A, Follador R, Thomson NR, Holt KE Identification of Klebsiella capsule synthesis loci from whole genome data. Microbial genomics 2(12) (2016) Kleborate Genotyping tool for Klebsiella pneumoniae and its related species complex Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021) KMC Fast and frugal disk based k-mer counter Deorowicz S, Kokot M, Grabowski Sz, Debudaj-Grabysz A KMC 2: Fast and resource-frugal k-mer counting Bioinformatics 31(10):1569\u20131576 (2015) Kraken2 Wood DE, Lu J, Langmead B Improved metagenomic analysis with Kraken 2. Genome Biology , 20(1), 257. (2019) legsta In silico Legionella pneumophila Sequence Based Typing Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub) Lighter Fast and memory-efficient sequencing error corrector Song L, Florea L, Langmead B Lighter: Fast and Memory-efficient Sequencing Error Correction without Counting . Genome Biol. 15(11):509 (2014) LisSero In silico serotype prediction for Listeria monocytogenes Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub) MAFFT Multiple alignment program for amino acid or nucleotide sequences Katoh K, Standley DM MAFFT multiple sequence alignment software version 7: improvements in performance and usability. Mol. Biol. Evol. 30, 772\u2013780 (2013) Mash Fast genome and metagenome distance estimation using MinHash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) Mash High-throughput sequence containment estimation Ondov BD, Starrett GJ, Sappington A, Kostic A, Koren S, Buck CB, Phillippy AM Mash Screen: high-throughput sequence containment estimation for genome discovery Genome Biol 20, 232 (2019) Mashtree Create a tree using Mash distances Katz LS, Griswold T, Morrison S, Caravas J, Zhang S, den Bakker HC, Deng X, Carleton HA Mashtree: a rapid comparison of whole genome sequence files. Journal of Open Source Software , 4(44), 1762 (2019) maskrc-svg Masks recombination as detected by ClonalFrameML or Gubbins Kwong J maskrc-svg - Masks recombination as detected by ClonalFrameML or Gubbins and draws an SVG. (GitHub) McCortex De novo genome assembly and multisample variant calling Turner I, Garimella KV, Iqbal Z, McVean G Integrating long-range connectivity information into de Bruijn graphs. Bioinformatics 34, 2556\u20132565 (2018) Medaka Sequence correction provided by ONT Research ONT Research Medaka: Sequence correction provided by ONT Research (GitHub) meningotype In silico serotyping, finetyping and Bexsero antigen sequence typing of Neisseria meningitidis Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub) MEGAHIT Ultra-fast and memory-efficient (meta-)genome assembler Li D, Liu C-M, Luo R, Sadakane K, Lam T-W MEGAHIT: an ultra-fast single-node solution for large and complex metagenomics assembly via succinct de Bruijn graph. Bioinformatics 31.10 1674-1676 (2015) mlst Scan contig files against PubMLST typing schemes Seemann T mlst: scan contig files against PubMLST typing schemes (GitHub) MinCED Mining CRISPRs in Environmental Datasets Skennerton C MinCED: Mining CRISPRs in Environmental Datasets (GitHub) Miniasm Ultrafast de novo assembly for long noisy reads (though having no consensus step) Li H Miniasm: Ultrafast de novo assembly for long noisy reads (GitHub) Minimap2 A versatile pairwise aligner for genomic and spliced nucleotide sequences Li H Minimap2: pairwise alignment for nucleotide sequences. Bioinformatics 34:3094-3100 (2018) MOB-suite Software tools for clustering, reconstruction and typing of plasmids from draft assemblies Robertson J, Nash JHE MOB-suite: software tools for clustering, reconstruction and typing of plasmids from draft assemblies. Microbial Genomics 4(8). (2018) NanoPlot Plotting scripts for long read sequencing data De Coster W, D\u2019Hert S, Schultz DT, Cruts M, Van Broeckhoven C NanoPack: visualizing and processing long-read sequencing data Bioinformatics Volume 34, Issue 15 (2018) Nanoq Minimal but speedy quality control for nanopore reads in Rust Steinig E Nanoq: Minimal but speedy quality control for nanopore reads in Rust (GitHub) ncbi-genome-download Scripts to download genomes from the NCBI FTP servers Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub) Nextflow A DSL for data-driven computational pipelines. Di Tommaso P, Chatzou M, Floden EW, Barja PP, Palumbo E, Notredame C Nextflow enables reproducible computational workflows. Nat. Biotechnol. 35, 316\u2013319 (2017) ngmaster In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub) nhmmer DNA homology search with profile HMMs. Wheeler TJ, Eddy SR nhmmer: DNA homology search with profile HMMs. Bioinformatics 29, 2487\u20132489 (2013) phyloFlash A pipeline to rapidly reconstruct the SSU rRNAs and explore phylogenetic composition of an illumina (meta)genomic dataset. Gruber-Vodicka HR, Seah BKB, Pruesse E phyloFlash: Rapid Small-Subunit rRNA Profiling and Targeted Assembly from Metagenomes mSystems 5 (2020) Pigz A parallel implementation of gzip for modern multi-processor, multi-core machines. Adler M. pigz: A parallel implementation of gzip for modern multi-processor, multi-core machines. Jet Propulsion Laboratory (2015) Pilon An automated genome assembly improvement and variant detection tool Walker BJ, Abeel T, Shea T, Priest M, Abouelliel A, Sakthikumar S, Cuomo CA, Zeng Q, Wortman J, Young SK, Earl AM Pilon: an integrated tool for comprehensive microbial variant detection and genome assembly improvement. PloS one 9.11 e112963 (2014) PIRATE A toolbox for pangenome analysis and threshold evaluation. Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019) Porechop adapter trimmer for Oxford Nanopore reads Wick RR, Judd LM, Gorrie CL, Holt KE. Completing bacterial genome assemblies with multiplex MinION sequencing. Microb Genom. 3(10):e000132 (2017) pplacer Phylogenetic placement and downstream analysis Matsen FA, Kodner RB, Armbrust EV pplacer: linear time maximum-likelihood and Bayesian phylogenetic placement of sequences onto a fixed reference tree. BMC Bioinformatics 11, 538 (2010) Prodigal Fast, reliable protein-coding gene prediction for prokaryotic genomes. Hyatt D, Chen G-L, LoCascio PF, Land ML, Larimer FW, Hauser LJ Prodigal: prokaryotic gene recognition and translation initiation site identification. BMC Bioinformatics 11.1 119 (2010) Prokka Rapid prokaryotic genome annotation Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014) QUAST Quality Assessment Tool for Genome Gurevich A, Saveliev V, Vyahhi N, Tesler G QUAST: quality assessment tool for genome assemblies. Bioinformatics 29, 1072\u20131075 (2013) Racon Ultrafast consensus module for raw de novo genome assembly of long uncorrected reads Vaser R, Sovi\u0107 I, Nagarajan N, \u0160iki\u0107 M Fast and accurate de novo genome assembly from long uncorrected reads. Genome Res 27, 737\u2013746 (2017) Rasusa Randomly subsample sequencing reads to a specified coverage Hall MB Rasusa: Randomly subsample sequencing reads to a specified coverage. (2019). Raven De novo genome assembler for long uncorrected reads Vaser R, \u0160iki\u0107 M Time- and memory-efficient genome assembly with Raven. Nat Comput Sci 1, 332\u2013336 (2021) Resistance Gene Identifier (RGI) Software to predict resistomes from protein or nucleotide data, based on homology and SNP models. Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) RNAmmer Consistent and rapid annotation of ribosomal RNA genes Lagesen K, Hallin P, R\u00f8dland EA, St\u00e6rfeldt H-H, Rognes T, Ussery DW RNAmmer: consistent annotation of rRNA genes in genomic sequences. Nucleic Acids Res 35.9: 3100-3108 (2007) Roary Rapid large-scale prokaryote pan genome analysis Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015) samclip Filter SAM file for soft and hard clipped alignments Seemann T Samclip: Filter SAM file for soft and hard clipped alignments (GitHub) Samtools Tools for manipulating next-generation sequencing data Li H, Handsaker B, Wysoker A, Fennell T, Ruan J, Homer N, Marth G, Abecasis G, Durbin R The Sequence Alignment/Map format and SAMtools . Bioinformatics 25, 2078\u20132079 (2009) Scoary Pan-genome wide association studies Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016) SeqSero2 Salmonella serotype prediction from genome sequencing data Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019) Seqtk A fast and lightweight tool for processing sequences in the FASTA or FASTQ format. Li H Toolkit for processing sequences in FASTA/Q formats (GitHub) ShigaTyper Shigella serotype from Illumina or Oxford Nanopore reads Wu Y, Lau HK, Lee T, Lau DK, Payne J In Silico Serotyping Based on Whole-Genome Sequencing Improves the Accuracy of Shigella Identification. Applied and Environmental Microbiology , 85(7). (2019) Shovill Faster assembly of Illumina reads Seemann T Shovill: De novo assembly pipeline for Illumina paired reads (GitHub) SignalP SISTR (Salmonella In Silico Typing Resource) command-line tool Petersen TN, Brunak S, von Heijne G, Nielsen H SignalP 4.0: discriminating signal peptides from transmembrane regions. Nature methods 8.10: 785 (2011) SISTR Finds signal peptide features in CDS Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016) SKESA Strategic Kmer Extension for Scrupulous Assemblies Souvorov A, Agarwala R, Lipman DJ SKESA: strategic k-mer extension for scrupulous assemblies. Genome Biology 19:153 (2018) Snippy Rapid haploid variant calling and core genome alignment Seemann T Snippy: fast bacterial variant calling from NGS reads (GitHub) SnpEff Genomic variant annotations and functional effect prediction toolbox. Cingolani P, Platts A, Wang LL, Coon M, Nguyen T, Wang L, Land SJ, Lu X, Douglas M A program for annotating and predicting the effects of single nucleotide polymorphisms, SnpEff: SNPs in the genome of Drosophila melanogaster strain w1118; iso-2; iso-3. Fly 6(2), 80-92 (2012) snp-dists Pairwise SNP distance matrix from a FASTA sequence alignment Seemann T snp-dists - Pairwise SNP distance matrix from a FASTA sequence alignment. (GitHub) SNP-sites Rapidly extracts SNPs from a multi-FASTA alignment. Page AJ, Taylor B, Delaney AJ, Soares J, Seemann T, Keane JA, Harris SR SNP-sites: rapid efficient extraction of SNPs from multi-FASTA alignments. Microbial Genomics 2.4\u2005(2016) Sourmash Compute and compare MinHash signatures for DNA data sets. Brown CT, Irber L sourmash: a library for MinHash sketching of DNA . JOSS 1, 27 (2016) SPAdes An assembly toolkit containing various assembly pipelines. Bankevich A, Nurk S, Antipov D, Gurevich AA, Dvorkin M, Kulikov AS, Lesin VM, Nikolenko SI, Pham S, Prjibelski AD, Pyshkin AV, Sirotkin AV, Vyahhi N, Tesler G, Alekseyev MA, Pevzner PA SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing. Journal of computational biology 19.5 455-477 (2012) spaTyper Computational method for finding spa types. Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) spaTyper Database Database used by spaTyper Harmsen D, Claus H, Witte W, Rothg\u00e4nger J, Claus H, Turnwald D, and Vogel U Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003) SsuisSero Rapid Streptococcus suis serotyping Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub) staphopia-sccmec A standalone version of Staphopia's SCCmec typing method. Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018) TBProfiler Profiling tool for Mycobacterium tuberculosis to detect resistance and strain type Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019) Trimmomatic A flexible read trimming tool for Illumina NGS data Bolger AM, Lohse M, Usadel B Trimmomatic: a flexible trimmer for Illumina sequence data. Bioinformatics 30.15 2114-2120 (2014) Unicycler Hybrid assembly pipeline for bacterial genomes Wick RR, Judd LM, Gorrie CL, Holt KE Unicycler: Resolving bacterial genome assemblies from short and long sequencing reads. PLoS Comput. Biol. 13, e1005595 (2017) VCF-Annotator Add biological annotations to variants in a VCF file. Petit III RA VCF-Annotator: Add biological annotations to variants in a VCF file. (GitHub) Vcflib a simple C++ library for parsing and manipulating VCF files Garrison E Vcflib: A C++ library for parsing and manipulating VCF files (GitHub) Velvet Short read de novo assembler using de Bruijn graphs Zerbino DR, Birney E Velvet: algorithms for de novo short read assembly using de Bruijn graphs. Genome research 18.5 821-829 (2008) VSEARCH Versatile open-source tool for metagenomics Rognes T, Flouri T, Nichols B, Quince C, Mah\u00e9 F VSEARCH: a versatile open source tool for metagenomics. PeerJ 4, e2584 (2016) vt A tool set for short variant discovery in genetic sequence data. Tan A, Abecasis GR, Kang HM Unified representation of genetic variants. Bioinformatics 31(13), 2202-2204 (2015)","title":"Software Included In Bactopia"},{"location":"changelog/","text":"Changelog \u00b6 v2.1.0 bactopia/bactopia \"Silver Mist\" - 2022/06/08 \u00b6 Added \u00b6 --use_bakta to replace Prokka with Bakta in main workflow Split Bakta into two processes download and run added shigatyper to Merlin custom profile for arcc bactopia prepare error message when nothing found, and --examples for example use cases renamed --fastqs to --samples to better reflect its usage (fastqs and assemblies) add --check_samples to validate user generated FOFNs --short_polish for short read polishing for long-read assemblies Moved Ariba to Bactopia Tools bump versions in Bactopia envs bump Bactopia Tool versions amrfinder+ version to 3.10.30 gtdb version to 2.1.0 mlst version to 2.22.0 Bactopia Tools ( bactopia --wf <NAME> ) ariba - Gene identification by local assemblies gamma - Identification, classification, and annotation of translated gene matches shigatyper : Shigella serotype from Illumina or Oxford Nanopore reads Fixed \u00b6 @nickjhathaway Fixed assembly_level in bactopia datasets and auto call_variants bactopia search now supports ONT reads vcf-annotator unable to write to /dev/stdout typo in bactopia download when using singularity bactopia download will not rebuild envs its already built in a run --include_genus with bactopia datasets now works with multiple samples Parameters to copy optional species-specific files in bactopia datasets Don't use AUTO for IQ-TREE cpus gtdb download working again empty FASTQs after adapter and phix removal low read count error for ONT samples Removed sequence_type environment v2.0.3 bactopia/bactopia \"King Cobra\" - 2022/03/23 \u00b6 Added \u00b6 logo and new metro style workflow added test profile for easy testing mashdist now outputs a merged TSV print missing required parameters in Bactopia Tools bump bakta to v1.4.0 Fixed \u00b6 typo in bakta subworkflow ismapper not available in bactopia-tools.nf kraken2 not available in bactopia-tools.nf Traits file being required for pangenome mashtree module not collecting all FASTA tests for ISMapper v2.0.2 bactopia/bactopia \"Black Mamba\" - 2022/02/22 \u00b6 Added \u00b6 bactopia download which merges the bactopia build and bactopia pull commands modules can now use prebuilt envs --available_species to print the species in a bactopia dataset --bbduk_opts to fine tune bbduk set quay as default docker registry Let Nextflow handle stdout and stderr added hpsuissero , legsta , sistr , ssuissero to Merlin Bactopia Tools ( bactopia --wf <NAME> ) amrfinderplus : Identify antimicrobial resistance in genes or proteins abricate : Mass screening of contigs for antimicrobial and virulence genes checkm : Assess the assembly quality of your samples hpsuissero : Serotype prediction of Haemophilus parasuis assemblies kraken2 : Taxonomic classification of sequence reads legsta : Typing of Legionella pneumophila assemblies mlst : Scan contig files against PubMLST typing schemes mobsuite : Reconstruct and annotate plasmids in bacterial assemblies rgi : Predict antibiotic resistance from assemblies sistr : Serovar prediction of Salmonella assemblies ssuissero : Serotype prediction of Streptococcus suis assemblies Fixed \u00b6 toInteger on null genome size Index out of bounds in mlst-blast.py (caused by non allele columns) FOFN will fail if sample name is null improve available workflow logic PIRATE not exporting gene_presence_absence.csv correctly channel imports for scoary workflow argument type mismatch when using --use_roary missing channel when agrvate not ran as staphtyper float required options to the top when missing broken tests due to changes bactopia datasets including hidden directories Bioperl pinnings for prokka and pirate v2.0.1 bactopia/bactopia \"Red Roc\" - 2022/01/06 \u00b6 Added \u00b6 Merlin for auto selection of species-specific tools based --ask_merlin to execute the Merlin subworkflow in Bactopia Schema compatible with NF-Tower --skip_qc_plots to skip FastQC and Nanoplot Disable CheckM by default, must use --run_checkm --cluster_opts for passing additional options to SLURM inclusion of local files (assembly, gff) in some subworkflows workflow for dev conda builds all subworkflows can be imported on other workflows Bactopia Tools ( bactopia --wf <NAME> ) gtdb : Identify marker genes and assign taxonomic classifications mashdist : Calculate Mash distances between sequences merlin : MinmER assisted species-specific bactopia tool seLectIoN Fixed \u00b6 Resource over allocation for java related programs (-Xmx) ordering of skipped steps when --datasets not used logic in container selection for nf-core modules channel manipulation in ncbigenomedownload missing logic for fastani version captures in subworkflows spell check for species with [ or ] in their names version outputs for Staphtyper subworkflow use process names in version.yml CSVTK_CONCAT empty channels options.suffix now used as prefix in modules v2.0.0 bactopia/bactopia \"Red Hawk\" - 2021/12/05 \u00b6 With Bactopia v2 comes a lot of changes! I would like to extend a huge thanks to Davi Marcon and Abhinav Sharma for their work initially converting Bactopia to DSL2. Your efforts were the momentum I needed to get the ball rolling on Bactopia v2. Thank you very much for taking your time to make such a siginificant contribution! Added \u00b6 support for Nanopore reads staphopia as a named pipeline (alias for bactopia --wf staphopia ) for S. aureus genomes bactopia/bactopia-tests repo with test data walkthrough for testing bactopia-datasets/staphylococcus_aureus repo with curatated S. aureus datasets per-module testing via pytest (100+ tests and 7000+ outputs tested) per-module meta.yml and params.json for auto-building docs site framefork for adding new Bactopia Tools 19 total Bactopia Tools ( bactopia --wf <NAME> ) Subworkflows (3) eggnog : Functional annotation of proteins using orthologous groups and phylogenies pangenome : Pangenome analysis with optional core-genome phylogeny staphtyper : Determine the agr, spa and SCCmec types for Staphylococcus aureus genomes Modules (16): agrvate : Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. bakta : Rapid annotation of bacterial genomes and plasmids ectyper : In-silico prediction of Escherichia coli serotype emmtyper : emm-typing of Streptococcus pyogenes assemblies fastani : fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI) hicap : Identify cap locus serotype and structure in your Haemophilus influenzae assemblies ismapper : Identify insertion sites positions in bacterial genomes kleborate : Screening Klebsiella genome assemblies for MLST, sub-species, and other related genes of interest lissero : Serogroup typing prediction for Listeria monocytogenes mashtree : Quickly create a tree using Mash distances meningotype : Serotyping of Neisseria meningitidis ngmaster : Multi-antigen sequence typing for Neisseria gonorrhoeae seqsero2 : Salmonella serotype prediction from reads or assemblies spatyper : Computational method for finding spa types in Staphylococcus aureus staphopiasccmec : Primer based SCCmec typing of Staphylococcus aureus genomes tbprofiler : Detect resistance and lineages of Mycobacterium tuberculosis genomes Use mamba instead of conda for env building Reduced total Conda envs/Docker containers down to 7 (previously 12 not including bactopia tools) default to compressed outputs ( --skip_compression to output uncompressed outputs) Tutorial outputs made available update github actions Fixed \u00b6 Cache issue causing -resume to fail amrfinder+ database not compatible error incorrectly parsed system memory Adapted from nf-core \u00b6 nf-core pytest setup nf-core/modules for bactopia tools Bactopia v2 release contributed 20+ modules to nf-core/modules nf-core/tools arg parser adapted to import params and usage based on config file Process Consolidation \u00b6 makeblastdb -> assemble_genome call_variants , download_reference -> call_variants fastq_status , estiamte_genome_size -> gather_samples count_31mers -> minmer_sketch Removed \u00b6 bactopia tools -> Handled by Nextflow now ( bactopia --wf <NAME> ) bactopia versions -> Program versions are output ever run now. v1.7.1 bactopia/bactopia \"Shellbuster\" - 2021/06/04 \u00b6 Added \u00b6 bumped GTDB to v1.5.0 added soft ulimit for staph-typer Fixed \u00b6 Matched PIRATE's parameter syntax for the tools staph-typer now uses GetBaseName 'Removed' \u00b6 PLSDB references in bactopia datasets v1.7.0 bactopia/bactopia \"Chocobo Wand\" - 2021/04/27 \u00b6 Added \u00b6 Bactopia Tool staph_typer for agr, spa, and sccmec typing --min_coverage parameter to filter based on min coverage 'Removed' \u00b6 plasmid_blast no longer apart of main workflow v1.6.5 bactopia/bactopia \"Z's Trident\" - 2021/03/30 \u00b6 Added \u00b6 version pins to process envs Fixed \u00b6 syntax for sourmash 4.0 v1.6.4 bactopia/bactopia \"Trident +1\" - 2021/03/26 \u00b6 Added \u00b6 added Python3.6+ to all environments v1.6.3 bactopia/bactopia \"Trident\" - 2021/03/25 \u00b6 Added \u00b6 extra fields to mlst-blast.py outputs added Python3 to qc_reads environment Fixed \u00b6 rstrip on empty extra fields in mlst profile different BLAST+ software versions mismatch tbb pinnings --help and --version for bactopia tools v1.6.2 bactopia/bactopia \"Fuscina\" - 2021/03/19 \u00b6 Added \u00b6 inputs are checked to be gzipped (this does not include FOFN) --skip_amr to skip AMRFinder+ analysis new bactopia tool for hicap unicycler can be used for Illumina reads only ( --assembler unicycler ) Fixed \u00b6 AMRFinder+ software and database version mismatch check-fastqs.py syntax errors with prints ismapper tool processing of include/exclude files v1.6.1 bactopia/bactopia \"Obelisk\" - 2021/02/22 \u00b6 Fixed \u00b6 sample names with \".\" in them breaking auto variant calling contig naming incompatible with GenBank v1.6.0 bactopia/bactopia \"Harpoon\" - 2021/01/22 \u00b6 Added \u00b6 bactopia pull to pre-build Singularity images --singularity_cache parameter to set location of image downloads --registry to choose Docker registry to use (DockerHub, GitHub, Quay) --max_downloads sets maximum number of downloads (FASTQ/assembly) allowed at once --min_time sets the minimum amount of time a job should be given bactopia search now uses POST requests, and groups accessions into single query strip HTML from FASTA headers used in BLAST Dockerfiles now have conda.md5 label to determine if rebuild is necessary MD5 is updated in Dockerfile when env is updated AMRFinder+ database is now provided by bactopia datasets Parameterized profile (slurm, awsbatch, etc...) variables bactopia build will retry in case of HTTP connection issues --include_tool will build Bactopia Tool environments GitHub Actions build Docker containers on new release (or manual trigger) test that the Conda environment yamls are still valid test bactopia with conda on Linux and OSX test bactopia on Linux with Docker and Singularity Fixed \u00b6 redundant environment version files failed FASTQ/Assembly downloads no longer stop whole run --max_retry is honored now antimicrobial_resistance process honors amrdir variable change directory antimicrobial_resistance to antimicrobial-resistance rename check_staging.py to check-staging.py for consistency Bactopia not producing valid exit code on failure Removed \u00b6 --containerPath variable is replaced by --singularity_cache Native Singularity recipes, will now convert Docker to Singularity docs are now on bactopia.github.io repo v1.5.6 bactopia/bactopia \"Metal Slime Earring\" - 2021/01/13 \u00b6 Added \u00b6 tweaks to the CI (via GitHub Actions) docker containers use quay.io now docker containers now use conda-pack --nfconfig will skip the conda environment build step input accessions are checked to be Assembly or Experiment accessions improved version increment script executor profiles can be configured by parameters Fixed \u00b6 phyloflash and download_reference environment errors environment path in Bactopia Tools Dockerfile and Singularity recipes moved version from conda yaml to conda version file streamlined Docker recipes undefined --ftp_only message typo in singularity profile stderr logged to file is also printed to screen qc_reads memory used now determined by base config v1.5.5 bactopia/bactopia \"Avenger's Earring\" - 2021/01/04 \u00b6 Added \u00b6 --prefix option for bactopia prepare date is included in bactopia summary output Fixed \u00b6 removed usage personal (rpetit3) conda channel aspera connect no longer supported shovill-se is now used from Bioconda updated conda environments (phyloflash broken) v1.5.4 bactopia/bactopia \"Nemesis Earring\" - 2020/12/17 \u00b6 Fixed \u00b6 quoted arguments being broken up (e.g. --species \"Staphylococcus aureus -> --species Staphylococcus ) mashtree tool failure to download with --accessions remove ncbi-genome-download header when using --dry-run undefined name variable in plasmid_blast custom work dir causing two -w parameters bactopia search results now contains all (illumina and non-illumina) v1.5.3 bactopia/bactopia \"Morion Earring\" - 2020/12/04 \u00b6 Added \u00b6 Changelog moved to docs recursive search for bactopia prepare allow multiple FASTQs per sample (FASTQs are merged) Fixed \u00b6 unable to run bactopia datasets without parameters PLSDB blast results in invalid JSON format Error message for unaccepted run_type v1.5.2 bactopia/bactopia \"Physical Earring\" - 2020/11/18 \u00b6 Fixed \u00b6 --skip_qc causing \"file not found\" qc_reads not honoring FINAL_BP and FINAL_READS checks v1.5.1 bactopia/bactopia \"Astral Earring\" - 2020/11/17 \u00b6 Fixed \u00b6 bactopia tools not a valid project name bactopia tools --cleanup_workdir unrecognized variable v1.5.0 bactopia/bactopia \"Cassie Earring\" - 2020/11/12 \u00b6 Added \u00b6 Conda environments will check if in sync with latest version now md5sums of all conda envs Verify species-specific datasets exist separate work dir for bactopia and bactopia tools --cleanup_workdir to delete work directory after successful run default values for bactopia datasets summary.json Fallback to NCBI Assembly when eUtils is down Additional pre-process QC checks OSX/Linux conda envs for Bactopia Tools Documentation edits and updates Bactopia and Nextflow versions are now output for logging purposes option to skip QC step ( --skip_qc ) bactopia datasets can now specify assembly level bactopia tools now use reusable conda envs bactopia tools for Roary and PIRATE can now include local assemblies Fixed \u00b6 Warn user if no completed genomes are available use of --genera for ncbi-genome-download improved genome_size handling explicit file passing for AWS Batch Memory estimates now floored PLSDB blast not being executed v1.4.11 bactopia/bactopia \"Metamorph Ring\" - 2020/09/19 \u00b6 Added \u00b6 bactopia build checks if each environment is built before building Can specify bactopia build to build a specific environment Removed build numbers in Conda environment yamls Created separate Conda yamls for Linux and Mac NCBI assembly accessions will retrieve the most current version (e.g. .1, .2, .3, etc...) Fixed \u00b6 bactopia datasets trailing whitespace in species names bactopia datasets random subsample missing specified species when --limit and --include_genus used GitLab CI OSX compatibility Adaptive resource allocations Datasets are checked for existence Variant calls against references with multiple chromosomes v1.4.10 bactopia/bactopia \"Jelly Ring\" - 2020/08/25 \u00b6 Added \u00b6 card is back as a default Ariba dataset Added timestamps to versions files Fixed \u00b6 bactopia search not creating --outdir gtdb tool not using prefix in outdir naming pirate tool using pangenome alignment instead of core Use of scratch causing logs to fail v1.4.9 bactopia/bactopia \"Toreador's Ring\" - 2020/08/23 \u00b6 Added \u00b6 Support for multiple accession bactopia search (SRA) Bactopia Tools: fastani , mashtree , pirate , roary (Assembly) Fixed \u00b6 Undefined variable in mapping_query.sh ENA API endpoint for bactopia search Updated GTDB-TK to 1.3.0 to support latest downloads FastANI tool merge_results in no longer a separate step ANI is now one-to-many calculations --reassemble misapplied v1.4.8 bactopia/bactopia \"Shikaree Ring\" - 2020/08/20 \u00b6 Added \u00b6 Versions are logged for Bactopia STDOUT/STDERR logs are kept for each sample can be skipped using --skip_logs Fixed \u00b6 Long sample names breaking Prokka annotation Syntax errors in Bactopia tools null values being tested as integers Ariba card and mlst downloads not working missing parameter in GTDB Bactopia tool v1.4.7 bactopia/bactopia \"Serket Ring\" - 2020/08/17 \u00b6 Added \u00b6 --no_cache to skip caching ncbi assembly info v1.4.6 bactopia/bactopia \"Astral Ring\" - 2020/08/17 \u00b6 Added \u00b6 Option to rebuild conda envs to default location Updated fastq-dl for sra-toolkit forced interaction workaround v1.4.5 bactopia/bactopia \"Bomb Queen Ring\" - 2020/08/13 \u00b6 Fixed \u00b6 --min_basepairs and --min_reads not being honored v1.4.4 bactopia/bactopia \"Vilma's Ring\" - 2020/08/13 \u00b6 Fixed \u00b6 annotate_genome name clashes Updated fastq-dl version to support new ENA API endpoint v1.4.3 bactopia/bactopia \"Sattva Ring\" - 2020/08/13 \u00b6 Added \u00b6 --skip_ariba option in bactopia datasets Fixed \u00b6 bactopia versions and bactopia citations improper execution Convert spaces to tabs in citation doc Corrected CheckM name in program version info file CARD no longer default Ariba dataset download for bactopia datasets v1.4.2 bactopia/bactopia \"Tamas Ring\" - 2020/08/10 \u00b6 Added \u00b6 added requirement checks of --accessions in bactopia datasets improved ENA spell check for species name Fixed \u00b6 file of accessions not working with bactopia datasets Dockerfile and Singularity being missed by update-version.sh v1.4.1 bactopia/bactopia \"Rajas Ring\" - 2020/08/06 \u00b6 Added \u00b6 Links to publication (woohoo!) Can pass a Prodigal training file to bactopia datasets Fixed \u00b6 Typos in the Docs blast_primers now uses blastn and blast_genes uses megablast validExitStatus deprecation warning v1.4.0 bactopia/bactopia \"Archer's Ring\" - 2020/07/01 \u00b6 Added \u00b6 New Bactopia Tools eggnog for functional annotation using eggNOG-mapper mashtree to create a tree using Mash distances pirate to create pangenome using PIRATE ismapper for insertion site discovery Documentation for new tools and tweaks to existing BTs roary and pirate can now be run on just completed genomes Can limit number of completed genomes downloaded where applicable bactopia datasets can provide list of RefSeq accessions to download bactopia search can now use BioSample and Run accessions bactopia search can select a subset of Experiments associated with a BioSample Support for organisms with multiple MLST schemas Assembly QC via QUAST and CheckM Assemblies (local or NCBI Assembly accession) as inputs for Bactopia Long reads as supplementary to paired end reads for hybrid assembly Tools versions are locked to the minor version, not the patch Fixed \u00b6 summary will now determine absolute path of inputs fastani improved user reference import went back a version on call_variants openjdk version all bactopia tools now put nextflow info in the same folder as outputs Typos in docs Bactopia Tools now check existence of include and exclude files Lots more documentation Updated citations/tools used by Bactopia Did I mention typos? Removed \u00b6 ISMapper as part of the main pipeline (its now a tool) insertion-sequences in bactopia datasets v1.3.1 bactopia/bactopia \"Emperor Hairpin\" - 2020/04/20 \u00b6 Added \u00b6 summary tool now gives reason for rank summary tools now splits failed into exclude and qc-failure Better documentation on how --cpus works in Nextflow Efficiency info when executed on standard profile split blast_query into blast_genes , blast_primers and blast_proteins mapping_query now creates multifasta of fastas at maps at once then splits per-base coverage into separate files --nfconfig users can provide their own Nextflow config file fastani users can provide their own reference now bactopia versions will print versions for tools used by Bactopia bactopia citations will print citations for tools and datasets used by Bactopia bactopia search can filter based on total bases, mean read length, and missing FASTQs blast queries results are only JSON format for easy parsing later added --compliant option for Prokka annotation Fixed \u00b6 build-containers.sh not working with Bactopia Tools Bactopia Tools container tools missing environment.yml Typo in fastani usage Samples with multiple QC errors counted for each error Incorrect ISMapper version typo in summary SLURM profile gtdb Singularity container not mounting path to GTDB database roary missing rename in containers blast_query results overwriting one another build-containers.sh now creates a \"latest\" tag bactopia tool roary outputs results based on the given prefix renamed --addgenes to --nogenes updated ASA\u00b3P citation Typos in Bactopia Tools docs Link in README.md v1.3.0 bactopia/bactopia \"Leaping Boots\" - 2020/02/19 \u00b6 Added \u00b6 bactopia tools (BT) framework docs for each tool subcommand to execute tools bactopia tools fastani - pairwise average nucleotide identity gtdb - assigning objective taxonomic classifications phyloflash - 16s assembly, alignment and tree roary - pan-genome and core genome tree summary - summary of results --include and --exclude to modify which samples used in BT analysis update-version.sh improvements can now set how Nextflow publishes outputs (copy, symlink, etc...) via --publish_mode Warning if output directory already exists and require --force to overwrite option ( --rfam ) to turn on ncRNA annotation in Prokka reduced \"README.md\" contents, instead point to documentation Updated acknowledgements and bibtex for citations Fixed \u00b6 nextflow.config version out of sync --available_datasets accessing not existent variable --available_datasets is tested before requiring inputs Make use of tbl2asn-forever adjusted how Bactopia is executed, nextflow run no longer pulls from github v1.2.4 bactopia/bactopia \"Rabbit Charm\" - 2019/12/20 \u00b6 Added \u00b6 --conda_help to be used for conda build test --skip_fastq_check to skip check that input FASTQs meet minimum requirements Undocumented parameters to the usage Fixed \u00b6 snippy not working with samtools 1.10 NXF_HOME variable is exported to the conda env location speed of checking if conda environments are built v1.2.3 bactopia/bactopia \"Tropical Punches +1\" - 2019/12/19 \u00b6 Added \u00b6 select-references selects latest assembly accession version (BioPython/Entrez) select-references skips assemblies that have been excluded from RefSeq test to for paired-end related errors (e.g. different read counts) --min_genome_size and --max_genome_size parameter for estimated genome sizes Check is also made after assembly update-version.sh improvements Better genome size estimates using Mash for high and low coverage sequences Script to update conda environments added --conda_help to be used for conda build test Fixed \u00b6 --random_tie_break always true not using latest assembly accession for ncbi-genome-download usage of assemblies that have been excluded from RefSeq allowing PE reads with different read counts to be processed (hint... they fail pretty quickly) failure to stop analysis of sample with low read counts coverage reported as 'inf' references to cgmlst in the setup datasets non-explicit patterns in publishDir low coverage/read errors after QC were not put in root dir snippy not working with samtools 1.10 v1.2.2 bactopia/bactopia \"Tropical Punches\" - 2019/10/22 \u00b6 Added \u00b6 Size of \"work\" directory to the execution summary User controlled overwrites of existing output files Check for unknown parameters at runtime FASTQ downloads from SRA (via fastq-dl and fasterq-dump) Documentation updates Script for building containers Fixed \u00b6 bactopia command now explicitly states which tag to use for Nextflow run Version info not updated in Dockerfile and Singularity Duplicated QC'd FASTQs nextflow: docker \"Memory limited without swap\" error Removed \u00b6 cgmlst support in bactopia datasets setup.py left over from pre-conda config v1.2.1 bactopia/bactopia \"Fruit Punches\" - 2019/10/17 \u00b6 Added \u00b6 bactopia build to build Conda environments Version info pulled from nextflow.config Set default values resource allocations Documentation on new changes Automatic building of Conda environments, if none exist --nfdir to determine where bactopia is being run from Fixed \u00b6 Never ending typos --datasets now, not --dataset <-(Typo) path for outputting Nextflow reports Typo in antimicrobial_resistance.sh (task.cpus not cpus) --species is now consistent between bactopia and bactopia datasets Bug when checking if specific species dataset exists, but no species datasets exist Cleaned up version update script Cleaned up usage Removed \u00b6 --max_cpus ability to limit total cores used, access to config is being deprecated in Nextflow --max_cpus since it is redudant to --cpus now v1.2.0 bactopia/bactopia \"Beestinger\" - 2019/10/16 \u00b6 Added \u00b6 --compress to compress certain outputs, default uncompressed Species name check in bactopia datasets Use requests package instead of urllib3 Added bactopia search to query ENA for list of Illumina accessions Documentation Feedback edits Output overview Additional program acknowledgements bibtex of citations missing parameters to usage info for --genome_size parameter bactopia search usage Workflow overview blastdbcmd compatible seqid to assembly fasta allows search for entries with sample name Mask low coverage regions in consensus (subs only) fasta Added --dry_run to build conda envs one at a time (prevent parallel issues) Added Singularity recipes Added SLURM config Fixed \u00b6 Never ending typos bactopia datasets lowercase species names not found in MLST schemas bactopia version no longer calls nextflow SEQUENCE_TYPE channel groups FASTQ and assembly MINMER_QUERY channel groups FASTQ and signature Ariba MLST always running with --noclean Bugs related --compress Reduced size of per-base coverage outputs Removed -parse_seqids from makeblastdb command, caused blast queries to fail genomeCoverageBed failing on empty BAM files Removed \u00b6 --clean_cache function v1.1.0 bactopia/bactopia \"Wooden Sword +1\" - 2019/09/19 \u00b6 Added \u00b6 NCBI's amrfinder Dockerfile for main bactopia install Completed documentation! Fixed \u00b6 insertion_sequences inputs are not now grouped into single channel Unintended FASTQ duplication via poor publishDir pattern v1.0.1 bactopia/bactopia \"Wooden Sword\" - 2019/09/12 \u00b6 Added \u00b6 README.md documentation Fixed \u00b6 call_variants_auto bug fixed documentation version numbers v1.0.0 bactopia/bactopia \"Wooden Sword\" - 2019/09/04 \u00b6 Initial release of bactopia/bactopia","title":"Changelog"},{"location":"changelog/#changelog","text":"","title":"Changelog"},{"location":"changelog/#v210-bactopiabactopia-silver-mist-20220608","text":"","title":"v2.1.0 bactopia/bactopia \"Silver Mist\" - 2022/06/08"},{"location":"changelog/#added","text":"--use_bakta to replace Prokka with Bakta in main workflow Split Bakta into two processes download and run added shigatyper to Merlin custom profile for arcc bactopia prepare error message when nothing found, and --examples for example use cases renamed --fastqs to --samples to better reflect its usage (fastqs and assemblies) add --check_samples to validate user generated FOFNs --short_polish for short read polishing for long-read assemblies Moved Ariba to Bactopia Tools bump versions in Bactopia envs bump Bactopia Tool versions amrfinder+ version to 3.10.30 gtdb version to 2.1.0 mlst version to 2.22.0 Bactopia Tools ( bactopia --wf <NAME> ) ariba - Gene identification by local assemblies gamma - Identification, classification, and annotation of translated gene matches shigatyper : Shigella serotype from Illumina or Oxford Nanopore reads","title":"Added"},{"location":"changelog/#fixed","text":"@nickjhathaway Fixed assembly_level in bactopia datasets and auto call_variants bactopia search now supports ONT reads vcf-annotator unable to write to /dev/stdout typo in bactopia download when using singularity bactopia download will not rebuild envs its already built in a run --include_genus with bactopia datasets now works with multiple samples Parameters to copy optional species-specific files in bactopia datasets Don't use AUTO for IQ-TREE cpus gtdb download working again empty FASTQs after adapter and phix removal low read count error for ONT samples Removed sequence_type environment","title":"Fixed"},{"location":"changelog/#v203-bactopiabactopia-king-cobra-20220323","text":"","title":"v2.0.3 bactopia/bactopia \"King Cobra\" - 2022/03/23"},{"location":"changelog/#added_1","text":"logo and new metro style workflow added test profile for easy testing mashdist now outputs a merged TSV print missing required parameters in Bactopia Tools bump bakta to v1.4.0","title":"Added"},{"location":"changelog/#fixed_1","text":"typo in bakta subworkflow ismapper not available in bactopia-tools.nf kraken2 not available in bactopia-tools.nf Traits file being required for pangenome mashtree module not collecting all FASTA tests for ISMapper","title":"Fixed"},{"location":"changelog/#v202-bactopiabactopia-black-mamba-20220222","text":"","title":"v2.0.2 bactopia/bactopia \"Black Mamba\" - 2022/02/22"},{"location":"changelog/#added_2","text":"bactopia download which merges the bactopia build and bactopia pull commands modules can now use prebuilt envs --available_species to print the species in a bactopia dataset --bbduk_opts to fine tune bbduk set quay as default docker registry Let Nextflow handle stdout and stderr added hpsuissero , legsta , sistr , ssuissero to Merlin Bactopia Tools ( bactopia --wf <NAME> ) amrfinderplus : Identify antimicrobial resistance in genes or proteins abricate : Mass screening of contigs for antimicrobial and virulence genes checkm : Assess the assembly quality of your samples hpsuissero : Serotype prediction of Haemophilus parasuis assemblies kraken2 : Taxonomic classification of sequence reads legsta : Typing of Legionella pneumophila assemblies mlst : Scan contig files against PubMLST typing schemes mobsuite : Reconstruct and annotate plasmids in bacterial assemblies rgi : Predict antibiotic resistance from assemblies sistr : Serovar prediction of Salmonella assemblies ssuissero : Serotype prediction of Streptococcus suis assemblies","title":"Added"},{"location":"changelog/#fixed_2","text":"toInteger on null genome size Index out of bounds in mlst-blast.py (caused by non allele columns) FOFN will fail if sample name is null improve available workflow logic PIRATE not exporting gene_presence_absence.csv correctly channel imports for scoary workflow argument type mismatch when using --use_roary missing channel when agrvate not ran as staphtyper float required options to the top when missing broken tests due to changes bactopia datasets including hidden directories Bioperl pinnings for prokka and pirate","title":"Fixed"},{"location":"changelog/#v201-bactopiabactopia-red-roc-20220106","text":"","title":"v2.0.1 bactopia/bactopia \"Red Roc\" - 2022/01/06"},{"location":"changelog/#added_3","text":"Merlin for auto selection of species-specific tools based --ask_merlin to execute the Merlin subworkflow in Bactopia Schema compatible with NF-Tower --skip_qc_plots to skip FastQC and Nanoplot Disable CheckM by default, must use --run_checkm --cluster_opts for passing additional options to SLURM inclusion of local files (assembly, gff) in some subworkflows workflow for dev conda builds all subworkflows can be imported on other workflows Bactopia Tools ( bactopia --wf <NAME> ) gtdb : Identify marker genes and assign taxonomic classifications mashdist : Calculate Mash distances between sequences merlin : MinmER assisted species-specific bactopia tool seLectIoN","title":"Added"},{"location":"changelog/#fixed_3","text":"Resource over allocation for java related programs (-Xmx) ordering of skipped steps when --datasets not used logic in container selection for nf-core modules channel manipulation in ncbigenomedownload missing logic for fastani version captures in subworkflows spell check for species with [ or ] in their names version outputs for Staphtyper subworkflow use process names in version.yml CSVTK_CONCAT empty channels options.suffix now used as prefix in modules","title":"Fixed"},{"location":"changelog/#v200-bactopiabactopia-red-hawk-20211205","text":"With Bactopia v2 comes a lot of changes! I would like to extend a huge thanks to Davi Marcon and Abhinav Sharma for their work initially converting Bactopia to DSL2. Your efforts were the momentum I needed to get the ball rolling on Bactopia v2. Thank you very much for taking your time to make such a siginificant contribution!","title":"v2.0.0 bactopia/bactopia \"Red Hawk\" - 2021/12/05"},{"location":"changelog/#added_4","text":"support for Nanopore reads staphopia as a named pipeline (alias for bactopia --wf staphopia ) for S. aureus genomes bactopia/bactopia-tests repo with test data walkthrough for testing bactopia-datasets/staphylococcus_aureus repo with curatated S. aureus datasets per-module testing via pytest (100+ tests and 7000+ outputs tested) per-module meta.yml and params.json for auto-building docs site framefork for adding new Bactopia Tools 19 total Bactopia Tools ( bactopia --wf <NAME> ) Subworkflows (3) eggnog : Functional annotation of proteins using orthologous groups and phylogenies pangenome : Pangenome analysis with optional core-genome phylogeny staphtyper : Determine the agr, spa and SCCmec types for Staphylococcus aureus genomes Modules (16): agrvate : Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. bakta : Rapid annotation of bacterial genomes and plasmids ectyper : In-silico prediction of Escherichia coli serotype emmtyper : emm-typing of Streptococcus pyogenes assemblies fastani : fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI) hicap : Identify cap locus serotype and structure in your Haemophilus influenzae assemblies ismapper : Identify insertion sites positions in bacterial genomes kleborate : Screening Klebsiella genome assemblies for MLST, sub-species, and other related genes of interest lissero : Serogroup typing prediction for Listeria monocytogenes mashtree : Quickly create a tree using Mash distances meningotype : Serotyping of Neisseria meningitidis ngmaster : Multi-antigen sequence typing for Neisseria gonorrhoeae seqsero2 : Salmonella serotype prediction from reads or assemblies spatyper : Computational method for finding spa types in Staphylococcus aureus staphopiasccmec : Primer based SCCmec typing of Staphylococcus aureus genomes tbprofiler : Detect resistance and lineages of Mycobacterium tuberculosis genomes Use mamba instead of conda for env building Reduced total Conda envs/Docker containers down to 7 (previously 12 not including bactopia tools) default to compressed outputs ( --skip_compression to output uncompressed outputs) Tutorial outputs made available update github actions","title":"Added"},{"location":"changelog/#fixed_4","text":"Cache issue causing -resume to fail amrfinder+ database not compatible error incorrectly parsed system memory","title":"Fixed"},{"location":"changelog/#adapted-from-nf-core","text":"nf-core pytest setup nf-core/modules for bactopia tools Bactopia v2 release contributed 20+ modules to nf-core/modules nf-core/tools arg parser adapted to import params and usage based on config file","title":"Adapted from nf-core"},{"location":"changelog/#process-consolidation","text":"makeblastdb -> assemble_genome call_variants , download_reference -> call_variants fastq_status , estiamte_genome_size -> gather_samples count_31mers -> minmer_sketch","title":"Process Consolidation"},{"location":"changelog/#removed","text":"bactopia tools -> Handled by Nextflow now ( bactopia --wf <NAME> ) bactopia versions -> Program versions are output ever run now.","title":"Removed"},{"location":"changelog/#v171-bactopiabactopia-shellbuster-20210604","text":"","title":"v1.7.1 bactopia/bactopia \"Shellbuster\" - 2021/06/04"},{"location":"changelog/#added_5","text":"bumped GTDB to v1.5.0 added soft ulimit for staph-typer","title":"Added"},{"location":"changelog/#fixed_5","text":"Matched PIRATE's parameter syntax for the tools staph-typer now uses GetBaseName","title":"Fixed"},{"location":"changelog/#removed_1","text":"PLSDB references in bactopia datasets","title":"'Removed'"},{"location":"changelog/#v170-bactopiabactopia-chocobo-wand-20210427","text":"","title":"v1.7.0 bactopia/bactopia \"Chocobo Wand\" - 2021/04/27"},{"location":"changelog/#added_6","text":"Bactopia Tool staph_typer for agr, spa, and sccmec typing --min_coverage parameter to filter based on min coverage","title":"Added"},{"location":"changelog/#removed_2","text":"plasmid_blast no longer apart of main workflow","title":"'Removed'"},{"location":"changelog/#v165-bactopiabactopia-zs-trident-20210330","text":"","title":"v1.6.5 bactopia/bactopia \"Z's Trident\" - 2021/03/30"},{"location":"changelog/#added_7","text":"version pins to process envs","title":"Added"},{"location":"changelog/#fixed_6","text":"syntax for sourmash 4.0","title":"Fixed"},{"location":"changelog/#v164-bactopiabactopia-trident-1-20210326","text":"","title":"v1.6.4 bactopia/bactopia \"Trident +1\" - 2021/03/26"},{"location":"changelog/#added_8","text":"added Python3.6+ to all environments","title":"Added"},{"location":"changelog/#v163-bactopiabactopia-trident-20210325","text":"","title":"v1.6.3 bactopia/bactopia \"Trident\" - 2021/03/25"},{"location":"changelog/#added_9","text":"extra fields to mlst-blast.py outputs added Python3 to qc_reads environment","title":"Added"},{"location":"changelog/#fixed_7","text":"rstrip on empty extra fields in mlst profile different BLAST+ software versions mismatch tbb pinnings --help and --version for bactopia tools","title":"Fixed"},{"location":"changelog/#v162-bactopiabactopia-fuscina-20210319","text":"","title":"v1.6.2 bactopia/bactopia \"Fuscina\" - 2021/03/19"},{"location":"changelog/#added_10","text":"inputs are checked to be gzipped (this does not include FOFN) --skip_amr to skip AMRFinder+ analysis new bactopia tool for hicap unicycler can be used for Illumina reads only ( --assembler unicycler )","title":"Added"},{"location":"changelog/#fixed_8","text":"AMRFinder+ software and database version mismatch check-fastqs.py syntax errors with prints ismapper tool processing of include/exclude files","title":"Fixed"},{"location":"changelog/#v161-bactopiabactopia-obelisk-20210222","text":"","title":"v1.6.1 bactopia/bactopia \"Obelisk\" - 2021/02/22"},{"location":"changelog/#fixed_9","text":"sample names with \".\" in them breaking auto variant calling contig naming incompatible with GenBank","title":"Fixed"},{"location":"changelog/#v160-bactopiabactopia-harpoon-20210122","text":"","title":"v1.6.0 bactopia/bactopia \"Harpoon\" - 2021/01/22"},{"location":"changelog/#added_11","text":"bactopia pull to pre-build Singularity images --singularity_cache parameter to set location of image downloads --registry to choose Docker registry to use (DockerHub, GitHub, Quay) --max_downloads sets maximum number of downloads (FASTQ/assembly) allowed at once --min_time sets the minimum amount of time a job should be given bactopia search now uses POST requests, and groups accessions into single query strip HTML from FASTA headers used in BLAST Dockerfiles now have conda.md5 label to determine if rebuild is necessary MD5 is updated in Dockerfile when env is updated AMRFinder+ database is now provided by bactopia datasets Parameterized profile (slurm, awsbatch, etc...) variables bactopia build will retry in case of HTTP connection issues --include_tool will build Bactopia Tool environments GitHub Actions build Docker containers on new release (or manual trigger) test that the Conda environment yamls are still valid test bactopia with conda on Linux and OSX test bactopia on Linux with Docker and Singularity","title":"Added"},{"location":"changelog/#fixed_10","text":"redundant environment version files failed FASTQ/Assembly downloads no longer stop whole run --max_retry is honored now antimicrobial_resistance process honors amrdir variable change directory antimicrobial_resistance to antimicrobial-resistance rename check_staging.py to check-staging.py for consistency Bactopia not producing valid exit code on failure","title":"Fixed"},{"location":"changelog/#removed_3","text":"--containerPath variable is replaced by --singularity_cache Native Singularity recipes, will now convert Docker to Singularity docs are now on bactopia.github.io repo","title":"Removed"},{"location":"changelog/#v156-bactopiabactopia-metal-slime-earring-20210113","text":"","title":"v1.5.6 bactopia/bactopia \"Metal Slime Earring\" - 2021/01/13"},{"location":"changelog/#added_12","text":"tweaks to the CI (via GitHub Actions) docker containers use quay.io now docker containers now use conda-pack --nfconfig will skip the conda environment build step input accessions are checked to be Assembly or Experiment accessions improved version increment script executor profiles can be configured by parameters","title":"Added"},{"location":"changelog/#fixed_11","text":"phyloflash and download_reference environment errors environment path in Bactopia Tools Dockerfile and Singularity recipes moved version from conda yaml to conda version file streamlined Docker recipes undefined --ftp_only message typo in singularity profile stderr logged to file is also printed to screen qc_reads memory used now determined by base config","title":"Fixed"},{"location":"changelog/#v155-bactopiabactopia-avengers-earring-20210104","text":"","title":"v1.5.5 bactopia/bactopia \"Avenger's Earring\" - 2021/01/04"},{"location":"changelog/#added_13","text":"--prefix option for bactopia prepare date is included in bactopia summary output","title":"Added"},{"location":"changelog/#fixed_12","text":"removed usage personal (rpetit3) conda channel aspera connect no longer supported shovill-se is now used from Bioconda updated conda environments (phyloflash broken)","title":"Fixed"},{"location":"changelog/#v154-bactopiabactopia-nemesis-earring-20201217","text":"","title":"v1.5.4 bactopia/bactopia \"Nemesis Earring\" - 2020/12/17"},{"location":"changelog/#fixed_13","text":"quoted arguments being broken up (e.g. --species \"Staphylococcus aureus -> --species Staphylococcus ) mashtree tool failure to download with --accessions remove ncbi-genome-download header when using --dry-run undefined name variable in plasmid_blast custom work dir causing two -w parameters bactopia search results now contains all (illumina and non-illumina)","title":"Fixed"},{"location":"changelog/#v153-bactopiabactopia-morion-earring-20201204","text":"","title":"v1.5.3 bactopia/bactopia \"Morion Earring\" - 2020/12/04"},{"location":"changelog/#added_14","text":"Changelog moved to docs recursive search for bactopia prepare allow multiple FASTQs per sample (FASTQs are merged)","title":"Added"},{"location":"changelog/#fixed_14","text":"unable to run bactopia datasets without parameters PLSDB blast results in invalid JSON format Error message for unaccepted run_type","title":"Fixed"},{"location":"changelog/#v152-bactopiabactopia-physical-earring-20201118","text":"","title":"v1.5.2 bactopia/bactopia \"Physical Earring\" - 2020/11/18"},{"location":"changelog/#fixed_15","text":"--skip_qc causing \"file not found\" qc_reads not honoring FINAL_BP and FINAL_READS checks","title":"Fixed"},{"location":"changelog/#v151-bactopiabactopia-astral-earring-20201117","text":"","title":"v1.5.1 bactopia/bactopia \"Astral Earring\" - 2020/11/17"},{"location":"changelog/#fixed_16","text":"bactopia tools not a valid project name bactopia tools --cleanup_workdir unrecognized variable","title":"Fixed"},{"location":"changelog/#v150-bactopiabactopia-cassie-earring-20201112","text":"","title":"v1.5.0 bactopia/bactopia \"Cassie Earring\" - 2020/11/12"},{"location":"changelog/#added_15","text":"Conda environments will check if in sync with latest version now md5sums of all conda envs Verify species-specific datasets exist separate work dir for bactopia and bactopia tools --cleanup_workdir to delete work directory after successful run default values for bactopia datasets summary.json Fallback to NCBI Assembly when eUtils is down Additional pre-process QC checks OSX/Linux conda envs for Bactopia Tools Documentation edits and updates Bactopia and Nextflow versions are now output for logging purposes option to skip QC step ( --skip_qc ) bactopia datasets can now specify assembly level bactopia tools now use reusable conda envs bactopia tools for Roary and PIRATE can now include local assemblies","title":"Added"},{"location":"changelog/#fixed_17","text":"Warn user if no completed genomes are available use of --genera for ncbi-genome-download improved genome_size handling explicit file passing for AWS Batch Memory estimates now floored PLSDB blast not being executed","title":"Fixed"},{"location":"changelog/#v1411-bactopiabactopia-metamorph-ring-20200919","text":"","title":"v1.4.11 bactopia/bactopia \"Metamorph Ring\" - 2020/09/19"},{"location":"changelog/#added_16","text":"bactopia build checks if each environment is built before building Can specify bactopia build to build a specific environment Removed build numbers in Conda environment yamls Created separate Conda yamls for Linux and Mac NCBI assembly accessions will retrieve the most current version (e.g. .1, .2, .3, etc...)","title":"Added"},{"location":"changelog/#fixed_18","text":"bactopia datasets trailing whitespace in species names bactopia datasets random subsample missing specified species when --limit and --include_genus used GitLab CI OSX compatibility Adaptive resource allocations Datasets are checked for existence Variant calls against references with multiple chromosomes","title":"Fixed"},{"location":"changelog/#v1410-bactopiabactopia-jelly-ring-20200825","text":"","title":"v1.4.10 bactopia/bactopia \"Jelly Ring\" - 2020/08/25"},{"location":"changelog/#added_17","text":"card is back as a default Ariba dataset Added timestamps to versions files","title":"Added"},{"location":"changelog/#fixed_19","text":"bactopia search not creating --outdir gtdb tool not using prefix in outdir naming pirate tool using pangenome alignment instead of core Use of scratch causing logs to fail","title":"Fixed"},{"location":"changelog/#v149-bactopiabactopia-toreadors-ring-20200823","text":"","title":"v1.4.9 bactopia/bactopia \"Toreador's Ring\" - 2020/08/23"},{"location":"changelog/#added_18","text":"Support for multiple accession bactopia search (SRA) Bactopia Tools: fastani , mashtree , pirate , roary (Assembly)","title":"Added"},{"location":"changelog/#fixed_20","text":"Undefined variable in mapping_query.sh ENA API endpoint for bactopia search Updated GTDB-TK to 1.3.0 to support latest downloads FastANI tool merge_results in no longer a separate step ANI is now one-to-many calculations --reassemble misapplied","title":"Fixed"},{"location":"changelog/#v148-bactopiabactopia-shikaree-ring-20200820","text":"","title":"v1.4.8 bactopia/bactopia \"Shikaree Ring\" - 2020/08/20"},{"location":"changelog/#added_19","text":"Versions are logged for Bactopia STDOUT/STDERR logs are kept for each sample can be skipped using --skip_logs","title":"Added"},{"location":"changelog/#fixed_21","text":"Long sample names breaking Prokka annotation Syntax errors in Bactopia tools null values being tested as integers Ariba card and mlst downloads not working missing parameter in GTDB Bactopia tool","title":"Fixed"},{"location":"changelog/#v147-bactopiabactopia-serket-ring-20200817","text":"","title":"v1.4.7 bactopia/bactopia \"Serket Ring\" - 2020/08/17"},{"location":"changelog/#added_20","text":"--no_cache to skip caching ncbi assembly info","title":"Added"},{"location":"changelog/#v146-bactopiabactopia-astral-ring-20200817","text":"","title":"v1.4.6 bactopia/bactopia \"Astral Ring\" - 2020/08/17"},{"location":"changelog/#added_21","text":"Option to rebuild conda envs to default location Updated fastq-dl for sra-toolkit forced interaction workaround","title":"Added"},{"location":"changelog/#v145-bactopiabactopia-bomb-queen-ring-20200813","text":"","title":"v1.4.5 bactopia/bactopia \"Bomb Queen Ring\" - 2020/08/13"},{"location":"changelog/#fixed_22","text":"--min_basepairs and --min_reads not being honored","title":"Fixed"},{"location":"changelog/#v144-bactopiabactopia-vilmas-ring-20200813","text":"","title":"v1.4.4 bactopia/bactopia \"Vilma's Ring\" - 2020/08/13"},{"location":"changelog/#fixed_23","text":"annotate_genome name clashes Updated fastq-dl version to support new ENA API endpoint","title":"Fixed"},{"location":"changelog/#v143-bactopiabactopia-sattva-ring-20200813","text":"","title":"v1.4.3 bactopia/bactopia \"Sattva Ring\" - 2020/08/13"},{"location":"changelog/#added_22","text":"--skip_ariba option in bactopia datasets","title":"Added"},{"location":"changelog/#fixed_24","text":"bactopia versions and bactopia citations improper execution Convert spaces to tabs in citation doc Corrected CheckM name in program version info file CARD no longer default Ariba dataset download for bactopia datasets","title":"Fixed"},{"location":"changelog/#v142-bactopiabactopia-tamas-ring-20200810","text":"","title":"v1.4.2 bactopia/bactopia \"Tamas Ring\" - 2020/08/10"},{"location":"changelog/#added_23","text":"added requirement checks of --accessions in bactopia datasets improved ENA spell check for species name","title":"Added"},{"location":"changelog/#fixed_25","text":"file of accessions not working with bactopia datasets Dockerfile and Singularity being missed by update-version.sh","title":"Fixed"},{"location":"changelog/#v141-bactopiabactopia-rajas-ring-20200806","text":"","title":"v1.4.1 bactopia/bactopia \"Rajas Ring\" - 2020/08/06"},{"location":"changelog/#added_24","text":"Links to publication (woohoo!) Can pass a Prodigal training file to bactopia datasets","title":"Added"},{"location":"changelog/#fixed_26","text":"Typos in the Docs blast_primers now uses blastn and blast_genes uses megablast validExitStatus deprecation warning","title":"Fixed"},{"location":"changelog/#v140-bactopiabactopia-archers-ring-20200701","text":"","title":"v1.4.0 bactopia/bactopia \"Archer's Ring\" - 2020/07/01"},{"location":"changelog/#added_25","text":"New Bactopia Tools eggnog for functional annotation using eggNOG-mapper mashtree to create a tree using Mash distances pirate to create pangenome using PIRATE ismapper for insertion site discovery Documentation for new tools and tweaks to existing BTs roary and pirate can now be run on just completed genomes Can limit number of completed genomes downloaded where applicable bactopia datasets can provide list of RefSeq accessions to download bactopia search can now use BioSample and Run accessions bactopia search can select a subset of Experiments associated with a BioSample Support for organisms with multiple MLST schemas Assembly QC via QUAST and CheckM Assemblies (local or NCBI Assembly accession) as inputs for Bactopia Long reads as supplementary to paired end reads for hybrid assembly Tools versions are locked to the minor version, not the patch","title":"Added"},{"location":"changelog/#fixed_27","text":"summary will now determine absolute path of inputs fastani improved user reference import went back a version on call_variants openjdk version all bactopia tools now put nextflow info in the same folder as outputs Typos in docs Bactopia Tools now check existence of include and exclude files Lots more documentation Updated citations/tools used by Bactopia Did I mention typos?","title":"Fixed"},{"location":"changelog/#removed_4","text":"ISMapper as part of the main pipeline (its now a tool) insertion-sequences in bactopia datasets","title":"Removed"},{"location":"changelog/#v131-bactopiabactopia-emperor-hairpin-20200420","text":"","title":"v1.3.1 bactopia/bactopia \"Emperor Hairpin\" - 2020/04/20"},{"location":"changelog/#added_26","text":"summary tool now gives reason for rank summary tools now splits failed into exclude and qc-failure Better documentation on how --cpus works in Nextflow Efficiency info when executed on standard profile split blast_query into blast_genes , blast_primers and blast_proteins mapping_query now creates multifasta of fastas at maps at once then splits per-base coverage into separate files --nfconfig users can provide their own Nextflow config file fastani users can provide their own reference now bactopia versions will print versions for tools used by Bactopia bactopia citations will print citations for tools and datasets used by Bactopia bactopia search can filter based on total bases, mean read length, and missing FASTQs blast queries results are only JSON format for easy parsing later added --compliant option for Prokka annotation","title":"Added"},{"location":"changelog/#fixed_28","text":"build-containers.sh not working with Bactopia Tools Bactopia Tools container tools missing environment.yml Typo in fastani usage Samples with multiple QC errors counted for each error Incorrect ISMapper version typo in summary SLURM profile gtdb Singularity container not mounting path to GTDB database roary missing rename in containers blast_query results overwriting one another build-containers.sh now creates a \"latest\" tag bactopia tool roary outputs results based on the given prefix renamed --addgenes to --nogenes updated ASA\u00b3P citation Typos in Bactopia Tools docs Link in README.md","title":"Fixed"},{"location":"changelog/#v130-bactopiabactopia-leaping-boots-20200219","text":"","title":"v1.3.0 bactopia/bactopia \"Leaping Boots\" - 2020/02/19"},{"location":"changelog/#added_27","text":"bactopia tools (BT) framework docs for each tool subcommand to execute tools bactopia tools fastani - pairwise average nucleotide identity gtdb - assigning objective taxonomic classifications phyloflash - 16s assembly, alignment and tree roary - pan-genome and core genome tree summary - summary of results --include and --exclude to modify which samples used in BT analysis update-version.sh improvements can now set how Nextflow publishes outputs (copy, symlink, etc...) via --publish_mode Warning if output directory already exists and require --force to overwrite option ( --rfam ) to turn on ncRNA annotation in Prokka reduced \"README.md\" contents, instead point to documentation Updated acknowledgements and bibtex for citations","title":"Added"},{"location":"changelog/#fixed_29","text":"nextflow.config version out of sync --available_datasets accessing not existent variable --available_datasets is tested before requiring inputs Make use of tbl2asn-forever adjusted how Bactopia is executed, nextflow run no longer pulls from github","title":"Fixed"},{"location":"changelog/#v124-bactopiabactopia-rabbit-charm-20191220","text":"","title":"v1.2.4 bactopia/bactopia \"Rabbit Charm\" - 2019/12/20"},{"location":"changelog/#added_28","text":"--conda_help to be used for conda build test --skip_fastq_check to skip check that input FASTQs meet minimum requirements Undocumented parameters to the usage","title":"Added"},{"location":"changelog/#fixed_30","text":"snippy not working with samtools 1.10 NXF_HOME variable is exported to the conda env location speed of checking if conda environments are built","title":"Fixed"},{"location":"changelog/#v123-bactopiabactopia-tropical-punches-1-20191219","text":"","title":"v1.2.3 bactopia/bactopia \"Tropical Punches +1\" - 2019/12/19"},{"location":"changelog/#added_29","text":"select-references selects latest assembly accession version (BioPython/Entrez) select-references skips assemblies that have been excluded from RefSeq test to for paired-end related errors (e.g. different read counts) --min_genome_size and --max_genome_size parameter for estimated genome sizes Check is also made after assembly update-version.sh improvements Better genome size estimates using Mash for high and low coverage sequences Script to update conda environments added --conda_help to be used for conda build test","title":"Added"},{"location":"changelog/#fixed_31","text":"--random_tie_break always true not using latest assembly accession for ncbi-genome-download usage of assemblies that have been excluded from RefSeq allowing PE reads with different read counts to be processed (hint... they fail pretty quickly) failure to stop analysis of sample with low read counts coverage reported as 'inf' references to cgmlst in the setup datasets non-explicit patterns in publishDir low coverage/read errors after QC were not put in root dir snippy not working with samtools 1.10","title":"Fixed"},{"location":"changelog/#v122-bactopiabactopia-tropical-punches-20191022","text":"","title":"v1.2.2 bactopia/bactopia \"Tropical Punches\" - 2019/10/22"},{"location":"changelog/#added_30","text":"Size of \"work\" directory to the execution summary User controlled overwrites of existing output files Check for unknown parameters at runtime FASTQ downloads from SRA (via fastq-dl and fasterq-dump) Documentation updates Script for building containers","title":"Added"},{"location":"changelog/#fixed_32","text":"bactopia command now explicitly states which tag to use for Nextflow run Version info not updated in Dockerfile and Singularity Duplicated QC'd FASTQs nextflow: docker \"Memory limited without swap\" error","title":"Fixed"},{"location":"changelog/#removed_5","text":"cgmlst support in bactopia datasets setup.py left over from pre-conda config","title":"Removed"},{"location":"changelog/#v121-bactopiabactopia-fruit-punches-20191017","text":"","title":"v1.2.1 bactopia/bactopia \"Fruit Punches\" - 2019/10/17"},{"location":"changelog/#added_31","text":"bactopia build to build Conda environments Version info pulled from nextflow.config Set default values resource allocations Documentation on new changes Automatic building of Conda environments, if none exist --nfdir to determine where bactopia is being run from","title":"Added"},{"location":"changelog/#fixed_33","text":"Never ending typos --datasets now, not --dataset <-(Typo) path for outputting Nextflow reports Typo in antimicrobial_resistance.sh (task.cpus not cpus) --species is now consistent between bactopia and bactopia datasets Bug when checking if specific species dataset exists, but no species datasets exist Cleaned up version update script Cleaned up usage","title":"Fixed"},{"location":"changelog/#removed_6","text":"--max_cpus ability to limit total cores used, access to config is being deprecated in Nextflow --max_cpus since it is redudant to --cpus now","title":"Removed"},{"location":"changelog/#v120-bactopiabactopia-beestinger-20191016","text":"","title":"v1.2.0 bactopia/bactopia \"Beestinger\" - 2019/10/16"},{"location":"changelog/#added_32","text":"--compress to compress certain outputs, default uncompressed Species name check in bactopia datasets Use requests package instead of urllib3 Added bactopia search to query ENA for list of Illumina accessions Documentation Feedback edits Output overview Additional program acknowledgements bibtex of citations missing parameters to usage info for --genome_size parameter bactopia search usage Workflow overview blastdbcmd compatible seqid to assembly fasta allows search for entries with sample name Mask low coverage regions in consensus (subs only) fasta Added --dry_run to build conda envs one at a time (prevent parallel issues) Added Singularity recipes Added SLURM config","title":"Added"},{"location":"changelog/#fixed_34","text":"Never ending typos bactopia datasets lowercase species names not found in MLST schemas bactopia version no longer calls nextflow SEQUENCE_TYPE channel groups FASTQ and assembly MINMER_QUERY channel groups FASTQ and signature Ariba MLST always running with --noclean Bugs related --compress Reduced size of per-base coverage outputs Removed -parse_seqids from makeblastdb command, caused blast queries to fail genomeCoverageBed failing on empty BAM files","title":"Fixed"},{"location":"changelog/#removed_7","text":"--clean_cache function","title":"Removed"},{"location":"changelog/#v110-bactopiabactopia-wooden-sword-1-20190919","text":"","title":"v1.1.0 bactopia/bactopia \"Wooden Sword +1\" - 2019/09/19"},{"location":"changelog/#added_33","text":"NCBI's amrfinder Dockerfile for main bactopia install Completed documentation!","title":"Added"},{"location":"changelog/#fixed_35","text":"insertion_sequences inputs are not now grouped into single channel Unintended FASTQ duplication via poor publishDir pattern","title":"Fixed"},{"location":"changelog/#v101-bactopiabactopia-wooden-sword-20190912","text":"","title":"v1.0.1 bactopia/bactopia \"Wooden Sword\" - 2019/09/12"},{"location":"changelog/#added_34","text":"README.md documentation","title":"Added"},{"location":"changelog/#fixed_36","text":"call_variants_auto bug fixed documentation version numbers","title":"Fixed"},{"location":"changelog/#v100-bactopiabactopia-wooden-sword-20190904","text":"Initial release of bactopia/bactopia","title":"v1.0.0 bactopia/bactopia \"Wooden Sword\" - 2019/09/04"},{"location":"datasets/","text":"Build Datasets \u00b6 Bactopia can make use of many existing public datasets, as well as private datasets. The process of downloading, building, and (or) configuring these datasets for Bactopia has been automated. Highly recommended to complete this step! This step is completely optional, but it is highly recommended that you do not. By skipping this step of setting up public datasets, Bactopia will be limited to analyses like quality control, assembly, and 31-mer counting. Included Datasets \u00b6 Some datasets included are applicable to all bacterial species and some are specific to a bacterial species. If specified at runtime, Bactopia will recognize the datasets and execute the appropriate analyses. General \u00b6 Ariba's getref Reference Datasets Allows reference datasets (resistance, virulence, and plamids) to be automatically downloaded and configured for usage by Ariba RefSeq Mash Sketch ~100,000 genomes and plasmids from NCBI RefSeq, used to give an idea of what is your sequencing data (e.g. Are the sequences what you expected?) GenBank Sourmash Signatures ~87,000 microbial genomes (includes viral and fungal) from NCBI GenBank, also gives an idea of what is your sequencing data. Species Specific \u00b6 PubMLST.org MLST Schemas Multi-locus sequence typing (MLST) allelic profiles and seqeunces for a many different bacterial species (and even a few eukaryotes!). Clustered RefSeq Proteins For the given bacterial species, completed RefSeq genomes are downloaded and then the proteins are clustered and formatted for usage with Prokka. Minmer Sketch of RefSeq Genomes Using the completed genomes downloaded for clustering proteins a Mash sketch and Sourmash signature is created for these genomes. These sketches can then be used for automatic selection of reference genomes for variant calling. Optional User Populated Folders A few folders for things such as calling variants, insertion sequences and primers are created that the user can manually populate. More information is available below! Setting Up \u00b6 Included in Bactopia is the setup-datasets.py script (located in the bin folder) to automate the process of downloading and/or building these datasets. Quick Start \u00b6 bactopia datasets This will set up Ariba datasets ( card and vfdb_core ), RefSeq Mash sketch, and GenBank Sourmash Signatures in the newly created datasets folder. By default, datasets is used for the output directory, but this can be changed with --outdir . A Single Bacterial Species \u00b6 bactopia datasets --species \"Haemophilus influenzae\" --include_genus Multiple Bacterial Species \u00b6 You can also set up datasets for multiple bacterial species at a time. There are two options to do so. Comma-Separated \u00b6 At runtime, you can separate the the different species bactopia datasets --species \"Haemophilus influenzae,Staphylococcus aureus\" --include_genus Text File \u00b6 In order to do so, you will need to create a text file where each line is the name of a species to set up. For example, you could create a species.txt file and include the following species in it. Haemophilus influenzae Staphylococcus aureus Mycobacterium tuberculosis The new command becomes: bactopia datasets --species species.txt --include_genus This will setup the MLST schema (if available) and a protein cluster FASTA file for each species in species.txt . Usage \u00b6 usage: bactopia datasets [-h] [--outdir STR] [--skip_ariba] [--ariba STR] [--species STR] [--skip_mlst] [--skip_prokka] [--include_genus] [--assembly_level {all,complete,chromosome,scaffold,contig}] [--limit INT] [--accessions STR] [--identity FLOAT] [--overlap FLOAT] [--max_memory INT] [--fast_cluster] [--skip_minmer] [--skip_amr] [--prodigal_tf STR] [--reference STR] [--mapping STR] [--genes STR] [--proteins STR] [--primers STR] [--force_optional] [--cpus INT] [--clear_cache] [--force] [--force_ariba] [--force_mlst] [--force_prokka] [--force_minmer] [--force_amr] [--keep_files] [--available_datasets] [--depends] [--version] [--verbose] [--silent] PUBMLST bactopia datasets (v2.0.0) - Setup public datasets for Bactopia positional arguments: PUBMLST Bactopia config file with PubMLST schema mappings for Ariba. optional arguments: -h, --help show this help message and exit --outdir STR Directory to write output. (Default ./datasets) Ariba Reference Datasets: --skip_ariba Skip setup of Ariba datasets --ariba STR Comma separated list of Ariba datasets to download and setup. Available datasets include: argannot, card, ncbi, megares, plasmidfinder, resfinder, srst2_argannot, vfdb_core, vfdb_full, virulencefinder (Default: \"vfdb_core,card\") Use --available_datasets to see the full list. Bacterial Species: --species STR Download available MLST schemas and completed genomes for a given species or a list of species in a text file. --skip_mlst Skip setup of MLST schemas for each species Custom Prokka Protein FASTA: --skip_prokka Skip creation of a Prokka formatted fasta for each species --include_genus Include all genus members in the Prokka proteins FASTA --assembly_level {all,complete,chromosome,scaffold,contig} Assembly levels of genomes to download (Default: complete). --limit INT If available completed genomes exceeds a given limit, a random subsample will be taken. (Default 1000) --accessions STR A list of RefSeq accessions to download. --identity FLOAT CD-HIT (-c) sequence identity threshold. (Default: 0.9) --overlap FLOAT CD-HIT (-s) length difference cutoff. (Default: 0.8) --max_memory INT CD-HIT (-M) memory limit (in MB). (Default: unlimited --fast_cluster Use CD-HIT's (-g 0) fast clustering algorithm, instead of the accurate but slow algorithm. Minmer Datasets: --skip_minmer Skip download of pre-computed minmer datasets (mash, sourmash) Antimicrobial Resistance Datasets: --skip_amr Skip download of antimicrobial resistance databases (e.g. AMRFinder+) Optional User Provided Datasets: --prodigal_tf STR A pre-built Prodigal training file to add to the species annotation folder. Requires a single species (--species) and will replace existing training files. --reference STR A reference genome (FASTA/GenBank (preferred)) file or directory to be added to the optional folder for variant calling. Requires a single species (--species). --mapping STR A reference sequence (FASTA) file or directory to be added to the optional folder for mapping. Requires a single species (--species). --genes STR A gene sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --proteins STR A protein sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --primers STR A primer sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --force_optional Overwrite any existing files in the optional folders Custom Options: --cpus INT Number of cpus to use. (Default: 1) --clear_cache Remove any existing cache. --force Forcibly overwrite existing datasets. --force_ariba Forcibly overwrite existing Ariba datasets. --force_mlst Forcibly overwrite existing MLST datasets. --force_prokka Forcibly overwrite existing Prokka datasets. --force_minmer Forcibly overwrite existing minmer datasets. --force_amr Forcibly overwrite existing antimicrobial resistance datasets. --keep_files Keep all downloaded and intermediate files. --available_datasets List Ariba reference datasets and MLST schemas available for setup. --depends Verify dependencies are installed. Adjust Verbosity: --version show program's version number and exit --verbose Print debug related text. --silent Only critical errors will be printed. example usage: bactopia datasets bactopia datasets --ariba 'vfdb_core' bactopia datasets --species 'Staphylococcus aureus' --include_genus Useful Parameters \u00b6 --clear_cache \u00b6 To prevent a PubMLST.org query every run, a list of available schemas is cached to $HOME/.bactopia/datasets.json . The cache expires after 15 days, but in case a new species has been made available --clear_cache will force a query of PubMLST.org. --cpus \u00b6 Increasing --cpus (it defaults to 1) is useful for speeding up the download and clustering steps. --force* \u00b6 If a dataset exists, it will only be overwritten if one of the --force parameters are used. --include_genus \u00b6 Completed RefSeq genomes are downloaded for a given species to be used for protein clustering. --include_genus will also download completed RefSeq genomes for each genus member. --assembly_level \u00b6 By default, only completed genomes are downloaded. --assembly_level allows you to set the minimum assembly level (e.g. complete, scaffold, contigs, etc...) to download. --limit \u00b6 For some species of bacteria there might be thousands of completed genomes available. For dataset creation, downloading thousands of completed genomes will be time consuming and like take up a significant amount of storage. To help in such cases --limit can be used to limit the downloads to a random subset of genomes. The default value for --limit has been set to 1000 genomes. In cases where --include_genus is used, the random subsample will always include at least one genome from the given --species value. --accessions \u00b6 In cases where a random subset of completed genomes is not ideal, you can provide your own curated list of genomes to download with --accessions . The file should have a single NCBI RefSeq Assembly accession (E.g GCF_000008865) per line. --keep_files \u00b6 Many intermediate files are downloaded/created (e.g. completed genomes) and deleted during the building process, use --keep_files to retain these files. Tweaking CD-HIT \u00b6 There are parameters ( --identity , --overlap , --max_memory , and --fast_cluster ) to tweak CD-HIT if you find it necessary. Please keep in mind, the only goal of the protein clustering step is to help speed up Prokka, by providing a decent set of proteins to annotate against first. Datasets Folder Overview \u00b6 After creating datasets you will have a directory structure that Bactopia recognizes. Based on the available datasets Bactopia will queue up the associated analyses. Here is the directory structure for the Bactopia Datasets. Some of these include files from public datasets that can be used directly, but there are also other folders you can populate yourself to fit your needs. ${DATASET_FOLDER} \u251c\u2500\u2500 antimicrobial-resistance \u251c\u2500\u2500 ariba \u251c\u2500\u2500 minmer \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u251c\u2500\u2500 annotation \u2502 \u251c\u2500\u2500 cdhit-stats.txt \u2502 \u251c\u2500\u2500 genome_size.json \u2502 \u251c\u2500\u2500 ncbi-metadata.txt \u2502 \u251c\u2500\u2500 proteins.faa \u2502 \u251c\u2500\u2500 proteins.faa.clstr \u2502 \u2514\u2500\u2500 proteins-updated.txt \u251c\u2500\u2500 minmer \u2502 \u251c\u2500\u2500 minmer-updated.txt \u2502 \u2514\u2500\u2500 refseq-genomes.msh \u251c\u2500\u2500 mlst \u2502 \u2514\u2500\u2500 ${SCHEMA} \u2502 \u251c\u2500\u2500 ariba.tar.gz \u2502 \u251c\u2500\u2500 blastdb.tar.gz \u2502 \u2514\u2500\u2500 mlst-updated.txt \u2514\u2500\u2500 optional \u251c\u2500\u2500 blast \u2502 \u251c\u2500\u2500 genes \u2502 \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2502 \u251c\u2500\u2500 primers \u2502 \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2502 \u2514\u2500\u2500 proteins \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 insertion-sequences \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 mapping-sequences \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2514\u2500\u2500 reference-genomes \u2514\u2500\u2500 ${NAME}.{gbk|fasta} General Datasets \u00b6 General datasets can be used for all bacterial samples. There are three general dataset folders: antimicrobial-resistance , ariba , and minmer . The antimicrobial-resistance folder contains pre-formatted datasets available from NCBI's AMRFinderPlus . The ariba folder contains pre-formatted datasets available from Ariba's getref Reference Datasets . Finally minmer folder contains a RefSeq Mash Sketch and GenBank Sourmash Signatures of more than 100,000 genomes. Changing files in antimicrobial-resistance , ariba , and minmer is not recommended These directories are for general analysis and have been precomputed. Modifying these files may cause errors during analysis. AMRFinder+ databases can sometimes require specific versions Occasionally, AMRFinder+ require a specic version of AMRFinder+ and things stop working. If this occurs you can press forward using --skip_amr in Bactopia, but also please submit a Issue for this . Species Specific Datasets \u00b6 Bactopia allows the datasets to be created for a specific species. The following sections outline the species specific datasets. annotation \u00b6 Completed RefSeq genomes are downloaded and then the proteins are clustered and formatted for usage with Prokka. The results from this clustering is stored in the annotation folder. ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 annotation \u251c\u2500\u2500 cdhit-stats.txt \u251c\u2500\u2500 genome_size.json \u251c\u2500\u2500 ncbi-metadata.txt \u251c\u2500\u2500 prodigal.tf \u251c\u2500\u2500 proteins.faa \u251c\u2500\u2500 proteins.faa.clstr \u2514\u2500\u2500 proteins-updated.txt Filename Description cdhit-stats.txt General statistics associated with CD-HIT clustering genome_size.json A list of genome size for each downloaded RefSeq genome ncbi-metadata.txt NCBI Assembly metadata associated with the downloaded RefSeq genomes prodigal.tf A pre-built species specific Prodigal training file provided with --prodigal_tf proteins.faa Set of Prokka formatted proteins proteins.faa.clstr Description of the clusters created by CD-HIT proteins-updated.txt Information on the last time the protein set was updated You can add your curated protein set here If you have a set of proteins you would like to use for annotation, you can name it proteins.faa and place it in the annotation folder. In order for your set of proteins to be used by Prokka, you must make sure you follow the Prokka FASTA database format . An alternative is to use the --accessions parameter and give bactopia datasets the list of RefSeq accessions when the dataset is created. In doing so the custom protein set will be automatically formatted using the genomes you specified. minmer \u00b6 By default, a Mash sketch is created for the completed genomes downloaded for clustering proteins. These sketches are then be used for automatic selection of reference genomes for variant calling. ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 minmer \u251c\u2500\u2500 minmer-updated.txt \u2514\u2500\u2500 refseq-genomes.msh Filename Description minmer-updated.txt Information on the last time the mash sketch was updated refseq-genomes.msh A Mash sketch (k=31) of the RefSeq completed genomes You can add your curated RefSeq sketch here You can replace refseq-genomes.msh with a custom set of RefSeq genomes to be used for automatic reference selection. The only requirements to do so are that only RefSeq genomes (start with GCF) are used and the mash sketch uses a k-mer length of 31 ( -k 31 ). This will allow it to be compatible with Bactopia. An alternative is to use the --accessions parameter and give bactopia datasets the list of RefSeq accessions when the dataset is created. In doing so the mash sketch will be automatically created. mlst \u00b6 The mlst folder contains MLST schemas that have been formatted to be used by Ariba and BLAST . ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 mlst \u2514\u2500\u2500 ${SCHEMA} \u251c\u2500\u2500 ariba.tar.gz \u251c\u2500\u2500 blastdb.tar.gz \u2514\u2500\u2500 mlst-updated.txt Filename Description ariba.tar.gz An Ariba formatted MLST dataset for a given schema blastdb.tar.gz A BLAST formatted MLST dataset for a given schema mlst-updated.txt Contains time stamp for the last time the MSLT dataset was updated How does Bactopia handle organisms with multiple MLST schemas? In a few cases, an organism might have multiple MLST schemas available (Example: E. coli ). In such cases, each MLST schema is downloaded and set up. Bactopia will also call sequence types against each schema. Changing files in mlst is not recommended The MLST schemas have been pre-formatted for your usage. There might be rare cases where you would like to provide your own schema. If this is the case it is recommended you take a look at: What about MLST not hosted at pubmlst.org? then follow the directory structure for mlst . optional \u00b6 Built into the Bactopia dataset structure is the optional folder that you, the user, can populate for species specific analysis. These could include specific genes you might want BLASTed against your samples or a specific reference you want all your samples mapped to and variants called. blast \u00b6 ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 blast \u251c\u2500\u2500 genes \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 primers \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2514\u2500\u2500 proteins \u2514\u2500\u2500 ${NAME}.fasta In the blast directory there are three more directories! The genes folder is where you can place gene seqeunces (nucleotides) in FASTA format to query against assemblies using blastn . The primers folder is where you can place primer sequences (nucleotides) in FASTA format to query against assemblies using blastn , but with primer-specific parameters and cut-offs. Finally, the proteins (as you probably guessed!) is where you can place protein sequnces (amino acids) in FASTA format to query against assemblies using blastp . mapping-sequences \u00b6 ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 mapping-sequences \u2514\u2500\u2500 ${NAME}.fasta In the mapping-sequences directory you can place FASTA files of any nucleotide sequence you would like FASTQ reads to be mapped against using BWA . This can be useful if you are interested if whether a certain region or gene is covered or not. reference-genomes \u00b6 ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 reference-genomes \u2514\u2500\u2500 ${NAME}.{gbk|fasta} In the reference-genomes directory you can put a GenBank (preferred!) or FASTA file of a reference genome you would like variants to be called against using Snippy .","title":"Build Datasets"},{"location":"datasets/#build-datasets","text":"Bactopia can make use of many existing public datasets, as well as private datasets. The process of downloading, building, and (or) configuring these datasets for Bactopia has been automated. Highly recommended to complete this step! This step is completely optional, but it is highly recommended that you do not. By skipping this step of setting up public datasets, Bactopia will be limited to analyses like quality control, assembly, and 31-mer counting.","title":"Build Datasets"},{"location":"datasets/#included-datasets","text":"Some datasets included are applicable to all bacterial species and some are specific to a bacterial species. If specified at runtime, Bactopia will recognize the datasets and execute the appropriate analyses.","title":"Included Datasets"},{"location":"datasets/#general","text":"Ariba's getref Reference Datasets Allows reference datasets (resistance, virulence, and plamids) to be automatically downloaded and configured for usage by Ariba RefSeq Mash Sketch ~100,000 genomes and plasmids from NCBI RefSeq, used to give an idea of what is your sequencing data (e.g. Are the sequences what you expected?) GenBank Sourmash Signatures ~87,000 microbial genomes (includes viral and fungal) from NCBI GenBank, also gives an idea of what is your sequencing data.","title":"General"},{"location":"datasets/#species-specific","text":"PubMLST.org MLST Schemas Multi-locus sequence typing (MLST) allelic profiles and seqeunces for a many different bacterial species (and even a few eukaryotes!). Clustered RefSeq Proteins For the given bacterial species, completed RefSeq genomes are downloaded and then the proteins are clustered and formatted for usage with Prokka. Minmer Sketch of RefSeq Genomes Using the completed genomes downloaded for clustering proteins a Mash sketch and Sourmash signature is created for these genomes. These sketches can then be used for automatic selection of reference genomes for variant calling. Optional User Populated Folders A few folders for things such as calling variants, insertion sequences and primers are created that the user can manually populate. More information is available below!","title":"Species Specific"},{"location":"datasets/#setting-up","text":"Included in Bactopia is the setup-datasets.py script (located in the bin folder) to automate the process of downloading and/or building these datasets.","title":"Setting Up"},{"location":"datasets/#quick-start","text":"bactopia datasets This will set up Ariba datasets ( card and vfdb_core ), RefSeq Mash sketch, and GenBank Sourmash Signatures in the newly created datasets folder. By default, datasets is used for the output directory, but this can be changed with --outdir .","title":"Quick Start"},{"location":"datasets/#a-single-bacterial-species","text":"bactopia datasets --species \"Haemophilus influenzae\" --include_genus","title":"A Single Bacterial Species"},{"location":"datasets/#multiple-bacterial-species","text":"You can also set up datasets for multiple bacterial species at a time. There are two options to do so.","title":"Multiple Bacterial Species"},{"location":"datasets/#comma-separated","text":"At runtime, you can separate the the different species bactopia datasets --species \"Haemophilus influenzae,Staphylococcus aureus\" --include_genus","title":"Comma-Separated"},{"location":"datasets/#text-file","text":"In order to do so, you will need to create a text file where each line is the name of a species to set up. For example, you could create a species.txt file and include the following species in it. Haemophilus influenzae Staphylococcus aureus Mycobacterium tuberculosis The new command becomes: bactopia datasets --species species.txt --include_genus This will setup the MLST schema (if available) and a protein cluster FASTA file for each species in species.txt .","title":"Text File"},{"location":"datasets/#usage","text":"usage: bactopia datasets [-h] [--outdir STR] [--skip_ariba] [--ariba STR] [--species STR] [--skip_mlst] [--skip_prokka] [--include_genus] [--assembly_level {all,complete,chromosome,scaffold,contig}] [--limit INT] [--accessions STR] [--identity FLOAT] [--overlap FLOAT] [--max_memory INT] [--fast_cluster] [--skip_minmer] [--skip_amr] [--prodigal_tf STR] [--reference STR] [--mapping STR] [--genes STR] [--proteins STR] [--primers STR] [--force_optional] [--cpus INT] [--clear_cache] [--force] [--force_ariba] [--force_mlst] [--force_prokka] [--force_minmer] [--force_amr] [--keep_files] [--available_datasets] [--depends] [--version] [--verbose] [--silent] PUBMLST bactopia datasets (v2.0.0) - Setup public datasets for Bactopia positional arguments: PUBMLST Bactopia config file with PubMLST schema mappings for Ariba. optional arguments: -h, --help show this help message and exit --outdir STR Directory to write output. (Default ./datasets) Ariba Reference Datasets: --skip_ariba Skip setup of Ariba datasets --ariba STR Comma separated list of Ariba datasets to download and setup. Available datasets include: argannot, card, ncbi, megares, plasmidfinder, resfinder, srst2_argannot, vfdb_core, vfdb_full, virulencefinder (Default: \"vfdb_core,card\") Use --available_datasets to see the full list. Bacterial Species: --species STR Download available MLST schemas and completed genomes for a given species or a list of species in a text file. --skip_mlst Skip setup of MLST schemas for each species Custom Prokka Protein FASTA: --skip_prokka Skip creation of a Prokka formatted fasta for each species --include_genus Include all genus members in the Prokka proteins FASTA --assembly_level {all,complete,chromosome,scaffold,contig} Assembly levels of genomes to download (Default: complete). --limit INT If available completed genomes exceeds a given limit, a random subsample will be taken. (Default 1000) --accessions STR A list of RefSeq accessions to download. --identity FLOAT CD-HIT (-c) sequence identity threshold. (Default: 0.9) --overlap FLOAT CD-HIT (-s) length difference cutoff. (Default: 0.8) --max_memory INT CD-HIT (-M) memory limit (in MB). (Default: unlimited --fast_cluster Use CD-HIT's (-g 0) fast clustering algorithm, instead of the accurate but slow algorithm. Minmer Datasets: --skip_minmer Skip download of pre-computed minmer datasets (mash, sourmash) Antimicrobial Resistance Datasets: --skip_amr Skip download of antimicrobial resistance databases (e.g. AMRFinder+) Optional User Provided Datasets: --prodigal_tf STR A pre-built Prodigal training file to add to the species annotation folder. Requires a single species (--species) and will replace existing training files. --reference STR A reference genome (FASTA/GenBank (preferred)) file or directory to be added to the optional folder for variant calling. Requires a single species (--species). --mapping STR A reference sequence (FASTA) file or directory to be added to the optional folder for mapping. Requires a single species (--species). --genes STR A gene sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --proteins STR A protein sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --primers STR A primer sequence (FASTA) file or directory to be added to the optional folder for BLAST. Requires a single species (--species). --force_optional Overwrite any existing files in the optional folders Custom Options: --cpus INT Number of cpus to use. (Default: 1) --clear_cache Remove any existing cache. --force Forcibly overwrite existing datasets. --force_ariba Forcibly overwrite existing Ariba datasets. --force_mlst Forcibly overwrite existing MLST datasets. --force_prokka Forcibly overwrite existing Prokka datasets. --force_minmer Forcibly overwrite existing minmer datasets. --force_amr Forcibly overwrite existing antimicrobial resistance datasets. --keep_files Keep all downloaded and intermediate files. --available_datasets List Ariba reference datasets and MLST schemas available for setup. --depends Verify dependencies are installed. Adjust Verbosity: --version show program's version number and exit --verbose Print debug related text. --silent Only critical errors will be printed. example usage: bactopia datasets bactopia datasets --ariba 'vfdb_core' bactopia datasets --species 'Staphylococcus aureus' --include_genus","title":"Usage"},{"location":"datasets/#useful-parameters","text":"","title":"Useful Parameters"},{"location":"datasets/#-clear_cache","text":"To prevent a PubMLST.org query every run, a list of available schemas is cached to $HOME/.bactopia/datasets.json . The cache expires after 15 days, but in case a new species has been made available --clear_cache will force a query of PubMLST.org.","title":"--clear_cache"},{"location":"datasets/#-cpus","text":"Increasing --cpus (it defaults to 1) is useful for speeding up the download and clustering steps.","title":"--cpus"},{"location":"datasets/#-force","text":"If a dataset exists, it will only be overwritten if one of the --force parameters are used.","title":"--force*"},{"location":"datasets/#-include_genus","text":"Completed RefSeq genomes are downloaded for a given species to be used for protein clustering. --include_genus will also download completed RefSeq genomes for each genus member.","title":"--include_genus"},{"location":"datasets/#-assembly_level","text":"By default, only completed genomes are downloaded. --assembly_level allows you to set the minimum assembly level (e.g. complete, scaffold, contigs, etc...) to download.","title":"--assembly_level"},{"location":"datasets/#-limit","text":"For some species of bacteria there might be thousands of completed genomes available. For dataset creation, downloading thousands of completed genomes will be time consuming and like take up a significant amount of storage. To help in such cases --limit can be used to limit the downloads to a random subset of genomes. The default value for --limit has been set to 1000 genomes. In cases where --include_genus is used, the random subsample will always include at least one genome from the given --species value.","title":"--limit"},{"location":"datasets/#-accessions","text":"In cases where a random subset of completed genomes is not ideal, you can provide your own curated list of genomes to download with --accessions . The file should have a single NCBI RefSeq Assembly accession (E.g GCF_000008865) per line.","title":"--accessions"},{"location":"datasets/#-keep_files","text":"Many intermediate files are downloaded/created (e.g. completed genomes) and deleted during the building process, use --keep_files to retain these files.","title":"--keep_files"},{"location":"datasets/#tweaking-cd-hit","text":"There are parameters ( --identity , --overlap , --max_memory , and --fast_cluster ) to tweak CD-HIT if you find it necessary. Please keep in mind, the only goal of the protein clustering step is to help speed up Prokka, by providing a decent set of proteins to annotate against first.","title":"Tweaking CD-HIT"},{"location":"datasets/#datasets-folder-overview","text":"After creating datasets you will have a directory structure that Bactopia recognizes. Based on the available datasets Bactopia will queue up the associated analyses. Here is the directory structure for the Bactopia Datasets. Some of these include files from public datasets that can be used directly, but there are also other folders you can populate yourself to fit your needs. ${DATASET_FOLDER} \u251c\u2500\u2500 antimicrobial-resistance \u251c\u2500\u2500 ariba \u251c\u2500\u2500 minmer \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u251c\u2500\u2500 annotation \u2502 \u251c\u2500\u2500 cdhit-stats.txt \u2502 \u251c\u2500\u2500 genome_size.json \u2502 \u251c\u2500\u2500 ncbi-metadata.txt \u2502 \u251c\u2500\u2500 proteins.faa \u2502 \u251c\u2500\u2500 proteins.faa.clstr \u2502 \u2514\u2500\u2500 proteins-updated.txt \u251c\u2500\u2500 minmer \u2502 \u251c\u2500\u2500 minmer-updated.txt \u2502 \u2514\u2500\u2500 refseq-genomes.msh \u251c\u2500\u2500 mlst \u2502 \u2514\u2500\u2500 ${SCHEMA} \u2502 \u251c\u2500\u2500 ariba.tar.gz \u2502 \u251c\u2500\u2500 blastdb.tar.gz \u2502 \u2514\u2500\u2500 mlst-updated.txt \u2514\u2500\u2500 optional \u251c\u2500\u2500 blast \u2502 \u251c\u2500\u2500 genes \u2502 \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2502 \u251c\u2500\u2500 primers \u2502 \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2502 \u2514\u2500\u2500 proteins \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 insertion-sequences \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 mapping-sequences \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2514\u2500\u2500 reference-genomes \u2514\u2500\u2500 ${NAME}.{gbk|fasta}","title":"Datasets Folder Overview"},{"location":"datasets/#general-datasets","text":"General datasets can be used for all bacterial samples. There are three general dataset folders: antimicrobial-resistance , ariba , and minmer . The antimicrobial-resistance folder contains pre-formatted datasets available from NCBI's AMRFinderPlus . The ariba folder contains pre-formatted datasets available from Ariba's getref Reference Datasets . Finally minmer folder contains a RefSeq Mash Sketch and GenBank Sourmash Signatures of more than 100,000 genomes. Changing files in antimicrobial-resistance , ariba , and minmer is not recommended These directories are for general analysis and have been precomputed. Modifying these files may cause errors during analysis. AMRFinder+ databases can sometimes require specific versions Occasionally, AMRFinder+ require a specic version of AMRFinder+ and things stop working. If this occurs you can press forward using --skip_amr in Bactopia, but also please submit a Issue for this .","title":"General Datasets"},{"location":"datasets/#species-specific-datasets","text":"Bactopia allows the datasets to be created for a specific species. The following sections outline the species specific datasets.","title":"Species Specific Datasets"},{"location":"datasets/#annotation","text":"Completed RefSeq genomes are downloaded and then the proteins are clustered and formatted for usage with Prokka. The results from this clustering is stored in the annotation folder. ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 annotation \u251c\u2500\u2500 cdhit-stats.txt \u251c\u2500\u2500 genome_size.json \u251c\u2500\u2500 ncbi-metadata.txt \u251c\u2500\u2500 prodigal.tf \u251c\u2500\u2500 proteins.faa \u251c\u2500\u2500 proteins.faa.clstr \u2514\u2500\u2500 proteins-updated.txt Filename Description cdhit-stats.txt General statistics associated with CD-HIT clustering genome_size.json A list of genome size for each downloaded RefSeq genome ncbi-metadata.txt NCBI Assembly metadata associated with the downloaded RefSeq genomes prodigal.tf A pre-built species specific Prodigal training file provided with --prodigal_tf proteins.faa Set of Prokka formatted proteins proteins.faa.clstr Description of the clusters created by CD-HIT proteins-updated.txt Information on the last time the protein set was updated You can add your curated protein set here If you have a set of proteins you would like to use for annotation, you can name it proteins.faa and place it in the annotation folder. In order for your set of proteins to be used by Prokka, you must make sure you follow the Prokka FASTA database format . An alternative is to use the --accessions parameter and give bactopia datasets the list of RefSeq accessions when the dataset is created. In doing so the custom protein set will be automatically formatted using the genomes you specified.","title":"annotation"},{"location":"datasets/#minmer","text":"By default, a Mash sketch is created for the completed genomes downloaded for clustering proteins. These sketches are then be used for automatic selection of reference genomes for variant calling. ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 minmer \u251c\u2500\u2500 minmer-updated.txt \u2514\u2500\u2500 refseq-genomes.msh Filename Description minmer-updated.txt Information on the last time the mash sketch was updated refseq-genomes.msh A Mash sketch (k=31) of the RefSeq completed genomes You can add your curated RefSeq sketch here You can replace refseq-genomes.msh with a custom set of RefSeq genomes to be used for automatic reference selection. The only requirements to do so are that only RefSeq genomes (start with GCF) are used and the mash sketch uses a k-mer length of 31 ( -k 31 ). This will allow it to be compatible with Bactopia. An alternative is to use the --accessions parameter and give bactopia datasets the list of RefSeq accessions when the dataset is created. In doing so the mash sketch will be automatically created.","title":"minmer"},{"location":"datasets/#mlst","text":"The mlst folder contains MLST schemas that have been formatted to be used by Ariba and BLAST . ${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 mlst \u2514\u2500\u2500 ${SCHEMA} \u251c\u2500\u2500 ariba.tar.gz \u251c\u2500\u2500 blastdb.tar.gz \u2514\u2500\u2500 mlst-updated.txt Filename Description ariba.tar.gz An Ariba formatted MLST dataset for a given schema blastdb.tar.gz A BLAST formatted MLST dataset for a given schema mlst-updated.txt Contains time stamp for the last time the MSLT dataset was updated How does Bactopia handle organisms with multiple MLST schemas? In a few cases, an organism might have multiple MLST schemas available (Example: E. coli ). In such cases, each MLST schema is downloaded and set up. Bactopia will also call sequence types against each schema. Changing files in mlst is not recommended The MLST schemas have been pre-formatted for your usage. There might be rare cases where you would like to provide your own schema. If this is the case it is recommended you take a look at: What about MLST not hosted at pubmlst.org? then follow the directory structure for mlst .","title":"mlst"},{"location":"datasets/#optional","text":"Built into the Bactopia dataset structure is the optional folder that you, the user, can populate for species specific analysis. These could include specific genes you might want BLASTed against your samples or a specific reference you want all your samples mapped to and variants called.","title":"optional"},{"location":"datasets/#blast","text":"${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 blast \u251c\u2500\u2500 genes \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u251c\u2500\u2500 primers \u2502 \u2514\u2500\u2500 ${NAME}.fasta \u2514\u2500\u2500 proteins \u2514\u2500\u2500 ${NAME}.fasta In the blast directory there are three more directories! The genes folder is where you can place gene seqeunces (nucleotides) in FASTA format to query against assemblies using blastn . The primers folder is where you can place primer sequences (nucleotides) in FASTA format to query against assemblies using blastn , but with primer-specific parameters and cut-offs. Finally, the proteins (as you probably guessed!) is where you can place protein sequnces (amino acids) in FASTA format to query against assemblies using blastp .","title":"blast"},{"location":"datasets/#mapping-sequences","text":"${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 mapping-sequences \u2514\u2500\u2500 ${NAME}.fasta In the mapping-sequences directory you can place FASTA files of any nucleotide sequence you would like FASTQ reads to be mapped against using BWA . This can be useful if you are interested if whether a certain region or gene is covered or not.","title":"mapping-sequences"},{"location":"datasets/#reference-genomes","text":"${DATASET_FOLDER} \u2514\u2500\u2500 species-specific \u2514\u2500\u2500 ${SPECIES} \u2514\u2500\u2500 optional \u2514\u2500\u2500 reference-genomes \u2514\u2500\u2500 ${NAME}.{gbk|fasta} In the reference-genomes directory you can put a GenBank (preferred!) or FASTA file of a reference genome you would like variants to be called against using Snippy .","title":"reference-genomes"},{"location":"enhancements/","text":"Enhancements to Open Source Software \u00b6 Maintaining open source software is a difficult challenge. It's often a time-consuming and completely voluntary process with little to no recognition. The field of bioinformatics is not immune to this. Many of the tools we use on a daily basis are maintained by individuals with little to no support. Bactopia, is no different. Being fully aware of these challenges, when I first started developing Bactopia, I wanted there to be mechanisms to contribute back to the community. To acheive this, I implemented a few design requirements: Tools must open source and free to use. Tools must be available from conda Bactopia Tools must be available on nf-core/modules Bactopia has provided 137+ contributions to the bioinformatics community 8 standa-alone tools, each available from Bioconda 22 new Conda recipes, 33 updated recipes, and 1,000+ Bioconda pull requests reviewed . 56 contributions to nf-core/modules 18 contributions to other tools These contributions are to the wider community, and do not require you to use Bactopia to take advantage of them. Stand-Alone Tools \u00b6 Occasionally tools are developed for specific tasks in Bactopia. For example, Dragonflye was developed to add Nanopore support to Bactopia. When these tools were developed, they are developed to be stand-alone. Below are 8 tools, originally built for Bactopia that you can make use of outside of Bactopia. Tool Description assembly-scan Generate basic stats for an assembly dragonflye Assemble bacterial isolate genomes from Nanopore reads fastq-dl Download FASTQ files from SRA or ENA repositories. fastq-scan Output FASTQ summary statistics in JSON format pmga A fork of PMGA for all Neisseria species and Haemophilus influenzae shovill-se A fork of Shovill that includes support for single end reads staphopia-sccmec A standalone version of Staphopia\u2019s SCCmec typing method vcf-annotator Add biological annotations to variants in a given VCF file Bioconda Contributions \u00b6 Bactopia requires tools be installable with Conda to make installation easier for users. An unintended side-effect of this has been a larger involvement with the Bioconda community. Bioconda is an amazing resource that doesn't end with `conda install! For every recipe added to Bioconda, a Docker container is created by Biocontainers , as well as a Singularity image is created by the Galaxy Project . At the end of the day, a single recipe makes a huge contribution to the community. Bactopia has led to 22 new recipes, 33 updated recipes, and more than 1,000 pull requests have been reviewed . New Recipes \u00b6 Bactopia has led to the addition of 22 new recipes to Bioconda and conda-forge . These new recipes allow users to rapidly begin using these tools for their own analyses, and include: Tool Description Pull Request Aspera Connect high-performance transfer client anaconda/rpetit3 assembly-scan Generate basic stats for an assembly bioconda/bioconda-recipes#11425 bactopia A flexible pipeline for complete analysis of bacterial genomes bioconda/bioconda-recipes#17434 Dragonflye Assemble bacterial isolate genomes from Nanopore reads bioconda/bioconda-recipes#29696 ena-dl Download FASTQ files from ENA bioconda/bioconda-recipes#17354 executor programmer friendly Python subprocess wrapper conda-forge/staged-recipes#9457 fastq-dl Download FASTQ files from SRA or ENA repositories. bioconda/bioconda-recipes#18252 fastq-scan Output FASTQ summary statistics in JSON format bioconda/bioconda-recipes#11415 GenoTyphi assign genotypes to Salmonella Typhi genomes bioconda/bioconda-recipes#25674 illumina-cleanup A simple pipeline for pre-processing Illumina FASTQ files bioconda/bioconda-recipes#11481 ISMapper insertion sequence mapping software bioconda/bioconda-recipes#14180 mashpit Sketch-based surveillance platform bioconda/bioconda-recipes#35199 pmga Command-line version of PMGA (PubMLST Genome Annotator) bioconda/bioconda-recipes/#32801 property-manager useful property variants for Python programming conda-forge/staged-recipes#9442 RFPlasmid predicting plasmid contigs from assemblies bioconda/bioconda-recipes#25849 SerotypeFinder Identifies the serotype in total or partial sequenced isolates of E. coli bioconda/bioconda-recipes#29718 shovill-se A fork of Shovill that includes support for single end reads bioconda/bioconda-recipes#26040 spaTyper computational method for finding spa types bioconda/bioconda-recipes#26044 sra-human-scrubber Identify and remove human reads from FASTQ files bioconda/bioconda-recipes#29926 staphopia-sccmec A standalone version of Staphopia's SCCmec typing method bioconda/bioconda-recipes#28214 tbl2asn-forever use tbl2asn forever by pretending that it's still 2019 bioconda/bioconda-recipes#20073 vcf-annotator Add biological annotations to variants in a given VCF file bioconda/bioconda-recipes#13417 Every recipe gets a Docker and Singularity container Sometimes overlooked, its important to reinterate, every recipe added to Bioconda has a Docker container created Biocontainers , and a Singularity container created by the Galaxy Project . These containers allow for version controlled reproducible analyses. Enhancements and Fixes \u00b6 A common issue with Bioconda recipes, is the tool works great in a Conda environment when containerized it fails for various reasons. When these issues occur with a tool used by Bactopia an effort is made to improve or fix the Bioconda recipe. Below is a list fixes and improvements to some Bioconda recipes: Tool Description Pull Request GenoTyphi Update genotyphi recipe for mykrobe based analysis bioconda/bioconda-recipes#35388 Seroba Add database to Seroba recipe bioconda/bioconda-recipes#35378 Ariba Update ariba dependencies for latest pymummer bioconda/bioconda-recipes#35383 pymummer patch pymummer recipe to use system/user TMP bioconda/bioconda-recipes#35379 PlasmidFinder Update PlasmidFinder for better container support bioconda/bioconda-recipes#35314 GTDB-Tk Allow GTDB-Tk database download with container bioconda/bioconda-recipes#35174 ShigaTyper update shigatyper recipe for better container support bioconda/bioconda-recipes#35161 FastANI Remove fastani from build fail list bioconda/bioconda-recipes#33556 FastANI update FastANI recipe bioconda/bioconda-recipes#33433 Prokka Update Prokka bioperl pinning bioconda/bioconda-recipes#33411 SsuisSero update SsuisSero dependency bioconda/bioconda-recipes#33268 RGI Improve RGI docker container bioconda/bioconda-recipes#33249 legsta Improve dockerbuild for Legsta bioconda/bioconda-recipes#33246 fastq-scan Update fastq-scan recipe to include jq bioconda/bioconda-recipes#32650 Ariba Patch ariba recipe with minor bug fixes bioconda/bioconda-recipes#32258 PIRATE Update PIRATE recipe to include post-analysis scripts bioconda/bioconda-recipes#31629 ngmaster rebuild ngmaster to get docker container bioconda/bioconda-recipes#31376 AgrVATE add missing dependency for agrvate bioconda/bioconda-recipes#31035 spaTyper Patch spatyper for entrypoint support bioconda/bioconda-recipes#30824 spaTyper Patch spatyper for better container support bioconda/bioconda-recipes#30622 Kleborate Update kleborate recipe to build DB bioconda/bioconda-recipes#30582 cyvcf2 Loosen htslib version requirement for cyvcf2 bioconda/bioconda-recipes#30044 Kleborate Patch Kleborate's method for discovering Kaptive bioconda/bioconda-recipes#29623 spaTyper update spatyper - drop blake_sha256 requirement bioconda/bioconda-recipes#27321 ISMapper ISMapper - Fix BioPython pinning bioconda/bioconda-recipes#26599 CheckM checkm-genome - fix broken pinning by older pysam version bioconda/bioconda-recipes#25856 ISMapper Update ISMapper - Pin BioPython version bioconda/bioconda-recipes#24314 Ariba Patches for third party links used by Ariba bioconda/bioconda-recipes#24010 Seroba Add pysam pinning for Seroba bioconda/bioconda-recipes#17568 Ariba Update pysam pinning for Ariba bioconda/bioconda-recipes#17448 tbl2asn Previous version of tbl2asn has expired, updated to 25.7 bioconda/bioconda-recipes#16131 ISMapper Rebuild ismapper for GCC7 migration bioconda/bioconda-recipes#14276 MentaLiST MentaLiST v0.2.4 patch for Julia bioconda/bioconda-recipes#13137 nf-core/modules Contributions \u00b6 When Bactopia was converted to Nextflow DSL2, it allowed the opportunity to adopt modules from nf-core/modules . These modules allow users to easily include them in their own Nextflow DSL2 pipelines. To facilitate this, A requirement was made that each Bactopia Tool , separate workflows, would require that a corresponding module be available from nf-core/modules, and if its not available it would be added. By adopting this practice, there have been 56 contributions to nf-core/modules in the form of new modules, module updates, and testing adjustments. Tool Description Pull Request Mykrobe add module for mykrobe/predict nf-core/modules#1818 GenoTyphi add module for genotyphi/parse nf-core/modules#1818 Seroba add module for seroba nf-core/modules#1816 PlasmidFinder add plasmidfinder module nf-core/modules#1773 mcroni add mcroni module nf-core/modules#1750 Ariba add ariba module nf-core/modules#1731 snippy add snippy module nf-core/modules#1643 ShigaTyper add shigatyper module nf-core/modules#1548 panaroo add module for panaroo, fix pirate tests nf-core/modules#1444 Dragonflye Update dragonflye to latest version nf-core/modules#1442 Bakta update bakta to latest version (v1.4.0) nf-core/modules#1428 Roary Update test.yml for Roary module nf-core/modules#1419 HpsuisSero add hpsuisero module nf-core/modules#1331 SsuisSero add ssuisero module nf-core/modules#1329 SISTR add sistr module nf-core/modules#1322 RGI add rgi module nf-core/modules#1321 legsta add legsta module nf-core/modules#1319 AMRFinder+ add amrfindplus module nf-core/modules#1284 abricate add abricate module nf-core/modules#1280 mobsuite/recon add mobsuite/recon module nf-core/modules#1270 mash/dist add mash/dist module nf-core/modules#1193 Kleborate Fix kleborate inputs nf-core/modules#1172 nf-core/modules fix test data path for ClonalFrameML,roary,pirate nf-core/modules#1085 Bakta add bakta module nf-core/modules#1085 nf-core/modules use underscores in anchors and references nf-core/modules#1080 Scoary add scoary module nf-core/modules#1034 emmtyper add emmtyper module nf-core/modules#1028 LisSero add lissero module nf-core/modules#1026 ngmaster add ngmaster module nf-core/modules#1024 meningotype add meningotype module nf-core/modules#1022 SeqSero2 add seqsero2 module nf-core/modules#1016 ncbi-genome-download add ncbi-genome-download module nf-core/modules#980 ClonalFrameML add clonalframeml module nf-core/modules#974 AgrVATE Update agrvate version nf-core/modules#970 ECTyper add ectyper module nf-core/modules#948 TBProfiler add tbprofiler module nf-core/modules#947 spaTyper Update spatyper module (cleanup debug) nf-core/modules#938 hicap [fix] hicap module allow optional outputs nf-core/modules#937 fastq-scan add fastq-scan module nf-core/modules#935 csvtk patch output extension in csvtk/concat nf-core/modules#797 csvtk add csvtk/concat module nf-core/modules#785 spaTyper add spatyper module nf-core/modules#784 PIRATE add pirate module nf-core/modules#777 Roary add roary module nf-core/modules#776 ISMapper add ismapper module nf-core/modules#773 hicap add hicap module nf-core/modules#772 mashtree add mashtree module nf-core/modules#767 nf-core/modules update tests for 12 modules for new config nf-core/modules#758 AgrVATE Update agrvate to v1.0.1 nf-core/modules#728 staphopia-sccmec add staphopia-sccmec module nf-core/modules#702 Dragonflye add module for dragonflye nf-core/modules#633 nf-core/modules update tests for 21 modules for new config nf-core/modules#384 Prokka Update Prokka modules - add process label nf-core/modules#350 nf-core/modules README - Fix link describing process labels nf-core/modules#349 Shovill Update shovill module nf-core/modules#337 Prokka add prokka module nf-core/modules#298 Other Contributions \u00b6 In addition to Bioconda and nf-core/modules, Bactopia has made 18 contributions to other tools including: Tool Description Pull Request Seroba let tempfile determine temp dir location sanger-pathogens/seroba#68 pymummer allow the user to specify temp dir or use the system default sanger-pathogens/pymummer#36 ShigaTyper Fix install process CFSAN-Biostatistics/shigatyper#10 legsta use grep -q to play nice with bioconda docker build tseemann/legsta#17 ShigaTyper Add single-end and ONT support, add GitHub Actions, update readme CFSAN-Biostatistics/shigatyper#9 Ariba Ignore comments column and drop Bio.Alphabet sanger-pathogens/ariba#319 BioContainers Add ClonalFrameML and maskrc-svg multipackage BioContainers/multi-package-containers#1923\" Kleborate Add --kaptive_path to specify path to kaptive data katholt/Kleborate#59 Ariba fix SPAdes version capture sanger-pathogens/ariba#315 AgrVATE Fix for dots in sample names VishnuRaghuram94/AgrVATE#9 PIRATE Add minimum feature length option SionBayliss/PIRATE#53 Ariba Fix for changes in PubMLST url sanger-pathogens/ariba#305 Ariba Solution 1: for fixing CARD download sanger-pathogens/ariba#302 bowtie2 Rename VERSION to BOWTIE2_VERSION BenLangmead/bowtie2#302 phyloFlash Improved single end support HRGV/phyloFlash#102 ISMapper set min_range and max_range args to be a float jhawkey/IS_mapper#38 maskrc-svg Add requirements.txt for python modules kwongj/maskrc-svg#2 Shovill Added shovill-se for processing single-end reads tseemann/shovill#105","title":"Enhancements to OSS"},{"location":"enhancements/#enhancements-to-open-source-software","text":"Maintaining open source software is a difficult challenge. It's often a time-consuming and completely voluntary process with little to no recognition. The field of bioinformatics is not immune to this. Many of the tools we use on a daily basis are maintained by individuals with little to no support. Bactopia, is no different. Being fully aware of these challenges, when I first started developing Bactopia, I wanted there to be mechanisms to contribute back to the community. To acheive this, I implemented a few design requirements: Tools must open source and free to use. Tools must be available from conda Bactopia Tools must be available on nf-core/modules Bactopia has provided 137+ contributions to the bioinformatics community 8 standa-alone tools, each available from Bioconda 22 new Conda recipes, 33 updated recipes, and 1,000+ Bioconda pull requests reviewed . 56 contributions to nf-core/modules 18 contributions to other tools These contributions are to the wider community, and do not require you to use Bactopia to take advantage of them.","title":"Enhancements to Open Source Software"},{"location":"enhancements/#stand-alone-tools","text":"Occasionally tools are developed for specific tasks in Bactopia. For example, Dragonflye was developed to add Nanopore support to Bactopia. When these tools were developed, they are developed to be stand-alone. Below are 8 tools, originally built for Bactopia that you can make use of outside of Bactopia. Tool Description assembly-scan Generate basic stats for an assembly dragonflye Assemble bacterial isolate genomes from Nanopore reads fastq-dl Download FASTQ files from SRA or ENA repositories. fastq-scan Output FASTQ summary statistics in JSON format pmga A fork of PMGA for all Neisseria species and Haemophilus influenzae shovill-se A fork of Shovill that includes support for single end reads staphopia-sccmec A standalone version of Staphopia\u2019s SCCmec typing method vcf-annotator Add biological annotations to variants in a given VCF file","title":"Stand-Alone Tools"},{"location":"enhancements/#bioconda-contributions","text":"Bactopia requires tools be installable with Conda to make installation easier for users. An unintended side-effect of this has been a larger involvement with the Bioconda community. Bioconda is an amazing resource that doesn't end with `conda install! For every recipe added to Bioconda, a Docker container is created by Biocontainers , as well as a Singularity image is created by the Galaxy Project . At the end of the day, a single recipe makes a huge contribution to the community. Bactopia has led to 22 new recipes, 33 updated recipes, and more than 1,000 pull requests have been reviewed .","title":"Bioconda Contributions"},{"location":"enhancements/#new-recipes","text":"Bactopia has led to the addition of 22 new recipes to Bioconda and conda-forge . These new recipes allow users to rapidly begin using these tools for their own analyses, and include: Tool Description Pull Request Aspera Connect high-performance transfer client anaconda/rpetit3 assembly-scan Generate basic stats for an assembly bioconda/bioconda-recipes#11425 bactopia A flexible pipeline for complete analysis of bacterial genomes bioconda/bioconda-recipes#17434 Dragonflye Assemble bacterial isolate genomes from Nanopore reads bioconda/bioconda-recipes#29696 ena-dl Download FASTQ files from ENA bioconda/bioconda-recipes#17354 executor programmer friendly Python subprocess wrapper conda-forge/staged-recipes#9457 fastq-dl Download FASTQ files from SRA or ENA repositories. bioconda/bioconda-recipes#18252 fastq-scan Output FASTQ summary statistics in JSON format bioconda/bioconda-recipes#11415 GenoTyphi assign genotypes to Salmonella Typhi genomes bioconda/bioconda-recipes#25674 illumina-cleanup A simple pipeline for pre-processing Illumina FASTQ files bioconda/bioconda-recipes#11481 ISMapper insertion sequence mapping software bioconda/bioconda-recipes#14180 mashpit Sketch-based surveillance platform bioconda/bioconda-recipes#35199 pmga Command-line version of PMGA (PubMLST Genome Annotator) bioconda/bioconda-recipes/#32801 property-manager useful property variants for Python programming conda-forge/staged-recipes#9442 RFPlasmid predicting plasmid contigs from assemblies bioconda/bioconda-recipes#25849 SerotypeFinder Identifies the serotype in total or partial sequenced isolates of E. coli bioconda/bioconda-recipes#29718 shovill-se A fork of Shovill that includes support for single end reads bioconda/bioconda-recipes#26040 spaTyper computational method for finding spa types bioconda/bioconda-recipes#26044 sra-human-scrubber Identify and remove human reads from FASTQ files bioconda/bioconda-recipes#29926 staphopia-sccmec A standalone version of Staphopia's SCCmec typing method bioconda/bioconda-recipes#28214 tbl2asn-forever use tbl2asn forever by pretending that it's still 2019 bioconda/bioconda-recipes#20073 vcf-annotator Add biological annotations to variants in a given VCF file bioconda/bioconda-recipes#13417 Every recipe gets a Docker and Singularity container Sometimes overlooked, its important to reinterate, every recipe added to Bioconda has a Docker container created Biocontainers , and a Singularity container created by the Galaxy Project . These containers allow for version controlled reproducible analyses.","title":"New Recipes"},{"location":"enhancements/#enhancements-and-fixes","text":"A common issue with Bioconda recipes, is the tool works great in a Conda environment when containerized it fails for various reasons. When these issues occur with a tool used by Bactopia an effort is made to improve or fix the Bioconda recipe. Below is a list fixes and improvements to some Bioconda recipes: Tool Description Pull Request GenoTyphi Update genotyphi recipe for mykrobe based analysis bioconda/bioconda-recipes#35388 Seroba Add database to Seroba recipe bioconda/bioconda-recipes#35378 Ariba Update ariba dependencies for latest pymummer bioconda/bioconda-recipes#35383 pymummer patch pymummer recipe to use system/user TMP bioconda/bioconda-recipes#35379 PlasmidFinder Update PlasmidFinder for better container support bioconda/bioconda-recipes#35314 GTDB-Tk Allow GTDB-Tk database download with container bioconda/bioconda-recipes#35174 ShigaTyper update shigatyper recipe for better container support bioconda/bioconda-recipes#35161 FastANI Remove fastani from build fail list bioconda/bioconda-recipes#33556 FastANI update FastANI recipe bioconda/bioconda-recipes#33433 Prokka Update Prokka bioperl pinning bioconda/bioconda-recipes#33411 SsuisSero update SsuisSero dependency bioconda/bioconda-recipes#33268 RGI Improve RGI docker container bioconda/bioconda-recipes#33249 legsta Improve dockerbuild for Legsta bioconda/bioconda-recipes#33246 fastq-scan Update fastq-scan recipe to include jq bioconda/bioconda-recipes#32650 Ariba Patch ariba recipe with minor bug fixes bioconda/bioconda-recipes#32258 PIRATE Update PIRATE recipe to include post-analysis scripts bioconda/bioconda-recipes#31629 ngmaster rebuild ngmaster to get docker container bioconda/bioconda-recipes#31376 AgrVATE add missing dependency for agrvate bioconda/bioconda-recipes#31035 spaTyper Patch spatyper for entrypoint support bioconda/bioconda-recipes#30824 spaTyper Patch spatyper for better container support bioconda/bioconda-recipes#30622 Kleborate Update kleborate recipe to build DB bioconda/bioconda-recipes#30582 cyvcf2 Loosen htslib version requirement for cyvcf2 bioconda/bioconda-recipes#30044 Kleborate Patch Kleborate's method for discovering Kaptive bioconda/bioconda-recipes#29623 spaTyper update spatyper - drop blake_sha256 requirement bioconda/bioconda-recipes#27321 ISMapper ISMapper - Fix BioPython pinning bioconda/bioconda-recipes#26599 CheckM checkm-genome - fix broken pinning by older pysam version bioconda/bioconda-recipes#25856 ISMapper Update ISMapper - Pin BioPython version bioconda/bioconda-recipes#24314 Ariba Patches for third party links used by Ariba bioconda/bioconda-recipes#24010 Seroba Add pysam pinning for Seroba bioconda/bioconda-recipes#17568 Ariba Update pysam pinning for Ariba bioconda/bioconda-recipes#17448 tbl2asn Previous version of tbl2asn has expired, updated to 25.7 bioconda/bioconda-recipes#16131 ISMapper Rebuild ismapper for GCC7 migration bioconda/bioconda-recipes#14276 MentaLiST MentaLiST v0.2.4 patch for Julia bioconda/bioconda-recipes#13137","title":"Enhancements and Fixes"},{"location":"enhancements/#nf-coremodules-contributions","text":"When Bactopia was converted to Nextflow DSL2, it allowed the opportunity to adopt modules from nf-core/modules . These modules allow users to easily include them in their own Nextflow DSL2 pipelines. To facilitate this, A requirement was made that each Bactopia Tool , separate workflows, would require that a corresponding module be available from nf-core/modules, and if its not available it would be added. By adopting this practice, there have been 56 contributions to nf-core/modules in the form of new modules, module updates, and testing adjustments. Tool Description Pull Request Mykrobe add module for mykrobe/predict nf-core/modules#1818 GenoTyphi add module for genotyphi/parse nf-core/modules#1818 Seroba add module for seroba nf-core/modules#1816 PlasmidFinder add plasmidfinder module nf-core/modules#1773 mcroni add mcroni module nf-core/modules#1750 Ariba add ariba module nf-core/modules#1731 snippy add snippy module nf-core/modules#1643 ShigaTyper add shigatyper module nf-core/modules#1548 panaroo add module for panaroo, fix pirate tests nf-core/modules#1444 Dragonflye Update dragonflye to latest version nf-core/modules#1442 Bakta update bakta to latest version (v1.4.0) nf-core/modules#1428 Roary Update test.yml for Roary module nf-core/modules#1419 HpsuisSero add hpsuisero module nf-core/modules#1331 SsuisSero add ssuisero module nf-core/modules#1329 SISTR add sistr module nf-core/modules#1322 RGI add rgi module nf-core/modules#1321 legsta add legsta module nf-core/modules#1319 AMRFinder+ add amrfindplus module nf-core/modules#1284 abricate add abricate module nf-core/modules#1280 mobsuite/recon add mobsuite/recon module nf-core/modules#1270 mash/dist add mash/dist module nf-core/modules#1193 Kleborate Fix kleborate inputs nf-core/modules#1172 nf-core/modules fix test data path for ClonalFrameML,roary,pirate nf-core/modules#1085 Bakta add bakta module nf-core/modules#1085 nf-core/modules use underscores in anchors and references nf-core/modules#1080 Scoary add scoary module nf-core/modules#1034 emmtyper add emmtyper module nf-core/modules#1028 LisSero add lissero module nf-core/modules#1026 ngmaster add ngmaster module nf-core/modules#1024 meningotype add meningotype module nf-core/modules#1022 SeqSero2 add seqsero2 module nf-core/modules#1016 ncbi-genome-download add ncbi-genome-download module nf-core/modules#980 ClonalFrameML add clonalframeml module nf-core/modules#974 AgrVATE Update agrvate version nf-core/modules#970 ECTyper add ectyper module nf-core/modules#948 TBProfiler add tbprofiler module nf-core/modules#947 spaTyper Update spatyper module (cleanup debug) nf-core/modules#938 hicap [fix] hicap module allow optional outputs nf-core/modules#937 fastq-scan add fastq-scan module nf-core/modules#935 csvtk patch output extension in csvtk/concat nf-core/modules#797 csvtk add csvtk/concat module nf-core/modules#785 spaTyper add spatyper module nf-core/modules#784 PIRATE add pirate module nf-core/modules#777 Roary add roary module nf-core/modules#776 ISMapper add ismapper module nf-core/modules#773 hicap add hicap module nf-core/modules#772 mashtree add mashtree module nf-core/modules#767 nf-core/modules update tests for 12 modules for new config nf-core/modules#758 AgrVATE Update agrvate to v1.0.1 nf-core/modules#728 staphopia-sccmec add staphopia-sccmec module nf-core/modules#702 Dragonflye add module for dragonflye nf-core/modules#633 nf-core/modules update tests for 21 modules for new config nf-core/modules#384 Prokka Update Prokka modules - add process label nf-core/modules#350 nf-core/modules README - Fix link describing process labels nf-core/modules#349 Shovill Update shovill module nf-core/modules#337 Prokka add prokka module nf-core/modules#298","title":"nf-core/modules Contributions"},{"location":"enhancements/#other-contributions","text":"In addition to Bioconda and nf-core/modules, Bactopia has made 18 contributions to other tools including: Tool Description Pull Request Seroba let tempfile determine temp dir location sanger-pathogens/seroba#68 pymummer allow the user to specify temp dir or use the system default sanger-pathogens/pymummer#36 ShigaTyper Fix install process CFSAN-Biostatistics/shigatyper#10 legsta use grep -q to play nice with bioconda docker build tseemann/legsta#17 ShigaTyper Add single-end and ONT support, add GitHub Actions, update readme CFSAN-Biostatistics/shigatyper#9 Ariba Ignore comments column and drop Bio.Alphabet sanger-pathogens/ariba#319 BioContainers Add ClonalFrameML and maskrc-svg multipackage BioContainers/multi-package-containers#1923\" Kleborate Add --kaptive_path to specify path to kaptive data katholt/Kleborate#59 Ariba fix SPAdes version capture sanger-pathogens/ariba#315 AgrVATE Fix for dots in sample names VishnuRaghuram94/AgrVATE#9 PIRATE Add minimum feature length option SionBayliss/PIRATE#53 Ariba Fix for changes in PubMLST url sanger-pathogens/ariba#305 Ariba Solution 1: for fixing CARD download sanger-pathogens/ariba#302 bowtie2 Rename VERSION to BOWTIE2_VERSION BenLangmead/bowtie2#302 phyloFlash Improved single end support HRGV/phyloFlash#102 ISMapper set min_range and max_range args to be a float jhawkey/IS_mapper#38 maskrc-svg Add requirements.txt for python modules kwongj/maskrc-svg#2 Shovill Added shovill-se for processing single-end reads tseemann/shovill#105","title":"Other Contributions"},{"location":"installation/","text":"Installation \u00b6 Bactopia has a a lot of tools built into its workflow. As you can imagine, all these tools lead to numerous dependencies, and navigating dependencies can often turn into a very frustrating process. With this in mind, from the onset Bactopia was developed to only include programs that are installable using Conda . Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. In other words, it makes it super easy to get the tools you need installed! The official Conda documentation is a good starting point for getting started with Conda. Bactopia has been tested using the Miniconda installer , but the Anaconda installer should work the same. Containers (Docker and Singularity) are also available. Bioconda \u00b6 Once you have Conda all set up, you are ready to create an environment for Bactopia. To do so, you can use the following command: conda create -n bactopia -c conda-forge -c bioconda bactopia After a few minutes you will have a new conda environment suitably named bactopia . To activate this environment, you will can use the following command: conda activate bactopia And voil\u00e0, you are all set to get started processing your data! But first, it is highly recommended that you take the time to Build Datasets that Bactopia can take advantage of. OSX has limited support I have developed Bactopia primarily for Linux, but I recognize it is useable on Mac OSX. Currently the support for OSX will be limited due to not having significant resources available for testing OSX extensively. My current setup, a mid-2013 MacBook, only allows me to maintain the Conda YAMLS for OSX. Please keep this in mind when using Bactopia on OSX. I will still try to help out if you run into any issues! Windows is not supported, please use Windows Subsystem for Linux Bactopia will never support Windows natively due to dependencies. To use Bactopia on a Windows 10 machine, you will need to set up Windows Subsystem for Linux (WSL). This would allow you to run Bactopia inside the Linux subsystem. I have not tested Bactopia on WSL, but assume it should work fine. I have limited resources to test Bactopia in WSL, but if you give it a go and run into any issues please reach out! Container \u00b6 A Docker and Singularity container has been created that is based off the Conda install. # Docker docker pull bactopia/bactopia # Singularity singularity pull library://rpetit3/bactopia/bactopia These might not be available Recent changes to DockerHub and Singularity policies have made the availability of these containers questionable. While I will try my best to make sure they are available, please understand if they are not. If they are not available, I maintain the Dockerfile and Singularity files which can be used to build the containers locally.","title":"Installation"},{"location":"installation/#installation","text":"Bactopia has a a lot of tools built into its workflow. As you can imagine, all these tools lead to numerous dependencies, and navigating dependencies can often turn into a very frustrating process. With this in mind, from the onset Bactopia was developed to only include programs that are installable using Conda . Conda is an open source package management system and environment management system that runs on Windows, macOS and Linux. In other words, it makes it super easy to get the tools you need installed! The official Conda documentation is a good starting point for getting started with Conda. Bactopia has been tested using the Miniconda installer , but the Anaconda installer should work the same. Containers (Docker and Singularity) are also available.","title":"Installation"},{"location":"installation/#bioconda","text":"Once you have Conda all set up, you are ready to create an environment for Bactopia. To do so, you can use the following command: conda create -n bactopia -c conda-forge -c bioconda bactopia After a few minutes you will have a new conda environment suitably named bactopia . To activate this environment, you will can use the following command: conda activate bactopia And voil\u00e0, you are all set to get started processing your data! But first, it is highly recommended that you take the time to Build Datasets that Bactopia can take advantage of. OSX has limited support I have developed Bactopia primarily for Linux, but I recognize it is useable on Mac OSX. Currently the support for OSX will be limited due to not having significant resources available for testing OSX extensively. My current setup, a mid-2013 MacBook, only allows me to maintain the Conda YAMLS for OSX. Please keep this in mind when using Bactopia on OSX. I will still try to help out if you run into any issues! Windows is not supported, please use Windows Subsystem for Linux Bactopia will never support Windows natively due to dependencies. To use Bactopia on a Windows 10 machine, you will need to set up Windows Subsystem for Linux (WSL). This would allow you to run Bactopia inside the Linux subsystem. I have not tested Bactopia on WSL, but assume it should work fine. I have limited resources to test Bactopia in WSL, but if you give it a go and run into any issues please reach out!","title":"Bioconda"},{"location":"installation/#container","text":"A Docker and Singularity container has been created that is based off the Conda install. # Docker docker pull bactopia/bactopia # Singularity singularity pull library://rpetit3/bactopia/bactopia These might not be available Recent changes to DockerHub and Singularity policies have made the availability of these containers questionable. While I will try my best to make sure they are available, please understand if they are not. If they are not available, I maintain the Dockerfile and Singularity files which can be used to build the containers locally.","title":"Container"},{"location":"output-overview/","text":"Overview of Bactopia Output \u00b6 After a successful run, Bactopia will have produced numerous output files. Just how many output files depends on the input datasets used (e.g. none, general datasets, species specific datasets, user populated datasets). Here is the complete directory structure that is possible (using all available dataset options) with Bactopia. ${SAMPLE_NAME}/ \u251c\u2500\u2500 annotation \u251c\u2500\u2500 antimicrobial_resistance \u251c\u2500\u2500 ariba \u251c\u2500\u2500 assembly \u251c\u2500\u2500 blast \u251c\u2500\u2500 kmers \u251c\u2500\u2500 logs \u251c\u2500\u2500 mapping \u251c\u2500\u2500 minmers \u251c\u2500\u2500 mlst \u251c\u2500\u2500 quality-control \u251c\u2500\u2500 variants \u2514\u2500\u2500 ${SAMPLE_NAME}-genome-size.txt For each type of analysis in Bactopia, a separate directory is created to hold the results. All samples processed by Bactopia will have this directory structure. The only difference is the usage of ${SAMPLE_NAME} as a prefix for naming some output files. Directories \u00b6 The following sections include a list of expected outputs as well as a brief description of each output file. There are instances where additional files (e.g. --keep_all_files and --ariba_noclean ) may be encountered. These files aren't described below, just the defaults. Also, using --compress will add a gz extension, but the original extension is maintained and its description still applies. Developer Descriptions Take Priority If a developer described their software's outputs, their description was used with a link back to the software's documentation (major thanks for taking the time to do that!). In some cases there may have been slight formatting modifications made. In any case, if descriptions are not original credit will be properly given to the source. annotation \u00b6 The annotation directory will contain the outputs from Prokka annotation. These outputs include FASTA (proteins and genes), GFF3, GenBank, and many more. By default the included Prokka databases are used for annotation. However, if a Species Specific Dataset was a created the RefSeq clustered proteins are used first for annotation. File descriptions were directly taken from Prokka's Output Files section and slight modifications were made to the order of rows. ${SAMPLE_NAME}/ \u2514\u2500\u2500 annotation \u251c\u2500\u2500 ${SAMPLE_NAME}.err \u251c\u2500\u2500 ${SAMPLE_NAME}.faa \u251c\u2500\u2500 ${SAMPLE_NAME}.ffn \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u251c\u2500\u2500 ${SAMPLE_NAME}.fsa \u251c\u2500\u2500 ${SAMPLE_NAME}.gbk \u251c\u2500\u2500 ${SAMPLE_NAME}.gff \u251c\u2500\u2500 ${SAMPLE_NAME}.log \u251c\u2500\u2500 ${SAMPLE_NAME}.sqn \u251c\u2500\u2500 ${SAMPLE_NAME}.tbl \u251c\u2500\u2500 ${SAMPLE_NAME}.tsv \u2514\u2500\u2500 ${SAMPLE_NAME}.txt Extension Description .err Unacceptable annotations - the NCBI discrepancy report. .faa Protein FASTA file of the translated CDS sequences. .ffn Nucleotide FASTA file of all the prediction transcripts (CDS, rRNA, tRNA, tmRNA, misc_RNA) .fna Nucleotide FASTA file of the input contig sequences. .fsa Nucleotide FASTA file of the input contig sequences, used by \"tbl2asn\" to create the .sqn file. It is mostly the same as the .fna file, but with extra Sequin tags in the sequence description lines. .gbk This is a standard GenBank file derived from the master .gff. If the input to prokka was a multi-FASTA, then this will be a multi-GenBank, with one record for each sequence. .gff This is the master annotation in GFF3 format, containing both sequences and annotations. It can be viewed directly in Artemis or IGV. .log Contains all the output that Prokka produced during its run. This is a record of what settings you used. .sqn An ASN1 format \"Sequin\" file for submission to GenBank. It needs to be edited to set the correct taxonomy, authors, related publication etc. .tbl Feature Table file, used by \"tbl2asn\" to create the .sqn file. .tsv Tab-separated file of all features: locus_tag,ftype,len_bp,gene,EC_number,COG,product .txt Statistics relating to the annotated features found. antimicrobial_resistance \u00b6 The antimicrobial_resistance directory will contain the output from NCBI's AMRFinderPlus . The results of AMRFinderPlus using genes as and input, and proteins as an input are available. More information about the output format is available from the AMRFinderPlus Wiki . ${SAMPLE_NAME}/ \u2514\u2500\u2500 antimicrobial_resistance/ \u251c\u2500\u2500 ${SAMPLE_NAME}-gene-report.txt \u2514\u2500\u2500 ${SAMPLE_NAME}-protein-report.txt Extension Description -gene-report.txt Results of using gene sequences as an input -protein-report.txt Results of using protein sequences as an input ariba \u00b6 The ariba directory will contain the results of any Ariba analysis (excluding MLST). Only the Ariba databases created during the dataset setup are used for analysis. For each Ariba database (e.g. card or vfdb ), a separate folder with the name of the database is included in the ariba folder. The file descriptions below were modified from Ariba's wiki entries for run and summary . ${SAMPLE_NAME}/ \u2514\u2500\u2500 ariba \u2514\u2500\u2500 ARIBA_DATABASE_NAME \u251c\u2500\u2500 assembled_genes.fa.gz \u251c\u2500\u2500 assembled_seqs.fa.gz \u251c\u2500\u2500 assemblies.fa.gz \u251c\u2500\u2500 debug.report.tsv \u251c\u2500\u2500 log.clusters.gz \u251c\u2500\u2500 report.tsv \u251c\u2500\u2500 summary.csv \u2514\u2500\u2500 version_info.txt Filename Description assembled_genes.fa.gz A gzipped FASTA file of only assembled gene sequences (with extensions). assembled_seqs.fa.gz A gzipped FASTA of the assembled sequences (genes and non-coding). assemblies.fa.gz A gzipped FASTA file of the assemblies (complete, unedited, contigs). debug.report.tsv The complete list of clusters, including those that did not pass filtering. log.clusters.gz Detailed logging for the progress of each cluster. report.tsv A detailed report file of clusters which passed filtering. summary.csv A more condensed summary of the report.tsv version_info.txt Information on the versions of ARIBA and its dependencies at runtime. assembly \u00b6 The assembly folder contains the results of the sample's assembly. standard \u00b6 The standard assembly is managed by Shovill and by default SKESA is used for assembly. Alternative assemblers include SPAdes , MEGAHIT , and Velvet . Depending on the choice of assembler, additional output files (e.g. assembly graphs) may be given. Files descriptions with some modifications were directly taken from Shovill's Output Files section as well as the FLASH usage . ${SAMPLE_NAME}/ \u2514\u2500\u2500 assembly \u251c\u2500\u2500 cointigs.fa \u251c\u2500\u2500 flash.hist \u251c\u2500\u2500 flash.histogram \u251c\u2500\u2500 shovill.corrections \u251c\u2500\u2500 shovill.log \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u2514\u2500\u2500 ${SAMPLE_NAME}.fna.json Filename Description contigs.fa Final assembly without renamed headers. flash.hist Numeric histogram of merged read lengths. flash.histogram Visual histogram of merged read lengths shovill.log Full log file for bug reporting shovill.corrections List of post-assembly corrections ${SAMPLE_NAME}.fna The final assembly, with renamed header to include sample name ${SAMPLE_NAME}.fna.json Summary statistics of the assembly FASTA inputs are not reassembled by default In the case where an assembly is given as an input, the only files that will be available are ${SAMPLE_NAME}.fna (the original unmodified assembly) and ${SAMPLE_NAME}.fna.json . If --reassemble is also given, then all the files seen above will be available. hybrid \u00b6 If long reads are available to supplement input paired-end Illumina reads, a hybrid assembly can be created using Unicycler . Files descriptions with some modifications were directly taken from Unicycler's Output Files . ${SAMPLE_NAME}/ \u2514\u2500\u2500 assembly \u251c\u2500\u2500 001_best_spades_graph.gfa \u251c\u2500\u2500 002_overlaps_removed.gfa \u251c\u2500\u2500 003_long_read_assembly.gfa \u251c\u2500\u2500 004_bridges_applied.gfa \u251c\u2500\u2500 005_final_clean.gfa \u251c\u2500\u2500 006_polished.gfa \u251c\u2500\u2500 007_rotated.gfa \u251c\u2500\u2500 assembly.fasta \u251c\u2500\u2500 assembly.gfa \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u251c\u2500\u2500 ${SAMPLE_NAME}.fna.json \u2514\u2500\u2500 unicycler.log Filename Description 001_best_spades_graph.gfa The best SPAdes short-read assembly graph, with a bit of graph clean-up 002_overlaps_removed.gfa Overlap-free version of the SPAdes graph, with some more graph clean-up 003_long_read_assembly.gfa Assembly graph after long read assembly 004_bridges_applied.gfa Bridges applied, before any cleaning or merging 005_final_clean.gfa Assembly graph after more redundant contigs removed 006_polished.gfa Assembly graph after a round of Pilon polishing 007_rotated.gfa Assembly graph after ircular replicons rotated and/or flipped to a start position assembly.fasta The final assembly in FASTA format (same contigs names as in assembly.gfa) assembly.gfa The final assembly in GFA v1 graph format ${SAMPLE_NAME}.fna The final assembly with renamed header to include sample name ${SAMPLE_NAME}.fna.json Summary statistics of the assembly unicycler.log Unicycler log file (same info as stdout) quality reports \u00b6 Each assembly will have its biological and technical quality assessed with CheckM and QUAST . This assessment is done no matter the input type (paired, single, hybrid, or assembly). Files descriptions with some modifications were directly taken from CheckM's Usage and QUAST's Output Files . assembly/ \u251c\u2500\u2500 checkm \u2502 \u251c\u2500\u2500 bins/ \u2502 \u251c\u2500\u2500 checkm-genes.aln \u2502 \u251c\u2500\u2500 checkm.log \u2502 \u251c\u2500\u2500 checkm-results.txt \u2502 \u251c\u2500\u2500 lineage.ms \u2502 \u2514\u2500\u2500 storage/ \u2514\u2500\u2500 quast \u251c\u2500\u2500 basic_stats/ \u251c\u2500\u2500 icarus.html \u251c\u2500\u2500 icarus_viewers \u2502 \u2514\u2500\u2500 contig_size_viewer.html \u251c\u2500\u2500 predicted_genes \u2502 \u251c\u2500\u2500 GCF_003431365_glimmer_genes.gff.gz \u2502 \u2514\u2500\u2500 GCF_003431365_glimmer.stderr \u251c\u2500\u2500 quast.log \u251c\u2500\u2500 report.{html|pdf|tex|tsv|txt} \u251c\u2500\u2500 transposed_report.tex \u251c\u2500\u2500 transposed_report.tsv \u2514\u2500\u2500 transposed_report.txt CheckM Outputs Filename Description bins/ A folder with inputs (e.g. proteins) for processing by CheckM checkm-genes.aln Alignment of multi-copy genes and their AAI identity checkm.log The output log of CheckM checkm-results.txt Final results of CheckM's lineage_wf lineage.ms Output file describing marker set for each bin storage/ A folder with intermediate results from CheckM processing QUAST Outputs Filename Description basic_stats A folder with plots of assembly metrics (e.g. GC content, NGx, Nx) icarus.html Icarus main menu with links to interactive viewers. icarus_viewers/ Additional reports for Icarus predicted_genes/ Predicted gene output quast.log Detailed information about the QUAST run report.{html|pdf } Assessement summary including all tables and plots report.{tex|tsv|txt} Assessment summary in multiple different formats transposed_report.{tex|tsv|txt} Transposed version of the assessment summary blast \u00b6 The blast directory contains the BLAST results and a BLAST database of the sample assembly. Each of the User Populated BLAST Sequences (gene, primer, or protein) is BLASTed against the sample assembly. Also if setup , annotated genes are BLASTed against the PLSDB BLAST database. By default, results are returned in tabular format. ${SAMPLE_NAME}/ \u2514\u2500\u2500 blast \u251c\u2500\u2500 blastdb \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}.nhr \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}.nin \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}.nsq \u251c\u2500\u2500 genes \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u251c\u2500\u2500 primers \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u251c\u2500\u2500 proteins \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u2514\u2500\u2500 ${SAMPLE_NAME}-plsdb.txt Extension Description .nhr Sample assembly BLAST database header file .nin Sample assembly BLAST database index file .nsq Sample assembly BLAST database sequence file -plsdb.txt The BLAST results against the PLSDB BALST database assembly. .txt The BLAST results of user input sequence(s) against the sample assembly. genome-size \u00b6 For every sample ${SAMPLE_NAME}-genome-size.txt file is created. This file contains the genome size that was used for analysis. Genome size is used throughout Bactopia for various tasks including error correction, subsampling, and assembly. By default, the genome size is estimated with Mash, but users have the option to provide their own value or completely disable genome size related features. Learn more about changing the genome size at Basic Usage - Genome Size kmers \u00b6 The kmers directory contains McCortex 31-mer counts of the cleaned up FASTQ sequences. ${SAMPLE_NAME}/ \u2514\u2500\u2500 kmers \u2514\u2500\u2500 ${SAMPLE_NAME}.ctx Extension Description .ctx A Cortex graph file of the 31-mer counts logs \u00b6 The logs folder will contain useful files for debugging or reviewing what was executed. For each process (e.g. annotation or assembly) the STDOUT and STDERR is log, as well as the time of execution and program versions. These outputs are completely optional, and can be disabled using --skip_logs at runtime. ${SAMPLE_NAME}/ \u2514\u2500\u2500 logs/ \u251c\u2500\u2500 ${PROCESS_NAME} \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.err \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.out \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.sh \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.trace \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.versions \u2502 \u251c\u2500\u2500 ${PROGRAM}.err \u2502 \u2514\u2500\u2500 ${PROGRAM}.out \u2514\u2500\u2500 bactopia.versions Filename Description ${PROCESS_NAME}.err Any STDERR captured by the process. ${PROCESS_NAME}.out Any STDERR captured by the process. ${PROCESS_NAME}.sh The shell script that process used. ${PROCESS_NAME}.trace Compute resource usage by the process (this will not always be available) ${PROCESS_NAME}.versions Date and program versions used by the process ${PROGRAM}.err STDERR captured for a specific program. ${PROGRAM}.err STDOUT captured for a specific program. bactopia.versions Date and Bactopia/Nextflow versions used Example versions \u00b6 Here is an example of the bactopia.versions file. # Timestamp 2020-11-11T11:12:31-05:00 # Bactopia Version bactopia 1.4.11 # Nextflow Version nextflow 20.07.1 All the .versions files will follow this format. The first line is always # Timestamp followed by the output of date . Then each line beginning with # will represent a new program and its version. mapping \u00b6 The mapping-sequences directory contains BWA (bwa-mem) mapping results for each of the User Populated Mapping Sequences . ${SAMPLE_NAME}/ \u2514\u2500\u2500 mapping \u2514\u2500\u2500 ${MAPPING_INPUT} \u251c\u2500\u2500 ${MAPPING_INPUT}.bam \u2514\u2500\u2500 ${MAPPING_INPUT}.coverage.txt Extension Description .bam The alignments in BAM format. .coverage.txt The per-base coverage of the mapping results minmers \u00b6 The minmers directory contains Mash and Sourmash sketches of the cleaned FASTQs. If setup, it also contains the results of queries against RefSeq, GenBank and PLSDB ${SAMPLE_NAME}/ \u2514\u2500\u2500 minmers \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k21.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k31.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k51.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-k21.msh \u251c\u2500\u2500 ${SAMPLE_NAME}-k31.msh \u251c\u2500\u2500 ${SAMPLE_NAME}-plsdb-k21.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-refseq-k21.txt \u2514\u2500\u2500 ${SAMPLE_NAME}.sig Extension Description -genbank-k(21|31|51).txt Sourmash LCA Gather results against Sourmash GenBank Signature (k=21,31,51) -k(21|31).msh A Mash sketch (k=21,31) of the sample -plsdb-k21.txt Mash Screen results against PLSDB Mash Sketch -refseq-k21.txt Mash Screen results against Mash Refseq Sketch .sig A Sourmash signature (k=21,31,51) of the sample mlst \u00b6 If a Species Specific Dataset has been set up, the mlst directory will contain Ariba and BLAST results for a PubMLST.org schema. For most organisms there is only one MLST schema available, and it will be labeled as default . In cases where a organism has multiple schemas available they will be named following pubMLST's naming. ${SAMPLE_NAME}/ \u2514\u2500\u2500 mlst \u2514\u2500\u2500 ${SCHEMA} \u251c\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 assembled_genes.fa.gz \u2502 \u251c\u2500\u2500 assembled_seqs.fa.gz \u2502 \u251c\u2500\u2500 assemblies.fa.gz \u2502 \u251c\u2500\u2500 debug.report.tsv \u2502 \u251c\u2500\u2500 log.clusters.gz \u2502 \u251c\u2500\u2500 mlst_report.details.tsv \u2502 \u251c\u2500\u2500 mlst_report.tsv \u2502 \u251c\u2500\u2500 report.tsv \u2502 \u2514\u2500\u2500 version_info.txt \u2514\u2500\u2500 blast \u2514\u2500\u2500 ${SAMPLE_NAME}-blast.json Filename Description assembled_genes.fa.gz A gzipped FASTA file of only assembled gene sequences (with extensions). assembled_seqs.fa.gz A gzipped FASTA of the assembled sequences (genes and non-coding). assemblies.fa.gz A gzipped FASTA file of the assemblies (complete, unedited, contigs). debug.report.tsv The complete list of clusters, including those that did not pass filtering. log.clusters.gz Detailed logging for the progress of each cluster. mlst_report.details.tsv A more detailed summary of the allele calls. mlst_report.tsv A summary of the allele calls and identified sequence type. report.tsv A detailed report file of clusters which passed filtering. summary.csv A more condensed summary of the report.tsv version_info.txt Information on the versions of ARIBA and its dependencies at runtime. -blast.json Allele calls and identified sequence type based on BLAST quality-control \u00b6 The quality-control directory contains the cleaned up FASTQs ( BBTools and Lighter ) and summary statitics ( FastQC and Fastq-Scan ) before and after cleanup. ${SAMPLE_NAME}/ \u2514\u2500\u2500 quality-control \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 bbduk-adapter.log \u2502 \u2514\u2500\u2500 bbduk-phix.log \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2).fastq.gz \u2514\u2500\u2500 summary-(original|final) \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final)_fastqc.html \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final)_fastqc.zip \u2514\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final).json Extension Description -adapter.log A description of how many reads were filtered during the adapter removal step -phix.log A description of how many reads were filtered during the PhiX removal step .fastq.gz The cleaned up FASTQ(s), _R1 and _R2 for paired-end reads, and an empty string for single-end reads. _fastqc.html The FastQC html report of the original and final FASTQ(s) _fastqc.zip The zipped FastQC full report of the original and final FASTQ(s) .json Summary statistics (e.g. qualities and read lengths) of the original and final FASTQ(s) variants \u00b6 The variants directory contains the results of Snippy variant calls against one or more reference genomes. There are two subdirectories auto and user . The auto directory includes variants calls against automatically selected reference genome(s) based on nearest Mash distance to RefSeq completed genomes. This process only happens if a Species Specific Dataset was a created. By default, only a single reference genome (nearest) is selected. This feature can be disabled ( --disable_auto_variants ) or the number of genomes changed ( --max_references INT ). The user directory contains variant calls against for each of the User Populated Reference Genomes . The following description of files was directly taken from Snippy's Output Files section. Slight modifications were made to the order of rows. ${SAMPLE_NAME}/ \u2514\u2500\u2500 variants \u2514\u2500\u2500 (auto|user) \u2514\u2500\u2500 ${REFERENCE_NAME} \u251c\u2500\u2500 ${SAMPLE_NAME}.aligned.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.annotated.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.bam \u251c\u2500\u2500 ${SAMPLE_NAME}.bam.bai \u251c\u2500\u2500 ${SAMPLE_NAME}.bed \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.subs.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.subs.masked.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.coverage.txt \u251c\u2500\u2500 ${SAMPLE_NAME}.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.filt.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.gff \u251c\u2500\u2500 ${SAMPLE_NAME}.html \u251c\u2500\u2500 ${SAMPLE_NAME}.log \u251c\u2500\u2500 ${SAMPLE_NAME}.raw.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.subs.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.tab \u251c\u2500\u2500 ${SAMPLE_NAME}.txt \u2514\u2500\u2500 ${SAMPLE_NAME}.vcf Extension Description .aligned.fa A version of the reference but with - at position with depth=0 and N for 0 < depth < --mincov ( does not have variants ) .annotated.vcf The final variant calls with additional annotations from Reference genome's GenBank file .bam The alignments in BAM format. Includes unmapped, multimapping reads. Excludes duplicates. .bam.bai Index for the .bam file .bed The variants in BED format .consensus.fa A version of the reference genome with all variants instantiated .consensus.subs.fa A version of the reference genome with only substitution variants instantiated .consensus.subs.masked.fa A version of the reference genome with only substitution variants instantiated and low-coverage regions masked .coverage.txt The per-base coverage of each position in the reference genome .csv A comma-separated version of the .tab file .filt.vcf The filtered variant calls from Freebayes .gff The variants in GFF3 format .html A HTML version of the .tab file .log A log file with the commands run and their outputs .raw.vcf The unfiltered variant calls from Freebayes .subs.vcf Only substitution variants from the final annotated variants .tab A simple tab-separated summary of all the variants .txt A summary of the Snippy run. .vcf The final annotated variants in VCF format","title":"Output Overview"},{"location":"output-overview/#overview-of-bactopia-output","text":"After a successful run, Bactopia will have produced numerous output files. Just how many output files depends on the input datasets used (e.g. none, general datasets, species specific datasets, user populated datasets). Here is the complete directory structure that is possible (using all available dataset options) with Bactopia. ${SAMPLE_NAME}/ \u251c\u2500\u2500 annotation \u251c\u2500\u2500 antimicrobial_resistance \u251c\u2500\u2500 ariba \u251c\u2500\u2500 assembly \u251c\u2500\u2500 blast \u251c\u2500\u2500 kmers \u251c\u2500\u2500 logs \u251c\u2500\u2500 mapping \u251c\u2500\u2500 minmers \u251c\u2500\u2500 mlst \u251c\u2500\u2500 quality-control \u251c\u2500\u2500 variants \u2514\u2500\u2500 ${SAMPLE_NAME}-genome-size.txt For each type of analysis in Bactopia, a separate directory is created to hold the results. All samples processed by Bactopia will have this directory structure. The only difference is the usage of ${SAMPLE_NAME} as a prefix for naming some output files.","title":"Overview of Bactopia Output"},{"location":"output-overview/#directories","text":"The following sections include a list of expected outputs as well as a brief description of each output file. There are instances where additional files (e.g. --keep_all_files and --ariba_noclean ) may be encountered. These files aren't described below, just the defaults. Also, using --compress will add a gz extension, but the original extension is maintained and its description still applies. Developer Descriptions Take Priority If a developer described their software's outputs, their description was used with a link back to the software's documentation (major thanks for taking the time to do that!). In some cases there may have been slight formatting modifications made. In any case, if descriptions are not original credit will be properly given to the source.","title":"Directories"},{"location":"output-overview/#annotation","text":"The annotation directory will contain the outputs from Prokka annotation. These outputs include FASTA (proteins and genes), GFF3, GenBank, and many more. By default the included Prokka databases are used for annotation. However, if a Species Specific Dataset was a created the RefSeq clustered proteins are used first for annotation. File descriptions were directly taken from Prokka's Output Files section and slight modifications were made to the order of rows. ${SAMPLE_NAME}/ \u2514\u2500\u2500 annotation \u251c\u2500\u2500 ${SAMPLE_NAME}.err \u251c\u2500\u2500 ${SAMPLE_NAME}.faa \u251c\u2500\u2500 ${SAMPLE_NAME}.ffn \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u251c\u2500\u2500 ${SAMPLE_NAME}.fsa \u251c\u2500\u2500 ${SAMPLE_NAME}.gbk \u251c\u2500\u2500 ${SAMPLE_NAME}.gff \u251c\u2500\u2500 ${SAMPLE_NAME}.log \u251c\u2500\u2500 ${SAMPLE_NAME}.sqn \u251c\u2500\u2500 ${SAMPLE_NAME}.tbl \u251c\u2500\u2500 ${SAMPLE_NAME}.tsv \u2514\u2500\u2500 ${SAMPLE_NAME}.txt Extension Description .err Unacceptable annotations - the NCBI discrepancy report. .faa Protein FASTA file of the translated CDS sequences. .ffn Nucleotide FASTA file of all the prediction transcripts (CDS, rRNA, tRNA, tmRNA, misc_RNA) .fna Nucleotide FASTA file of the input contig sequences. .fsa Nucleotide FASTA file of the input contig sequences, used by \"tbl2asn\" to create the .sqn file. It is mostly the same as the .fna file, but with extra Sequin tags in the sequence description lines. .gbk This is a standard GenBank file derived from the master .gff. If the input to prokka was a multi-FASTA, then this will be a multi-GenBank, with one record for each sequence. .gff This is the master annotation in GFF3 format, containing both sequences and annotations. It can be viewed directly in Artemis or IGV. .log Contains all the output that Prokka produced during its run. This is a record of what settings you used. .sqn An ASN1 format \"Sequin\" file for submission to GenBank. It needs to be edited to set the correct taxonomy, authors, related publication etc. .tbl Feature Table file, used by \"tbl2asn\" to create the .sqn file. .tsv Tab-separated file of all features: locus_tag,ftype,len_bp,gene,EC_number,COG,product .txt Statistics relating to the annotated features found.","title":"annotation"},{"location":"output-overview/#antimicrobial_resistance","text":"The antimicrobial_resistance directory will contain the output from NCBI's AMRFinderPlus . The results of AMRFinderPlus using genes as and input, and proteins as an input are available. More information about the output format is available from the AMRFinderPlus Wiki . ${SAMPLE_NAME}/ \u2514\u2500\u2500 antimicrobial_resistance/ \u251c\u2500\u2500 ${SAMPLE_NAME}-gene-report.txt \u2514\u2500\u2500 ${SAMPLE_NAME}-protein-report.txt Extension Description -gene-report.txt Results of using gene sequences as an input -protein-report.txt Results of using protein sequences as an input","title":"antimicrobial_resistance"},{"location":"output-overview/#ariba","text":"The ariba directory will contain the results of any Ariba analysis (excluding MLST). Only the Ariba databases created during the dataset setup are used for analysis. For each Ariba database (e.g. card or vfdb ), a separate folder with the name of the database is included in the ariba folder. The file descriptions below were modified from Ariba's wiki entries for run and summary . ${SAMPLE_NAME}/ \u2514\u2500\u2500 ariba \u2514\u2500\u2500 ARIBA_DATABASE_NAME \u251c\u2500\u2500 assembled_genes.fa.gz \u251c\u2500\u2500 assembled_seqs.fa.gz \u251c\u2500\u2500 assemblies.fa.gz \u251c\u2500\u2500 debug.report.tsv \u251c\u2500\u2500 log.clusters.gz \u251c\u2500\u2500 report.tsv \u251c\u2500\u2500 summary.csv \u2514\u2500\u2500 version_info.txt Filename Description assembled_genes.fa.gz A gzipped FASTA file of only assembled gene sequences (with extensions). assembled_seqs.fa.gz A gzipped FASTA of the assembled sequences (genes and non-coding). assemblies.fa.gz A gzipped FASTA file of the assemblies (complete, unedited, contigs). debug.report.tsv The complete list of clusters, including those that did not pass filtering. log.clusters.gz Detailed logging for the progress of each cluster. report.tsv A detailed report file of clusters which passed filtering. summary.csv A more condensed summary of the report.tsv version_info.txt Information on the versions of ARIBA and its dependencies at runtime.","title":"ariba"},{"location":"output-overview/#assembly","text":"The assembly folder contains the results of the sample's assembly.","title":"assembly"},{"location":"output-overview/#standard","text":"The standard assembly is managed by Shovill and by default SKESA is used for assembly. Alternative assemblers include SPAdes , MEGAHIT , and Velvet . Depending on the choice of assembler, additional output files (e.g. assembly graphs) may be given. Files descriptions with some modifications were directly taken from Shovill's Output Files section as well as the FLASH usage . ${SAMPLE_NAME}/ \u2514\u2500\u2500 assembly \u251c\u2500\u2500 cointigs.fa \u251c\u2500\u2500 flash.hist \u251c\u2500\u2500 flash.histogram \u251c\u2500\u2500 shovill.corrections \u251c\u2500\u2500 shovill.log \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u2514\u2500\u2500 ${SAMPLE_NAME}.fna.json Filename Description contigs.fa Final assembly without renamed headers. flash.hist Numeric histogram of merged read lengths. flash.histogram Visual histogram of merged read lengths shovill.log Full log file for bug reporting shovill.corrections List of post-assembly corrections ${SAMPLE_NAME}.fna The final assembly, with renamed header to include sample name ${SAMPLE_NAME}.fna.json Summary statistics of the assembly FASTA inputs are not reassembled by default In the case where an assembly is given as an input, the only files that will be available are ${SAMPLE_NAME}.fna (the original unmodified assembly) and ${SAMPLE_NAME}.fna.json . If --reassemble is also given, then all the files seen above will be available.","title":"standard"},{"location":"output-overview/#hybrid","text":"If long reads are available to supplement input paired-end Illumina reads, a hybrid assembly can be created using Unicycler . Files descriptions with some modifications were directly taken from Unicycler's Output Files . ${SAMPLE_NAME}/ \u2514\u2500\u2500 assembly \u251c\u2500\u2500 001_best_spades_graph.gfa \u251c\u2500\u2500 002_overlaps_removed.gfa \u251c\u2500\u2500 003_long_read_assembly.gfa \u251c\u2500\u2500 004_bridges_applied.gfa \u251c\u2500\u2500 005_final_clean.gfa \u251c\u2500\u2500 006_polished.gfa \u251c\u2500\u2500 007_rotated.gfa \u251c\u2500\u2500 assembly.fasta \u251c\u2500\u2500 assembly.gfa \u251c\u2500\u2500 ${SAMPLE_NAME}.fna \u251c\u2500\u2500 ${SAMPLE_NAME}.fna.json \u2514\u2500\u2500 unicycler.log Filename Description 001_best_spades_graph.gfa The best SPAdes short-read assembly graph, with a bit of graph clean-up 002_overlaps_removed.gfa Overlap-free version of the SPAdes graph, with some more graph clean-up 003_long_read_assembly.gfa Assembly graph after long read assembly 004_bridges_applied.gfa Bridges applied, before any cleaning or merging 005_final_clean.gfa Assembly graph after more redundant contigs removed 006_polished.gfa Assembly graph after a round of Pilon polishing 007_rotated.gfa Assembly graph after ircular replicons rotated and/or flipped to a start position assembly.fasta The final assembly in FASTA format (same contigs names as in assembly.gfa) assembly.gfa The final assembly in GFA v1 graph format ${SAMPLE_NAME}.fna The final assembly with renamed header to include sample name ${SAMPLE_NAME}.fna.json Summary statistics of the assembly unicycler.log Unicycler log file (same info as stdout)","title":"hybrid"},{"location":"output-overview/#quality-reports","text":"Each assembly will have its biological and technical quality assessed with CheckM and QUAST . This assessment is done no matter the input type (paired, single, hybrid, or assembly). Files descriptions with some modifications were directly taken from CheckM's Usage and QUAST's Output Files . assembly/ \u251c\u2500\u2500 checkm \u2502 \u251c\u2500\u2500 bins/ \u2502 \u251c\u2500\u2500 checkm-genes.aln \u2502 \u251c\u2500\u2500 checkm.log \u2502 \u251c\u2500\u2500 checkm-results.txt \u2502 \u251c\u2500\u2500 lineage.ms \u2502 \u2514\u2500\u2500 storage/ \u2514\u2500\u2500 quast \u251c\u2500\u2500 basic_stats/ \u251c\u2500\u2500 icarus.html \u251c\u2500\u2500 icarus_viewers \u2502 \u2514\u2500\u2500 contig_size_viewer.html \u251c\u2500\u2500 predicted_genes \u2502 \u251c\u2500\u2500 GCF_003431365_glimmer_genes.gff.gz \u2502 \u2514\u2500\u2500 GCF_003431365_glimmer.stderr \u251c\u2500\u2500 quast.log \u251c\u2500\u2500 report.{html|pdf|tex|tsv|txt} \u251c\u2500\u2500 transposed_report.tex \u251c\u2500\u2500 transposed_report.tsv \u2514\u2500\u2500 transposed_report.txt CheckM Outputs Filename Description bins/ A folder with inputs (e.g. proteins) for processing by CheckM checkm-genes.aln Alignment of multi-copy genes and their AAI identity checkm.log The output log of CheckM checkm-results.txt Final results of CheckM's lineage_wf lineage.ms Output file describing marker set for each bin storage/ A folder with intermediate results from CheckM processing QUAST Outputs Filename Description basic_stats A folder with plots of assembly metrics (e.g. GC content, NGx, Nx) icarus.html Icarus main menu with links to interactive viewers. icarus_viewers/ Additional reports for Icarus predicted_genes/ Predicted gene output quast.log Detailed information about the QUAST run report.{html|pdf } Assessement summary including all tables and plots report.{tex|tsv|txt} Assessment summary in multiple different formats transposed_report.{tex|tsv|txt} Transposed version of the assessment summary","title":"quality reports"},{"location":"output-overview/#blast","text":"The blast directory contains the BLAST results and a BLAST database of the sample assembly. Each of the User Populated BLAST Sequences (gene, primer, or protein) is BLASTed against the sample assembly. Also if setup , annotated genes are BLASTed against the PLSDB BLAST database. By default, results are returned in tabular format. ${SAMPLE_NAME}/ \u2514\u2500\u2500 blast \u251c\u2500\u2500 blastdb \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}.nhr \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}.nin \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}.nsq \u251c\u2500\u2500 genes \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u251c\u2500\u2500 primers \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u251c\u2500\u2500 proteins \u2502 \u2514\u2500\u2500 ${INPUT_NAME}.txt \u2514\u2500\u2500 ${SAMPLE_NAME}-plsdb.txt Extension Description .nhr Sample assembly BLAST database header file .nin Sample assembly BLAST database index file .nsq Sample assembly BLAST database sequence file -plsdb.txt The BLAST results against the PLSDB BALST database assembly. .txt The BLAST results of user input sequence(s) against the sample assembly.","title":"blast"},{"location":"output-overview/#genome-size","text":"For every sample ${SAMPLE_NAME}-genome-size.txt file is created. This file contains the genome size that was used for analysis. Genome size is used throughout Bactopia for various tasks including error correction, subsampling, and assembly. By default, the genome size is estimated with Mash, but users have the option to provide their own value or completely disable genome size related features. Learn more about changing the genome size at Basic Usage - Genome Size","title":"genome-size"},{"location":"output-overview/#kmers","text":"The kmers directory contains McCortex 31-mer counts of the cleaned up FASTQ sequences. ${SAMPLE_NAME}/ \u2514\u2500\u2500 kmers \u2514\u2500\u2500 ${SAMPLE_NAME}.ctx Extension Description .ctx A Cortex graph file of the 31-mer counts","title":"kmers"},{"location":"output-overview/#logs","text":"The logs folder will contain useful files for debugging or reviewing what was executed. For each process (e.g. annotation or assembly) the STDOUT and STDERR is log, as well as the time of execution and program versions. These outputs are completely optional, and can be disabled using --skip_logs at runtime. ${SAMPLE_NAME}/ \u2514\u2500\u2500 logs/ \u251c\u2500\u2500 ${PROCESS_NAME} \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.err \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.out \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.sh \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.trace \u2502 \u251c\u2500\u2500 ${PROCESS_NAME}.versions \u2502 \u251c\u2500\u2500 ${PROGRAM}.err \u2502 \u2514\u2500\u2500 ${PROGRAM}.out \u2514\u2500\u2500 bactopia.versions Filename Description ${PROCESS_NAME}.err Any STDERR captured by the process. ${PROCESS_NAME}.out Any STDERR captured by the process. ${PROCESS_NAME}.sh The shell script that process used. ${PROCESS_NAME}.trace Compute resource usage by the process (this will not always be available) ${PROCESS_NAME}.versions Date and program versions used by the process ${PROGRAM}.err STDERR captured for a specific program. ${PROGRAM}.err STDOUT captured for a specific program. bactopia.versions Date and Bactopia/Nextflow versions used","title":"logs"},{"location":"output-overview/#example-versions","text":"Here is an example of the bactopia.versions file. # Timestamp 2020-11-11T11:12:31-05:00 # Bactopia Version bactopia 1.4.11 # Nextflow Version nextflow 20.07.1 All the .versions files will follow this format. The first line is always # Timestamp followed by the output of date . Then each line beginning with # will represent a new program and its version.","title":"Example versions"},{"location":"output-overview/#mapping","text":"The mapping-sequences directory contains BWA (bwa-mem) mapping results for each of the User Populated Mapping Sequences . ${SAMPLE_NAME}/ \u2514\u2500\u2500 mapping \u2514\u2500\u2500 ${MAPPING_INPUT} \u251c\u2500\u2500 ${MAPPING_INPUT}.bam \u2514\u2500\u2500 ${MAPPING_INPUT}.coverage.txt Extension Description .bam The alignments in BAM format. .coverage.txt The per-base coverage of the mapping results","title":"mapping"},{"location":"output-overview/#minmers","text":"The minmers directory contains Mash and Sourmash sketches of the cleaned FASTQs. If setup, it also contains the results of queries against RefSeq, GenBank and PLSDB ${SAMPLE_NAME}/ \u2514\u2500\u2500 minmers \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k21.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k31.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-genbank-k51.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-k21.msh \u251c\u2500\u2500 ${SAMPLE_NAME}-k31.msh \u251c\u2500\u2500 ${SAMPLE_NAME}-plsdb-k21.txt \u251c\u2500\u2500 ${SAMPLE_NAME}-refseq-k21.txt \u2514\u2500\u2500 ${SAMPLE_NAME}.sig Extension Description -genbank-k(21|31|51).txt Sourmash LCA Gather results against Sourmash GenBank Signature (k=21,31,51) -k(21|31).msh A Mash sketch (k=21,31) of the sample -plsdb-k21.txt Mash Screen results against PLSDB Mash Sketch -refseq-k21.txt Mash Screen results against Mash Refseq Sketch .sig A Sourmash signature (k=21,31,51) of the sample","title":"minmers"},{"location":"output-overview/#mlst","text":"If a Species Specific Dataset has been set up, the mlst directory will contain Ariba and BLAST results for a PubMLST.org schema. For most organisms there is only one MLST schema available, and it will be labeled as default . In cases where a organism has multiple schemas available they will be named following pubMLST's naming. ${SAMPLE_NAME}/ \u2514\u2500\u2500 mlst \u2514\u2500\u2500 ${SCHEMA} \u251c\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 assembled_genes.fa.gz \u2502 \u251c\u2500\u2500 assembled_seqs.fa.gz \u2502 \u251c\u2500\u2500 assemblies.fa.gz \u2502 \u251c\u2500\u2500 debug.report.tsv \u2502 \u251c\u2500\u2500 log.clusters.gz \u2502 \u251c\u2500\u2500 mlst_report.details.tsv \u2502 \u251c\u2500\u2500 mlst_report.tsv \u2502 \u251c\u2500\u2500 report.tsv \u2502 \u2514\u2500\u2500 version_info.txt \u2514\u2500\u2500 blast \u2514\u2500\u2500 ${SAMPLE_NAME}-blast.json Filename Description assembled_genes.fa.gz A gzipped FASTA file of only assembled gene sequences (with extensions). assembled_seqs.fa.gz A gzipped FASTA of the assembled sequences (genes and non-coding). assemblies.fa.gz A gzipped FASTA file of the assemblies (complete, unedited, contigs). debug.report.tsv The complete list of clusters, including those that did not pass filtering. log.clusters.gz Detailed logging for the progress of each cluster. mlst_report.details.tsv A more detailed summary of the allele calls. mlst_report.tsv A summary of the allele calls and identified sequence type. report.tsv A detailed report file of clusters which passed filtering. summary.csv A more condensed summary of the report.tsv version_info.txt Information on the versions of ARIBA and its dependencies at runtime. -blast.json Allele calls and identified sequence type based on BLAST","title":"mlst"},{"location":"output-overview/#quality-control","text":"The quality-control directory contains the cleaned up FASTQs ( BBTools and Lighter ) and summary statitics ( FastQC and Fastq-Scan ) before and after cleanup. ${SAMPLE_NAME}/ \u2514\u2500\u2500 quality-control \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 bbduk-adapter.log \u2502 \u2514\u2500\u2500 bbduk-phix.log \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2).fastq.gz \u2514\u2500\u2500 summary-(original|final) \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final)_fastqc.html \u251c\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final)_fastqc.zip \u2514\u2500\u2500 ${SAMPLE_NAME}(|_R1|_R2)-(original|final).json Extension Description -adapter.log A description of how many reads were filtered during the adapter removal step -phix.log A description of how many reads were filtered during the PhiX removal step .fastq.gz The cleaned up FASTQ(s), _R1 and _R2 for paired-end reads, and an empty string for single-end reads. _fastqc.html The FastQC html report of the original and final FASTQ(s) _fastqc.zip The zipped FastQC full report of the original and final FASTQ(s) .json Summary statistics (e.g. qualities and read lengths) of the original and final FASTQ(s)","title":"quality-control"},{"location":"output-overview/#variants","text":"The variants directory contains the results of Snippy variant calls against one or more reference genomes. There are two subdirectories auto and user . The auto directory includes variants calls against automatically selected reference genome(s) based on nearest Mash distance to RefSeq completed genomes. This process only happens if a Species Specific Dataset was a created. By default, only a single reference genome (nearest) is selected. This feature can be disabled ( --disable_auto_variants ) or the number of genomes changed ( --max_references INT ). The user directory contains variant calls against for each of the User Populated Reference Genomes . The following description of files was directly taken from Snippy's Output Files section. Slight modifications were made to the order of rows. ${SAMPLE_NAME}/ \u2514\u2500\u2500 variants \u2514\u2500\u2500 (auto|user) \u2514\u2500\u2500 ${REFERENCE_NAME} \u251c\u2500\u2500 ${SAMPLE_NAME}.aligned.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.annotated.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.bam \u251c\u2500\u2500 ${SAMPLE_NAME}.bam.bai \u251c\u2500\u2500 ${SAMPLE_NAME}.bed \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.subs.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.consensus.subs.masked.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.coverage.txt \u251c\u2500\u2500 ${SAMPLE_NAME}.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.filt.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.gff \u251c\u2500\u2500 ${SAMPLE_NAME}.html \u251c\u2500\u2500 ${SAMPLE_NAME}.log \u251c\u2500\u2500 ${SAMPLE_NAME}.raw.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.subs.vcf \u251c\u2500\u2500 ${SAMPLE_NAME}.tab \u251c\u2500\u2500 ${SAMPLE_NAME}.txt \u2514\u2500\u2500 ${SAMPLE_NAME}.vcf Extension Description .aligned.fa A version of the reference but with - at position with depth=0 and N for 0 < depth < --mincov ( does not have variants ) .annotated.vcf The final variant calls with additional annotations from Reference genome's GenBank file .bam The alignments in BAM format. Includes unmapped, multimapping reads. Excludes duplicates. .bam.bai Index for the .bam file .bed The variants in BED format .consensus.fa A version of the reference genome with all variants instantiated .consensus.subs.fa A version of the reference genome with only substitution variants instantiated .consensus.subs.masked.fa A version of the reference genome with only substitution variants instantiated and low-coverage regions masked .coverage.txt The per-base coverage of each position in the reference genome .csv A comma-separated version of the .tab file .filt.vcf The filtered variant calls from Freebayes .gff The variants in GFF3 format .html A HTML version of the .tab file .log A log file with the commands run and their outputs .raw.vcf The unfiltered variant calls from Freebayes .subs.vcf Only substitution variants from the final annotated variants .tab A simple tab-separated summary of all the variants .txt A summary of the Snippy run. .vcf The final annotated variants in VCF format","title":"variants"},{"location":"presentations/","text":"Presentations \u00b6 Below are links to talks, posters, and blog posts associated with Bactopia. Talks \u00b6 Using Bactopia for the complete analysis of bacterial genomes (April 2022) A brief talk presented by Dr. Robert A Petit III at the African Bioinformatics Netwrok Webinar . In this talk I give some background on Bactopia and demonstrate how you can use it in your own analyses. Video: YouTube Slides: Web , PDF Deeper dives, workflows and Bactopia (February 2022) A brief talk presented by Dr. Robert A Petit III at the CLIMB Big Data - Bioinformatics Skills for Microbial Genomics Workshop , covering some topics including Bioconda , nf-core , and a slight peek behind the scenes of Bactopia. Video: YouTube Slides: Web , PDF Bactopia and using workflow managers in bioinformatics (January 2022) In episodes 72 and 73 of the Micro Binfie Podcast we discussed the origins of Bactopia and all the fun things Bactopia does. We also discuss why you should consider using workflow managers in you bioinformatic analyses. Sound Cloud: Part 1 , Part 2 Integrating Staphopia into S. aureus genomic investigations (February 2021) A brief talk presented by Dr. Robert A Petit III at the Virtual S. aureus Seminar Series Early Career Symposium , demonstrating how you can use Staphopia for the analysis of S. aureus . Staphopia is now a part of Bactopia. Video: YouTube Slides: Web , PDF Bacterial Genome Analysis Using Bactopia (May 2020) The talk presented by Dr. Robert A Petit III at State Public Health Bioinformatics (StaPH-B) Monthly Webinar which provides a introduction into Bactopia and some of the earlier practices implemented into Bactopia. Video: YouTube Slides: Web , PDF Bacterial Genome Analysis Workflows: Staphopia and Bactopia (March 2020) The talk presented by Dr. Timothy Read at NIAID Webinar Series which provides an overview of the Bactopia and Staphopia pipelines and how you can use them to investigate bacterial genomes. Slides: Web , PDF Posters \u00b6 Using Bactopia for highly scalable, portable and customizable bacterial genome analyses A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future in-person conference outlining how you can use Bactopia in your bacterial genome analyses. Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (April 2022) A poster presented by Dr. Robert A Petit III at Antimicrobial Resistance \u2013 Genomes, Big Data and Emerging Technologies (Virtual Conference) covering Bactopia and ways to use it in your own analyses. Video: YouTube Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (March 2022) A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future previewing version 2 of Bactopia and the many changes it will bring. Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (September 2021) A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future previewing version 2 of Bactopia and the many changes it will bring. Video: YouTube Slides: Web , PDF Using Bactopia to process 67,000 Staphylococcus aureus genomes with AWS Batch (May 2021) A poster presented by Dr. Robert A Petit III at Applied Bioinformatics & Public Health Microbiology 2021 which outlines how Bactopia was used to process 67,000 genomes in just 5 days (!) using AWS Batch. Video: YouTube Slides: Web , PDF A Flexible Pipeline for Complete Analysis of Bacterial Genomes (December 2020) A poster presented by Dr. Robert A Petit III at the 4 th ASM Conference on Rapid Applied Microbial Next-Generation Sequencing and Bioinformatic Pipelines (ASMNGS) which provides an overview of Bactopia, Bactopia Datasets, and Bactopia Tools. Slides: Web , PDF Blog Posts \u00b6 An introduction to running Bactopia on Amazon Web Services (May 2021) A blog post written by Dr. Timothy Read , outlining from start to finish how he set up Bactopia to run on Amazon Web Services (AWS). Using AWS Batch to process 67,000 genomes with Bactopia (December 2020) A blog post written by Dr. Robert A Petit III , providing an in-depth look into how he used Bactopia to process 67k genomes on AWS Batch.","title":"Presentations"},{"location":"presentations/#presentations","text":"Below are links to talks, posters, and blog posts associated with Bactopia.","title":"Presentations"},{"location":"presentations/#talks","text":"Using Bactopia for the complete analysis of bacterial genomes (April 2022) A brief talk presented by Dr. Robert A Petit III at the African Bioinformatics Netwrok Webinar . In this talk I give some background on Bactopia and demonstrate how you can use it in your own analyses. Video: YouTube Slides: Web , PDF Deeper dives, workflows and Bactopia (February 2022) A brief talk presented by Dr. Robert A Petit III at the CLIMB Big Data - Bioinformatics Skills for Microbial Genomics Workshop , covering some topics including Bioconda , nf-core , and a slight peek behind the scenes of Bactopia. Video: YouTube Slides: Web , PDF Bactopia and using workflow managers in bioinformatics (January 2022) In episodes 72 and 73 of the Micro Binfie Podcast we discussed the origins of Bactopia and all the fun things Bactopia does. We also discuss why you should consider using workflow managers in you bioinformatic analyses. Sound Cloud: Part 1 , Part 2 Integrating Staphopia into S. aureus genomic investigations (February 2021) A brief talk presented by Dr. Robert A Petit III at the Virtual S. aureus Seminar Series Early Career Symposium , demonstrating how you can use Staphopia for the analysis of S. aureus . Staphopia is now a part of Bactopia. Video: YouTube Slides: Web , PDF Bacterial Genome Analysis Using Bactopia (May 2020) The talk presented by Dr. Robert A Petit III at State Public Health Bioinformatics (StaPH-B) Monthly Webinar which provides a introduction into Bactopia and some of the earlier practices implemented into Bactopia. Video: YouTube Slides: Web , PDF Bacterial Genome Analysis Workflows: Staphopia and Bactopia (March 2020) The talk presented by Dr. Timothy Read at NIAID Webinar Series which provides an overview of the Bactopia and Staphopia pipelines and how you can use them to investigate bacterial genomes. Slides: Web , PDF","title":"Talks"},{"location":"presentations/#posters","text":"Using Bactopia for highly scalable, portable and customizable bacterial genome analyses A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future in-person conference outlining how you can use Bactopia in your bacterial genome analyses. Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (April 2022) A poster presented by Dr. Robert A Petit III at Antimicrobial Resistance \u2013 Genomes, Big Data and Emerging Technologies (Virtual Conference) covering Bactopia and ways to use it in your own analyses. Video: YouTube Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (March 2022) A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future previewing version 2 of Bactopia and the many changes it will bring. Slides: Web , PDF Bactopia v2: Highly scalable, portable and customizable bacterial genome analyses (September 2021) A poster presented by Dr. Robert A Petit III at Sequencing to Function: Analysis and Applications for the Future previewing version 2 of Bactopia and the many changes it will bring. Video: YouTube Slides: Web , PDF Using Bactopia to process 67,000 Staphylococcus aureus genomes with AWS Batch (May 2021) A poster presented by Dr. Robert A Petit III at Applied Bioinformatics & Public Health Microbiology 2021 which outlines how Bactopia was used to process 67,000 genomes in just 5 days (!) using AWS Batch. Video: YouTube Slides: Web , PDF A Flexible Pipeline for Complete Analysis of Bacterial Genomes (December 2020) A poster presented by Dr. Robert A Petit III at the 4 th ASM Conference on Rapid Applied Microbial Next-Generation Sequencing and Bioinformatic Pipelines (ASMNGS) which provides an overview of Bactopia, Bactopia Datasets, and Bactopia Tools. Slides: Web , PDF","title":"Posters"},{"location":"presentations/#blog-posts","text":"An introduction to running Bactopia on Amazon Web Services (May 2021) A blog post written by Dr. Timothy Read , outlining from start to finish how he set up Bactopia to run on Amazon Web Services (AWS). Using AWS Batch to process 67,000 genomes with Bactopia (December 2020) A blog post written by Dr. Robert A Petit III , providing an in-depth look into how he used Bactopia to process 67k genomes on AWS Batch.","title":"Blog Posts"},{"location":"quick-start/","text":"Quick Start \u00b6 Here we go! No time to waste, let's get the ball rolling! Why are you still reading this?!? Go! Go! Go! Installation \u00b6 conda create -y -n bactopia -c conda-forge -c bioconda bactopia conda activate bactopia Build Dataset \u00b6 bactopia datasets This create a folder ./datasets and will build the following datasets: CARD VFDB RefSeq Mash Sketch GenBank Sourmash Signatures PLSDB Mash Sketch & BLAST More information about these datasets is available at Build Datasets . Run Bactopia! \u00b6 On the first launch of Bactopia it will install the Conda environments, so expect some delays in doing so! Single Sample \u00b6 Paired-End \u00b6 bactopia --R1 SEQS_R1.fastq.gz \\ --R2 SEQS_R2.fastq.gz \\ --sample SAMPLE_NAME \\ --datasets datasets/ \\ --outdir OUTDIR In the command above, be sure to replace SEQS_R1.fastq.gz and SEQS_R2.fastq.gz with the name of your FASTQ files. You will also want to replace SAMPLE_NAME with your sample's name and OUTDIR with a directory name you would like to use for results. Single-End \u00b6 bactopia --SE SEQS.fastq.gz --sample SAMPLE_NAME --datasets datasets/ --outdir OUTDIR In the command above, be sure to replace SEQS.fastq.gz with the name of your FASTQ file. You will also want to replace SAMPLE_NAME with your sample's name and OUTDIR with a directory name you would like to use for results. Multiple Samples \u00b6 bactopia prepare directory-of-fastqs/ > fastqs.txt bactopia --fastqs fastqs.txt --datasets datasets --outdir OUTDIR In the command above, be sure to replace OUTDIR with a directory name you would like to use for results.","title":"Quick Start"},{"location":"quick-start/#quick-start","text":"Here we go! No time to waste, let's get the ball rolling! Why are you still reading this?!? Go! Go! Go!","title":"Quick Start"},{"location":"quick-start/#installation","text":"conda create -y -n bactopia -c conda-forge -c bioconda bactopia conda activate bactopia","title":"Installation"},{"location":"quick-start/#build-dataset","text":"bactopia datasets This create a folder ./datasets and will build the following datasets: CARD VFDB RefSeq Mash Sketch GenBank Sourmash Signatures PLSDB Mash Sketch & BLAST More information about these datasets is available at Build Datasets .","title":"Build Dataset"},{"location":"quick-start/#run-bactopia","text":"On the first launch of Bactopia it will install the Conda environments, so expect some delays in doing so!","title":"Run Bactopia!"},{"location":"quick-start/#single-sample","text":"","title":"Single Sample"},{"location":"quick-start/#paired-end","text":"bactopia --R1 SEQS_R1.fastq.gz \\ --R2 SEQS_R2.fastq.gz \\ --sample SAMPLE_NAME \\ --datasets datasets/ \\ --outdir OUTDIR In the command above, be sure to replace SEQS_R1.fastq.gz and SEQS_R2.fastq.gz with the name of your FASTQ files. You will also want to replace SAMPLE_NAME with your sample's name and OUTDIR with a directory name you would like to use for results.","title":"Paired-End"},{"location":"quick-start/#single-end","text":"bactopia --SE SEQS.fastq.gz --sample SAMPLE_NAME --datasets datasets/ --outdir OUTDIR In the command above, be sure to replace SEQS.fastq.gz with the name of your FASTQ file. You will also want to replace SAMPLE_NAME with your sample's name and OUTDIR with a directory name you would like to use for results.","title":"Single-End"},{"location":"quick-start/#multiple-samples","text":"bactopia prepare directory-of-fastqs/ > fastqs.txt bactopia --fastqs fastqs.txt --datasets datasets --outdir OUTDIR In the command above, be sure to replace OUTDIR with a directory name you would like to use for results.","title":"Multiple Samples"},{"location":"troubleshooting/","text":"Troubleshooting Bactopia \u00b6 It was bound to happen, an error has occurred or a bug has shown itself. Now let's see if we can fix it! Don't see your error/bug? Post an issue on GitHub If you've encountered an error or bug not seen here, please post an issue at Bactopia GitHub Issues . This will help greatly to track down the error and fix it! Past Errors \u00b6 These should have been fixed. The following errors should have been fixed. If you are still receiving them, please make sure you are using the most up to date version of Bactopia. If you are, and you are still recieving one of these errors, please reopen the associated issue on GitHub. Thanks! Failed to create Conda Environment \u00b6 This was fixed in v1.2.1 A new function bactopia build was introduced that builds the Conda environments outside of Nextflow. If you are still receiving this error please reopen the Better handling of conda environments? issue. Occasionally on the first run of Bactopia you will encounter this error: Caused by: Failed to create Conda environment command: conda env create --prefix /data/apps/bactopia/conda/cache/envs/bactopia-gather_fastqs-8bddd22dc63ec39a71c4ea8fd7704f7a --file /data/apps/bactopia/conda/gather_fastqs.yml status : 1 message: InvalidArchiveError(\"Error with archive /home/rpetit/miniconda3/envs/bactopia/pkgs/python-3.7.3-h33d41f4_1.tar.bz2. You probably need to delete and re-download or re-create this file. Message from libarchive was:\\n\\nFailed to create dir 'lib'\",) While it may look like this is related to Nextflow, it is actually a Conda error that occurs when installing multiple environments at once which Nextflow likes to do. This can also occur from a timeout or loss of internet connectivity (under a different error name).","title":"Troubleshooting"},{"location":"troubleshooting/#troubleshooting-bactopia","text":"It was bound to happen, an error has occurred or a bug has shown itself. Now let's see if we can fix it! Don't see your error/bug? Post an issue on GitHub If you've encountered an error or bug not seen here, please post an issue at Bactopia GitHub Issues . This will help greatly to track down the error and fix it!","title":"Troubleshooting Bactopia"},{"location":"troubleshooting/#past-errors","text":"These should have been fixed. The following errors should have been fixed. If you are still receiving them, please make sure you are using the most up to date version of Bactopia. If you are, and you are still recieving one of these errors, please reopen the associated issue on GitHub. Thanks!","title":"Past Errors"},{"location":"troubleshooting/#failed-to-create-conda-environment","text":"This was fixed in v1.2.1 A new function bactopia build was introduced that builds the Conda environments outside of Nextflow. If you are still receiving this error please reopen the Better handling of conda environments? issue. Occasionally on the first run of Bactopia you will encounter this error: Caused by: Failed to create Conda environment command: conda env create --prefix /data/apps/bactopia/conda/cache/envs/bactopia-gather_fastqs-8bddd22dc63ec39a71c4ea8fd7704f7a --file /data/apps/bactopia/conda/gather_fastqs.yml status : 1 message: InvalidArchiveError(\"Error with archive /home/rpetit/miniconda3/envs/bactopia/pkgs/python-3.7.3-h33d41f4_1.tar.bz2. You probably need to delete and re-download or re-create this file. Message from libarchive was:\\n\\nFailed to create dir 'lib'\",) While it may look like this is related to Nextflow, it is actually a Conda error that occurs when installing multiple environments at once which Nextflow likes to do. This can also occur from a timeout or loss of internet connectivity (under a different error name).","title":"Failed to create Conda Environment"},{"location":"tutorial/","text":"Tutorial \u00b6 You should now have a directory named datasets that has all the available datasets to be used by Bactopia. For this tutorial, we will attempt to replicate the Staphopia analysis pipeline with Bactopia. We will use S. aureus samples associated with cystic fibrosis lung infections that were recently published (details below, shameless self plug!) and are available from BioProject accession PRJNA480016 . Bernardy, Eryn E., et al. \"Whole-Genome Sequences of Staphylococcus aureus Isolates from Cystic Fibrosis Lung Infections.\" Microbiol Resour Announc 8.3 (2019): e01564-18. Overall the goal of the tutorial is to: Build datasets Acquire Staphopia datasets Use Bactopia to process: A sample from SRA/ENA Multiple samples from SRA/ENA Single local sample Multiple local samples using FOFN Bactopia Should Be Installed This tutorial assumes you have already installed Bactopia. If you have not, please check out how to at Installation . Build Datasets \u00b6 First let's create a directory to work in and activate our Bactopia environment. mkdir bactopia-tutorial cd bactopia-tutorial conda activate bactopia Now we are ready to build our datasets! bactopia datasets \\ --species \"Staphylococcus aureus\" \\ --include_genus \\ --limit 100 \\ --cpus 4 Let's review what is happening here. --species \"Staphylococcus aureus\" will download MLST schemas associated with S. aureus it will also download completed S. aureus genomes (RefSeq only) that are used to create a set of protein set for annotation, a Mash sketch for automatic variant calling to the nearest neighbor, and calculate genome size statistics. --include_genus will also download completed genomes from the Staphylococcus genus that will be used for the protein set. These completed genomes are not used for the sketch creation or genome size calculation. --limit 100 will limit the number of completed genomes downloaded to 100. --cpus 4 will use 4 cpus for downloading and the clustering step. Adjust this number according to your setup! These datasets will be built into the default datasets/ folder which can be changed using --outdir Use CARD over MEGARes Staphopia v1 made use of MEGARes, for the purposes of this tutorial we are going to use the CARD database instead. If all goes well, the newly created datasets are now available in the folder datasets/ . We have now completed the dataset creation step! Pat yourself on the back! Next we'll supplement these datasets with some optional S. aureus specific datasets. Acquire Staphopia Datasets \u00b6 Staphopia includes a few optional datasets such as S. aureus N315 reference genome and SCCmec sequences (primers, proteins, full cassettes). We will acquire these files using the Bactopia Datasets GitHub repository. For this tutorial a we'll be using the Staphylococcus aureus dataset repository. Now let's clone the repository. git clone https://github.com/bactopia-datasets/staphylococcus-aureus.git Next we'll copy the files into our recently built datasets folder and delete the staphylococcus-aureus repository since we no longer need it. cp -r staphylococcus-aureus/species-specific/ datasets/ rm -rf staphylococcus-aureus/ ~Voil\u00e0! That should be it. You should now have the S. aureus datasets included with your recently built datasets (e.g. S. aureus protein clusters, RefSeq sketch, etc...) Running Bactopia \u00b6 OK! Get your servers started up! It is time to get processing! Samples on SRA \u00b6 Single Sample \u00b6 Let's start this by downloading a single sample from the Sequence Read Archive (SRA), and processing it through Bactopia. bactopia --accession SRX4563634 \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir ena-single-sample \\ --max_cpus 2 So, what's happening here? --accession SRX4563634 is telling Bactopia to download FASTQs associated with Exeriment accession SRX4563634. --datasets datasets/ tells Bactopia your pre-built datasets are in the folder datasets . --species \"Staphylococcus aureus\" tells Bactopia, within the datasets folder, use the species specific dataset for S. aureus . --coverage 100 will limit the cleaned up FASTQ file to an estimated 100x coverage based on the genome size. --genome_size median tells Bactopia to use the median genome size of completed S. aureus genomes. The minimum, maximum, median, and mean genome sizes were calculated during the dataset building step. If a genome size was not given, it would have been estimated by Mash. --outdir ena-single-sample tells Bactopia to dump the results into the ena-single-sample folder. Please keep in mind, this will not stop Nextflow from creating files (.nextflow, trace.txt, etc...) and directories (work and .nextflow/) within your current directory. --max_cpus 2 tells Bactopia to use a maximum of 2 cpus per process. Adjust this parameter to fit your setup! Use --use_ena to download from ENA If you append --use_ena to the command above the FASTQ files for SRX4563634 will be downloaded from the European Nucleotide Archive (ENA) instead of SRA. Once you launch this command, sit back, relax and watch the Nextflow give realtime updates for SRX4563634's analysis! The approximate completion time is ~15-30 minutes depending on the number of cpus given and download times from ENA. Once complete, the results from numerous tools available to you in ena-single-sample/SRX4563634/ . Multiple Samples \u00b6 Now we are going to have Bactopia download and process 5 samples from ENA. To do this we can use the bactopia search function. bactopia search PRJNA480016 --limit 5 This will produce three files: ena-accessions.txt , ena-results.txt and ena-summary.txt . To learn more about these files see Generating Accession List . For this tutorial, ena-accessions.txt is the file we need. It contains five Experiment accessions, a single one per line. Just like this: SRX4563688 illummina SRX4563687 illummina SRX4563686 illummina SRX4563689 illummina SRX4563690 illummina Note: you may have 5 different accessions from the PRJNA480016 project. To process these samples, we will adjust our command used previously. bactopia --accessions ena-accessions.txt \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir ena-multiple-samples \\ --max_cpus 2 Instead of --accession we are now using --accessions ena-accessions.txt which tells Bactopia to read ena-accessions.txt , and download each Experiment accession from SRA (for ENA add --use_ena ) and then process it. At this point, you might want to go for a walk or make yourself a coffee! This step has an approximate completion time of ~45-120 minutes , which again is fully dependent on the cpus used and the download times from SRA (or ENA). Once this is complete, the results for all five samples will be found in the ena-multiple-samples directory. Each sample will have there own folder of results. Local Samples \u00b6 So for the local samples, we're going to recycle some of the samples we downloaded from SRA/ENA. First let's make a directory to put the FASTQs into: mkdir fastqs Now let's move some the FASTQs from our SRX4563634 sample into this folder. cp ena-single-sample/SRX4563634/quality-control/SRX4563634*.fastq.gz fastqs/ Finally let's also make a single-end version of SRX4563634. cat fastqs/SRX4563634*.fastq.gz > fastqs/SRX4563634-SE.fastq.gz OK! Now we are ready to continue the tutorial! Single Sample \u00b6 Again we'll mostly be using the same parameters as previous, but with a few new ones. To process a single sample you can use the --R1 / --R2 (paired-end), --SE (single-end), and --sample parameters. Paired-End \u00b6 For paired-end reads you will want to use --R1 , --R2 , and --sample . For this paired-end example we'll use SRX4563634 again which we've copied to the fastqs folder. bactopia --R1 fastqs/SRX4563634_R1.fastq.gz \\ --R2 fastqs/SRX4563634_R2.fastq.gz \\ --sample SRX4563634 \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-single-sample \\ --max_cpus 2 Now Bactopia will recognize the --R1 and --R2 parameters as paired-end reads and process. The --sample is required and will be used for naming the output. Similar to the single SRA/ENA sample, the approximate completion time is ~15-30 minutes depending on the number of cpus given. Once complete, results can be found in local-single-sample/SRX4563634/ . Single-End \u00b6 In the case of Illumina reads, you're very unlikely to produce single-end reads, but they do exist in the wild (early days of Illumina!). Nevertheless, because single-end reads do exist, single-end support was built into Bactopia. To analyze single-end reads, the --SE parameter will replace --R1 and --R2 . bactopia --SE fastqs/SRX4563634-SE.fastq.gz \\ --sample SRX4563634-SE \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-single-sample \\ --max_cpus 2 Now SRX4563634-SE will be processed as a single-end sample. For single-end processing there are some paired-end only analyses (e.g. error correction, insertion sequences) that will be skipped. This leads to single-end samples being processed a little bit faster than pair-end samples. But, the approximate completion time is still ~15-30 minutes . Once complete, you'll the results from numerous tools available to you in local-single-sample/SRX4563634-SE/ . If you made it this far, you're almost done! Multiple Samples (FOFN) \u00b6 Here we go! The final way you can process samples in Bactopia! Bactopia allows you to give a text file describing the input samples. This file of file names (FOFN), contains sample names and location to associated FASTQs. The Bactopia FOFN format is described in detail at Basic Usage -> Multiple Samples . First we'll need to prepare a FOFN describing the FASTQ files in our fastqs folder. We can use bactopia prepare to do so: bactopia prepare fastqs/ > fastqs.txt This command will try to create a FOFN for you. For this turorial, the FASTQ names are pretty straight forward and should produce a correct FOFN (or at least it should! ... hopefully!). If that wasn't the case for you, there are ways to tweak bactopia prepare . Now we can use the --fastqs parameters to process samples in the FOFN. bactopia --samples fastqs.txt \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-multiple-samples \\ --max_cpus 2 We no longer need --R1 , --R2 , --SE , or --sample as the values for these parameters can be determined from the FOFN. Here it is, the final wait! This step has an approximate completion time of ~45-120 minutes . So, you will definitely want to go for a walk or make yourself a coffee! You've earned it! Once this is complete, the results for each sample (within their own folder) will be found in the local-multiple-samples directory. FOFN is more cpu efficient, making it faster The real benefit of using the FOFN method to process multiple samples is Nextflow's queue system will make better use of cpus. Processing multiple samples one at a time (via --R1 / --R2 or --SE ) will lead more instances of jobs waiting on other jobs to finish, during which cpus aren't being used. What's next? \u00b6 That should do it! Hopefully you have succeeded (yay! \ud83c\udf89) and would like to use Bactopia on your own data! In this tutorial we covered how to build datasets ( bactopia datasets ) and how process samples. We also covered the bactopia search and bactopia prepare to prepare file for multiple sample processing. If your ran into any issues, please let me know by submitting a GitHub Issue . Outputs are available from figshare Incase you find it useful, the outputs from this tutorial are available from figshare at https://doi.org/10.6084/m9.figshare.17097156.v1","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"You should now have a directory named datasets that has all the available datasets to be used by Bactopia. For this tutorial, we will attempt to replicate the Staphopia analysis pipeline with Bactopia. We will use S. aureus samples associated with cystic fibrosis lung infections that were recently published (details below, shameless self plug!) and are available from BioProject accession PRJNA480016 . Bernardy, Eryn E., et al. \"Whole-Genome Sequences of Staphylococcus aureus Isolates from Cystic Fibrosis Lung Infections.\" Microbiol Resour Announc 8.3 (2019): e01564-18. Overall the goal of the tutorial is to: Build datasets Acquire Staphopia datasets Use Bactopia to process: A sample from SRA/ENA Multiple samples from SRA/ENA Single local sample Multiple local samples using FOFN Bactopia Should Be Installed This tutorial assumes you have already installed Bactopia. If you have not, please check out how to at Installation .","title":"Tutorial"},{"location":"tutorial/#build-datasets","text":"First let's create a directory to work in and activate our Bactopia environment. mkdir bactopia-tutorial cd bactopia-tutorial conda activate bactopia Now we are ready to build our datasets! bactopia datasets \\ --species \"Staphylococcus aureus\" \\ --include_genus \\ --limit 100 \\ --cpus 4 Let's review what is happening here. --species \"Staphylococcus aureus\" will download MLST schemas associated with S. aureus it will also download completed S. aureus genomes (RefSeq only) that are used to create a set of protein set for annotation, a Mash sketch for automatic variant calling to the nearest neighbor, and calculate genome size statistics. --include_genus will also download completed genomes from the Staphylococcus genus that will be used for the protein set. These completed genomes are not used for the sketch creation or genome size calculation. --limit 100 will limit the number of completed genomes downloaded to 100. --cpus 4 will use 4 cpus for downloading and the clustering step. Adjust this number according to your setup! These datasets will be built into the default datasets/ folder which can be changed using --outdir Use CARD over MEGARes Staphopia v1 made use of MEGARes, for the purposes of this tutorial we are going to use the CARD database instead. If all goes well, the newly created datasets are now available in the folder datasets/ . We have now completed the dataset creation step! Pat yourself on the back! Next we'll supplement these datasets with some optional S. aureus specific datasets.","title":"Build Datasets"},{"location":"tutorial/#acquire-staphopia-datasets","text":"Staphopia includes a few optional datasets such as S. aureus N315 reference genome and SCCmec sequences (primers, proteins, full cassettes). We will acquire these files using the Bactopia Datasets GitHub repository. For this tutorial a we'll be using the Staphylococcus aureus dataset repository. Now let's clone the repository. git clone https://github.com/bactopia-datasets/staphylococcus-aureus.git Next we'll copy the files into our recently built datasets folder and delete the staphylococcus-aureus repository since we no longer need it. cp -r staphylococcus-aureus/species-specific/ datasets/ rm -rf staphylococcus-aureus/ ~Voil\u00e0! That should be it. You should now have the S. aureus datasets included with your recently built datasets (e.g. S. aureus protein clusters, RefSeq sketch, etc...)","title":"Acquire Staphopia Datasets"},{"location":"tutorial/#running-bactopia","text":"OK! Get your servers started up! It is time to get processing!","title":"Running Bactopia"},{"location":"tutorial/#samples-on-sra","text":"","title":"Samples on SRA"},{"location":"tutorial/#single-sample","text":"Let's start this by downloading a single sample from the Sequence Read Archive (SRA), and processing it through Bactopia. bactopia --accession SRX4563634 \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir ena-single-sample \\ --max_cpus 2 So, what's happening here? --accession SRX4563634 is telling Bactopia to download FASTQs associated with Exeriment accession SRX4563634. --datasets datasets/ tells Bactopia your pre-built datasets are in the folder datasets . --species \"Staphylococcus aureus\" tells Bactopia, within the datasets folder, use the species specific dataset for S. aureus . --coverage 100 will limit the cleaned up FASTQ file to an estimated 100x coverage based on the genome size. --genome_size median tells Bactopia to use the median genome size of completed S. aureus genomes. The minimum, maximum, median, and mean genome sizes were calculated during the dataset building step. If a genome size was not given, it would have been estimated by Mash. --outdir ena-single-sample tells Bactopia to dump the results into the ena-single-sample folder. Please keep in mind, this will not stop Nextflow from creating files (.nextflow, trace.txt, etc...) and directories (work and .nextflow/) within your current directory. --max_cpus 2 tells Bactopia to use a maximum of 2 cpus per process. Adjust this parameter to fit your setup! Use --use_ena to download from ENA If you append --use_ena to the command above the FASTQ files for SRX4563634 will be downloaded from the European Nucleotide Archive (ENA) instead of SRA. Once you launch this command, sit back, relax and watch the Nextflow give realtime updates for SRX4563634's analysis! The approximate completion time is ~15-30 minutes depending on the number of cpus given and download times from ENA. Once complete, the results from numerous tools available to you in ena-single-sample/SRX4563634/ .","title":"Single Sample"},{"location":"tutorial/#multiple-samples","text":"Now we are going to have Bactopia download and process 5 samples from ENA. To do this we can use the bactopia search function. bactopia search PRJNA480016 --limit 5 This will produce three files: ena-accessions.txt , ena-results.txt and ena-summary.txt . To learn more about these files see Generating Accession List . For this tutorial, ena-accessions.txt is the file we need. It contains five Experiment accessions, a single one per line. Just like this: SRX4563688 illummina SRX4563687 illummina SRX4563686 illummina SRX4563689 illummina SRX4563690 illummina Note: you may have 5 different accessions from the PRJNA480016 project. To process these samples, we will adjust our command used previously. bactopia --accessions ena-accessions.txt \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir ena-multiple-samples \\ --max_cpus 2 Instead of --accession we are now using --accessions ena-accessions.txt which tells Bactopia to read ena-accessions.txt , and download each Experiment accession from SRA (for ENA add --use_ena ) and then process it. At this point, you might want to go for a walk or make yourself a coffee! This step has an approximate completion time of ~45-120 minutes , which again is fully dependent on the cpus used and the download times from SRA (or ENA). Once this is complete, the results for all five samples will be found in the ena-multiple-samples directory. Each sample will have there own folder of results.","title":"Multiple Samples"},{"location":"tutorial/#local-samples","text":"So for the local samples, we're going to recycle some of the samples we downloaded from SRA/ENA. First let's make a directory to put the FASTQs into: mkdir fastqs Now let's move some the FASTQs from our SRX4563634 sample into this folder. cp ena-single-sample/SRX4563634/quality-control/SRX4563634*.fastq.gz fastqs/ Finally let's also make a single-end version of SRX4563634. cat fastqs/SRX4563634*.fastq.gz > fastqs/SRX4563634-SE.fastq.gz OK! Now we are ready to continue the tutorial!","title":"Local Samples"},{"location":"tutorial/#single-sample_1","text":"Again we'll mostly be using the same parameters as previous, but with a few new ones. To process a single sample you can use the --R1 / --R2 (paired-end), --SE (single-end), and --sample parameters.","title":"Single Sample"},{"location":"tutorial/#paired-end","text":"For paired-end reads you will want to use --R1 , --R2 , and --sample . For this paired-end example we'll use SRX4563634 again which we've copied to the fastqs folder. bactopia --R1 fastqs/SRX4563634_R1.fastq.gz \\ --R2 fastqs/SRX4563634_R2.fastq.gz \\ --sample SRX4563634 \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-single-sample \\ --max_cpus 2 Now Bactopia will recognize the --R1 and --R2 parameters as paired-end reads and process. The --sample is required and will be used for naming the output. Similar to the single SRA/ENA sample, the approximate completion time is ~15-30 minutes depending on the number of cpus given. Once complete, results can be found in local-single-sample/SRX4563634/ .","title":"Paired-End"},{"location":"tutorial/#single-end","text":"In the case of Illumina reads, you're very unlikely to produce single-end reads, but they do exist in the wild (early days of Illumina!). Nevertheless, because single-end reads do exist, single-end support was built into Bactopia. To analyze single-end reads, the --SE parameter will replace --R1 and --R2 . bactopia --SE fastqs/SRX4563634-SE.fastq.gz \\ --sample SRX4563634-SE \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-single-sample \\ --max_cpus 2 Now SRX4563634-SE will be processed as a single-end sample. For single-end processing there are some paired-end only analyses (e.g. error correction, insertion sequences) that will be skipped. This leads to single-end samples being processed a little bit faster than pair-end samples. But, the approximate completion time is still ~15-30 minutes . Once complete, you'll the results from numerous tools available to you in local-single-sample/SRX4563634-SE/ . If you made it this far, you're almost done!","title":"Single-End"},{"location":"tutorial/#multiple-samples-fofn","text":"Here we go! The final way you can process samples in Bactopia! Bactopia allows you to give a text file describing the input samples. This file of file names (FOFN), contains sample names and location to associated FASTQs. The Bactopia FOFN format is described in detail at Basic Usage -> Multiple Samples . First we'll need to prepare a FOFN describing the FASTQ files in our fastqs folder. We can use bactopia prepare to do so: bactopia prepare fastqs/ > fastqs.txt This command will try to create a FOFN for you. For this turorial, the FASTQ names are pretty straight forward and should produce a correct FOFN (or at least it should! ... hopefully!). If that wasn't the case for you, there are ways to tweak bactopia prepare . Now we can use the --fastqs parameters to process samples in the FOFN. bactopia --samples fastqs.txt \\ --datasets datasets/ \\ --species \"Staphylococcus aureus\" \\ --coverage 100 \\ --genome_size median \\ --outdir local-multiple-samples \\ --max_cpus 2 We no longer need --R1 , --R2 , --SE , or --sample as the values for these parameters can be determined from the FOFN. Here it is, the final wait! This step has an approximate completion time of ~45-120 minutes . So, you will definitely want to go for a walk or make yourself a coffee! You've earned it! Once this is complete, the results for each sample (within their own folder) will be found in the local-multiple-samples directory. FOFN is more cpu efficient, making it faster The real benefit of using the FOFN method to process multiple samples is Nextflow's queue system will make better use of cpus. Processing multiple samples one at a time (via --R1 / --R2 or --SE ) will lead more instances of jobs waiting on other jobs to finish, during which cpus aren't being used.","title":"Multiple Samples (FOFN)"},{"location":"tutorial/#whats-next","text":"That should do it! Hopefully you have succeeded (yay! \ud83c\udf89) and would like to use Bactopia on your own data! In this tutorial we covered how to build datasets ( bactopia datasets ) and how process samples. We also covered the bactopia search and bactopia prepare to prepare file for multiple sample processing. If your ran into any issues, please let me know by submitting a GitHub Issue . Outputs are available from figshare Incase you find it useful, the outputs from this tutorial are available from figshare at https://doi.org/10.6084/m9.figshare.17097156.v1","title":"What's next?"},{"location":"usage-basic/","text":"Basic Usage For Bactopia \u00b6 Bactopia is a wrapper around many different tools. Each of these tools may (or may not) have there own configurable parameters for you to tweak. In order to facilitate getting started with Bactopia, this section has been limited to discussion of only a few parameters. However, if you are interested in the full list of configurable parameters in Bactopia, please check out the Complete Usage section. Usage \u00b6 --------------------------------------------- _ _ _ | |__ __ _ ___| |_ ___ _ __ (_) __ _ | '_ \\ / _` |/ __| __/ _ \\| '_ \\| |/ _` | | |_) | (_| | (__| || (_) | |_) | | (_| | |_.__/ \\__,_|\\___|\\__\\___/| .__/|_|\\__,_| |_| bactopia v2.x.x Bactopia is a flexible pipeline for complete analysis of bacterial genomes. --------------------------------------------- Typical pipeline command: bactopia --samples samples.txt --datasets datasets/ --species 'Staphylococcus aureus' -profile singularity Required Parameters ### For Procesessing Multiple Samples --samples [string] A FOFN with sample names and paths to FASTQ/FASTAs to process ### For Processing A Single Sample --R1 [string] First set of compressed (gzip) paired-end FASTQ reads (requires --R2 and --sample) --R2 [string] Second set of compressed (gzip) paired-end FASTQ reads (requires --R1 and --sample) --SE [string] Compressed (gzip) single-end FASTQ reads (requires --sample) --ont [boolean] Treat `--SE` or `--accession` as long reads for analysis. (requires --sample if using --SE) --hybrid [boolean] Treat `--SE` as long reads for hybrid assembly. (requires --R1, --R2, --SE and --sample) --sample [string] Sample name to use for the input sequences ### For Downloading from SRA/ENA or NCBI Assembly **Note: Downloaded assemblies will have error free Illumina reads simulated for processing.** --accessions [string] A file containing ENA/SRA Experiment accessions or NCBI Assembly accessions to processed --accession [string] Sample name to use for the input sequences ### For Processing an Assembly **Note: Assemblies will have error free Illumina reads simulated for processing.** --assembly [string] A assembled genome in compressed FASTA format. (requires --sample) Dataset Parameters --datasets [string] The path to datasets that have already been set up --species [string] Name of species for species-specific dataset to use --ask_merlin [boolean] Ask Merlin to execute species specific Bactopia tools based on Mash distances --coverage [integer] Reduce samples to a given coverage [default: 100] --genome_size [string] Expected genome size (bp) for all samples, a value of '0' will disable read error correction and read subsampling, otherwise estimate with Mash [default: 0] Annotate Genome Parameters --use_bakta [boolean] Use Bakta for genome annotation (requires --bakta_db) Optional Parameters --outdir [string] Base directory to write results to [default: ./] --run_name [string] Name of the directory to hold results [default: bactopia] Helpful Parameters --wf [string] Specify which workflow or Bactopia Tool to execute [default: bactopia] --list_wfs [boolean] List the available workflows and Bactopia Tools to use with '--wf' --help_all [boolean] An alias for --help --show_hidden_params --version [boolean] Display version text. !! Hiding 166 params, use --show_hidden_params (or --help_all) to show them !! -------------------------------------------------------------------- If you use bactopia for your analysis please cite: * Bactopia https://doi.org/10.1128/mSystems.00190-20 * The nf-core framework https://doi.org/10.1038/s41587-020-0439-x * Software dependencies https://bactopia.github.io/acknowledgements/ -------------------------------------------------------------------- Inputs \u00b6 Bactopia has multiple approaches to specify your input sequences. Bactopia can process Illumina and Nanopore FASTQs and assemblies. Illumina and Nanopore FASTQs a can be locally available or an Experiment accession to download associated FASTQs from the European Nucleotide Archive (ENA) . If you have Illumina and Nanopore reads for a sample you have choose to do a hybrid assembly. Likewise assemblies can be local, or a GenBank/RefSeq accession to download from NCBI Assembly. Input assemblies will have Illumina reads simulated so that the complete Bactopia pipeline run. By default, the assembly will not be reassembled. Which approach really depends on what you need to achieve! The following sections describe methods to process single samples, multiple samples, downloading samples from the ENA. Local \u00b6 Single Sample \u00b6 When you only need to process a single sample at a time, Bactopia allows that! You only have to the sample name ( --sample ) and the whether the read set is paired-end ( --R1 and --R2 ), single-end ( --SE ), Illumina paired-end + long reads ( --hybrid ), or an assembly ( --assembly ). Paired-End \u00b6 Use --R1, --R2 for Paired-End FASTQs bactopia --sample my-sample --R1 /path/to/my-sample_R1.fastq.gz --R2 /path/to/my-sample_R2.fastq.gz Single-End \u00b6 Use --SE for Single-End FASTQs bactopia --sample my-sample --SE /path/to/my-sample.fastq.gz Nanopore \u00b6 Use --SE and --ont for Oxford Nanopore FASTQs bactopia --sample my-sample --SE /path/to/my-ont-sample.fastq.gz --ont Hybrid Assembly \u00b6 Use --R1, --R2, --SE, and --hybrid for Paired-End FASTQs with Long Reads At the assembly step, Unicycler will be used to create a hybrid assembly using the paired-end reads and the long reads. bactopia --sample my-sample --R1 /path/to/my-sample_R1.fastq.gz \\ --R2 /path/to/my-sample_R2.fastq.gz \\ --SE /path/to/my-ont-sample.fastq.gz \\ --hybrid Assembly \u00b6 Use --assembly for an assembled FASTA Assemblies will have 2x250bp Illumina reads simulated without insertions or deletions in the sequence and a minimum PHRED score of Q33. By default, the input assembly will be used for all downstream analyses (e.g. annotation) which use an assembly. If the --reassemble parameter is given, then the a assembly will be created from the simulated reads. bactopia --sample my-sample --assembly /path/to/my-sample.fna.gz Multiple Samples \u00b6 For multiple samples, you must create a file with information about the inputs, a file of filenames (FOFN). This file specifies sample names and location of FASTQs/FASTAs to be processed. Using this information, paired-end, single-end, nanopore, hybrid or assembly information can be extracted as well as naming output files. While this is an additional step for you, the user, it helps to avoid potential pattern matching errors. Most importantly, by taking this approach, you can process hundreds of samples in a single command. There is also the added benefit of knowing which FASTQs were analysed and their location at a later time! Use --samples for Multiple Samples bactopia --samples my-samples.txt The FOFN Format \u00b6 Here is an example FOFN created by bactopia prepare . sample runtype r1 r2 extra SA103113 assembly /example/SA103113.fna.gz SA110685 hybrid /example/SA110685_R1.fastq.gz /SA110685_R2.fastq.gz /example/SA110685.fastq.gz SA123186 paired-end /example/SA123186_R1.fastq.gz /example/SA123186_R2.fastq.gz SA123456 single-end /example/SA12345.fastq.gz SA123456ONT ont /example/SA12345ONT.fastq.gz The expected structure is a tab-delimited table with three columns: sample : A unique prefix, or unique name, to be used for naming output files runtype : Informs Bactopia what type of input the sample is r1 : If paired-end, the first pair of reads, else the single-end reads r2 : If paired-end, the second pair of reads extra : Either the assembly or long reads associated with a sample. These five columns are used as the header for the file. In other words, all input FOFNs require their first line to be: sample runtype r1 r2 extra All lines after the header line, contain unique sample names and location(s) to associated FASTQ file(s). Absolute paths should be used to prevent any file not found errors due to the relative path changing. In the example above, four samples would be processed by Bactopia. SA103113 would have simulated reads crreated from the assembly SA110685 would have a hybrid assembly created using the paired-end reads and long-reads SA123186 would be processed as paired-end reads SA123456 would be processed as single-end reads SA123456ONT would be processed as Nanopore reads Use bactopia prepare to generate the FOFN You can manually create the FOFN, but it is highly recommended to always use bactopia prepare to generate the FOFN. By using a FOFN generated from bactopia prepare you can be confident your FOFN will work with Bactopia. Generating A FOFN \u00b6 bactopia prepare has been included to help aid (hopefully!) the process of creating a FOFN for your samples. This script will attempt to find FASTQ files in a given directory and output the expected FOFN format. It will also output any potential issues associated with the pattern matching. Verify accuracy of FOFN This is currently an experimental function. There are likely bugs to be ironed out. Please be sure to give the resulting FOFN a quick look over. usage: bactopia prepare [-h] [-f STR] [-a STR] [--fastq_separator STR] [--fastq_pattern STR] [--pe1_pattern STR] [--pe2_pattern STR] [--assembly_pattern STR] [-r] [--long_reads] [--merge] [--prefix STR] [--version] STR bactopia prepare - Read a directory and prepare a FOFN of FASTQs/FASTAs positional arguments: STR Directory where FASTQ files are stored optional arguments: -h, --help show this help message and exit -f STR, --fastq_ext STR Extension of the FASTQs. Default: .fastq.gz -a STR, --assembly_ext STR Extension of the FASTA assemblies. Default: .fna.gz --fastq_separator STR Split FASTQ name on the last occurrence of the separator. Default: _ --fastq_pattern STR Glob pattern to match FASTQs. Default: *.fastq.gz --pe1_pattern STR Designates difference first set of paired-end reads. Default: ([Aa]|[Rr]1|1) (R1, r1, 1, A, a) --pe2_pattern STR Designates difference second set of paired-end reads. Default: ([Bb]|[Rr]2|2) (R2, r2, 2, AB b) --assembly_pattern STR Glob pattern to match assembly FASTAs. Default: *.fna.gz -r, --recursive Directories will be traversed recursively --long_reads Single-end reads should be treated as long reads --merge Flag samples with multiple read sets to be merged by Bactopia --prefix STR Replace the absolute path with a given string. Default: Use absolute path --version show program's version number and exit Nanopore \u00b6 Use --long_reads to tell Bactopia to process as Nanopore reads When --long_reads is used, any reads that are identified as single-end will be given a runtype of ont . This will tell Bactopia to process these reads as Nanopore reads. Validating FOFN \u00b6 When a FOFN is given, the first thing Bactopia does is verify all FASTQ files are found. If everything checks out, each sample will then be processed, otherwise a list of samples with errors will be output to STDERR. If you would like to only validate your FOFN (and not run the full pipeline), you can use the --check_samples parameter. Without Errors \u00b6 N E X T F L O W ~ version 20.01.0 Launching `/home/rpetit3/repos/bactopia/main.nf` [gigantic_meitner] - revision: 6a0fbfbd9c Printing what would have been processed. Each line consists of an array of five elements: [SAMPLE_NAME, RUNTYPE, IS_SINGLE_END, [FASTQ_1, FASTQ_2], EXTRA] Found: [SA103113, assembly, false, [null, null], /example/SA103113.fna.gz] [SA110685, hybrid, false, [/example/SA110685_R1.fastq.gz, /example/SA110685_R2.fastq.gz], /example/SA110685.fastq.gz] [SA123186, paired-end, false, [/example/SA123186_R1.fastq.gz, /example/SA123186_R2.fastq.gz], null] [SA12345, single-end, true, [/example/SA12345.fastq.gz], null] [SA12345ONT, ont, true, [/example/SA12345ONT.fastq.gz], null] Each sample has passed validation and is put into a five element array: sample - the name for this sample runtype - the type of run (paired, single, ont, etc...) that should be used is_single_end - the reads are single-end (true) or paired-end (false) fastq_array - the fastqs associated with the sample extra - Extra column for reads to be used in hybrid assembly This array is then automatically queued up for proccessing by Nextflow. With errors \u00b6 N E X T F L O W ~ version 20.01.0 Launching `/home/rpetit3/repos/bactopia/main.nf` [special_ampere] - revision: 6a0fbfbd9c LINE 4:ERROR: Please verify /example-bad/SA123186_R1.fastq.gz exists, and try again LINE 4:ERROR: Please verify /example-bad/SA123186_R2.fastq.gz exists, and try again LINE 5:ERROR: Please verify /example-bad/SA12345.fastq.gz exists, and try again Sample name \"SA123186\" is not unique, please revise sample names Verify sample names are unique and/or FASTA/FASTQ paths are correct See \"--example_fastqs\" for an example Exiting In the above example, there are multiple errors. Lines 4 and 5 ( LINE 4:ERROR or LINE 5:ERROR ) suggest that based on the given paths the FASTQs do not exist. The sample name SA123186 has been used multiple times, and must be corrected. ENA & SRA \u00b6 There are a lot of publicly avilable sequences available from the European Nucleotide Archive (ENA) and the Sequence Read Archive (SRA). There's a good chance you might want to include some of those sequences in your analysis! If that sounds like you, Bactopia has that built in for you! You can give a single Experiment accession ( --accession ) or a file where each line is a single Experiment accession ( --accessions ). Bactopia will then query ENA to determine Run accession(s) associated with the given Experiment accession and proceed download the corresponding FASTQ files from either the SRA (default) or ENA ( --use_ena ). After the download is completed, it will be processed through Bactopia. Use --accession for a Single Experiment Accession SRA: bactopia --accession SRX476958 ENA: bactopia --accession SRX476958 --use_ena Use --accessions for Multiple Experiment Accessions SRA: bactopia --accessions my-accessions.txt ENA: bactopia --accessions my-accessions.txt --use_ena What happens when an Experiment has multiple Runs? In cases where a single Experiment might have multiple Run accessions associated with it, the FASTQ files from each Run are merged into a single set of sequences. Generating Accession List \u00b6 bactopia search has been made to help assist in generating a list of Experiment accessions to be procesed by Bactopia (via --accessions ). Users can provide a Taxon ID (e.g. 1280), a binary name (e.g. Staphylococcus aureus), a Study accession (e.g. PRJNA480016), a BioSample accession (e.g. SAMN01737350), or a Run accession (e.g. SRR578340). This value is then queried against ENA's Data Warehouse API ), and a list of all Experiment accessions associated with the query is returned. Usage \u00b6 usage: bactopia search [-h] [--exact_taxon] [--outdir OUTPUT_DIRECTORY] [--prefix PREFIX] [--limit INT] [--version] STR bactopia search - Search ENA for associated WGS samples positional arguments: STR Taxon ID or Study, BioSample, or Run accession optional arguments: -h, --help show this help message and exit --exact_taxon Exclude Taxon ID descendents. --outdir OUTPUT_DIRECTORY Directory to write output. (Default: .) --prefix PREFIX Prefix to use for output file names. (Default: ena) --limit INT Maximum number of results to return. (Default: 1000000) --version show program's version number and exit example usage: bactopia search PRJNA480016 --limit 20 bactopia search 1280 --exact_taxon --limit 20' bactopia search \"staphylococcus aureus\" --limit 20 bactopia search SAMN01737350 bactopia search SRR578340 Example \u00b6 bactopia search PRJNA480016 --limit 5 When completed three files are produced: ena-accessions.txt - Contains a list of Experiment accessions to be processed. SRX4563686 SRX4563689 SRX4563687 SRX4563690 SRX4563688 Input for Bactopia This file can be used in conjunction with the --accessions parameter for Bactopia processing. ena-results.txt - Contains the full results of the API query. This includes multiples fields (sample_accession, tax_id, sample_alias, center_name, etc...) ena-summary.txt - Contains a small summary of the completed request QUERY: (study_accession=PRJNA480016 OR secondary_study_accession=PRJNA480016) LIMIT: 5 RESULTS: 5 (./ena-results.txt) ILLUMINA ACCESSIONS: 5 (./ena-accessions.txt) --cleanup_workdir \u00b6 After you run Bactopia, you will notice a directory called work . This directory is where Nextflow runs all the processes and stores the intermediate files. After a process completes successfully, the appropriate results are pulled out and placed in the sample's result folder. The work directory can grow very large very quickly! Please keep this in mind when using Bactopia. To help prevent the build up of the work directory you can use --cleanup_workdir to delete intermediate files after a successful execution of Bactopia. Bactopia and Bactopia Tools use separate work directories Inside the work directory there will be separate subfolders that correspond to a Bactopia run or a specific Bactopia Tool run. This allows you to more easily identify which are ok to delete. The work directory is always ok to delete after a successful run. --max_cpus \u00b6 At execution, Nextflow creates a queue and the number of slots in the queue is determined by the total number of cores on the system. So if you have a 24-core system, that means Nextflow will have a queue with 24-slots available. This feature kind of makes --max_cpus a little misleading. Typically when you give --max_cpus you are saying \"use this amount of cpus\" . But that is not the case for Nextflow and Bactopia. When you use --max_cpus what you are actually saying is \"for any particular task, use this amount of slots\" . Commands within a task processors will use the amount specified by --max_cpus . --max_cpus can have a significant effect on the efficiency of Bactopia So for example if you have a system with 24-cores. This command, bactopia ... --max_cpus 24 , says for any particular task, use 24 slots . Nextflow will give tasks in Bactopia 24 slots out of 24 available (24-core machine). In other words the queue can one have one task running at once because each task occupies 24 slots. On the other hand, bactopia ... --max_cpus 4 says for any particular task, use 4 slots . Now, for Nextflow will give each task 4 slots out of 24 slots. Which means 6 tasks can be running at once. This can lead to much better efficiency because less jobs are stuck waiting in line. There are some tasks in Bactopia that will only ever use a single slot because they are single-core tasks. But for example the annotation step will always use the number of slots specified by --max_cpus . If the --max_cpus is too high, the annotation will get bogged down, which causes tasks dependent on annotation to also get bogged down. When in doubt --max_cpus 4 is a safe value. This is also the default value for Bactopia. -qs \u00b6 The -qs parameter is short for queue size . As described above for --max_cpus , the default value for -qs is set to the total number of cores on the system. This parameter allows you to adjust the maximum number of cores Nextflow can use at any given moment. -qs allows you to play nicely on shared resources From the example above, if you have a system with 24-cores. The default queue size if 24 slots. bactopia ... --max_cpus 4 says for any particular task, use a maximum of 4 slots . Nextflow will give each task 4 slots out of 24 slots. But there might be other people also using the server. bactopia ... --max_cpus 4 -qs 12 says for any particular task, use a maximum of 4 slots, but don't use more than 12 slots . Nextflow will give each task 4 slots out of 12 slots. Now instead of using all the cores on the server, the maximum that can be used in 12. -qs might need adjusting for job schedulers. The default value for -qs is set to 100 when using a job scheduler (e.g. SLURM, AWS Batch). There may be times when you need adjust this to meet your needs. For example, if using AWS Batch you might want to increase the value to have more jobs processed at once (e.g. 100 vs 500). --genome_size \u00b6 Throughout the Bactopia workflow a genome size is used for various tasks. By default, a genome size is estimated using Mash. However, users can provide their own value for genome size, use values based on Species Specific Datasets , or completely disable it. Value Result empty Mash is used to estimate the genome size integer Uses the genome size (e.g. --genome_size 2800000 ) provided by the user 0 Read error correct and read subsampling will be disabled. min Requires --species , the minimum completed genome size for a species is used median Requires --species , the median completed genome size for a species is used mean Requires --species , the mean completed genome size for a species is used max Requires --species , the maximum completed genome size for a species is used Mash may not be the most accurate estimate Mash is very convenient to quickly estimate a genome size, but it may not be the most accurate in all cases and will differ between samples. It is recommended that when possible a known genome size or one based off completed genomes should be used. --nfconfig \u00b6 A key feature of Nextflow is you can provide your own config files. What this boils down to you can easily set Bactopia to run on your environment. With --nfconfig you can tell Bactopia to import your config file. --nfconfig has been set up so that it is the last config file to be loaded by Nextflow. This means that if your config file contains variables (e.g. params or profiles) already set they will be overwritten by your values. Nextflow goes into great details on how to create configuration files. Please check the following links for adjustsments you be interested in making. Scope Description env Set any environment variables that might be required params Change the default values of command line arguments process Adjust perprocess configurations such as containers, conda envs, or resource usage profile Create predefined profiles for your Executor There are many other scopes that you might be interested in checking out. You are most like going to want to create a custom profile. By doing so you can specify it at runtime ( -profile myProfile ) and Nextflow will be excuted based on that profile. Often times your custom profile will include information on the executor (queues, allocations, apths, etc...). If you need help please reach out ! If you're using the standard profile (did not specify -profile 'xyz') this might not be necessary. -resume \u00b6 Bactopia relies on Nextflow's Resume Feature to resume runs. You can tell Bactopia to resume by adding -resume to your command line. When -resume is used, Nextflow will review the cache and determine if the previous run is resumable. If the previous run is not resumable, execution will start at the beginning. --keep_all_files \u00b6 In some processes, Bactopia will delete large intermediate files (e.g. multiple uncompressed FASTQs) only after a process successfully completes. Since this a per-process function, it does not affect Nextflow's ability to resume ( -resume )a workflow. You can deactivate this feature using --keep_all_files . Please, keep in mind the work directory is already large, this will make it 2-3 times larger.","title":"Basic Usage"},{"location":"usage-basic/#basic-usage-for-bactopia","text":"Bactopia is a wrapper around many different tools. Each of these tools may (or may not) have there own configurable parameters for you to tweak. In order to facilitate getting started with Bactopia, this section has been limited to discussion of only a few parameters. However, if you are interested in the full list of configurable parameters in Bactopia, please check out the Complete Usage section.","title":"Basic Usage For Bactopia"},{"location":"usage-basic/#usage","text":"--------------------------------------------- _ _ _ | |__ __ _ ___| |_ ___ _ __ (_) __ _ | '_ \\ / _` |/ __| __/ _ \\| '_ \\| |/ _` | | |_) | (_| | (__| || (_) | |_) | | (_| | |_.__/ \\__,_|\\___|\\__\\___/| .__/|_|\\__,_| |_| bactopia v2.x.x Bactopia is a flexible pipeline for complete analysis of bacterial genomes. --------------------------------------------- Typical pipeline command: bactopia --samples samples.txt --datasets datasets/ --species 'Staphylococcus aureus' -profile singularity Required Parameters ### For Procesessing Multiple Samples --samples [string] A FOFN with sample names and paths to FASTQ/FASTAs to process ### For Processing A Single Sample --R1 [string] First set of compressed (gzip) paired-end FASTQ reads (requires --R2 and --sample) --R2 [string] Second set of compressed (gzip) paired-end FASTQ reads (requires --R1 and --sample) --SE [string] Compressed (gzip) single-end FASTQ reads (requires --sample) --ont [boolean] Treat `--SE` or `--accession` as long reads for analysis. (requires --sample if using --SE) --hybrid [boolean] Treat `--SE` as long reads for hybrid assembly. (requires --R1, --R2, --SE and --sample) --sample [string] Sample name to use for the input sequences ### For Downloading from SRA/ENA or NCBI Assembly **Note: Downloaded assemblies will have error free Illumina reads simulated for processing.** --accessions [string] A file containing ENA/SRA Experiment accessions or NCBI Assembly accessions to processed --accession [string] Sample name to use for the input sequences ### For Processing an Assembly **Note: Assemblies will have error free Illumina reads simulated for processing.** --assembly [string] A assembled genome in compressed FASTA format. (requires --sample) Dataset Parameters --datasets [string] The path to datasets that have already been set up --species [string] Name of species for species-specific dataset to use --ask_merlin [boolean] Ask Merlin to execute species specific Bactopia tools based on Mash distances --coverage [integer] Reduce samples to a given coverage [default: 100] --genome_size [string] Expected genome size (bp) for all samples, a value of '0' will disable read error correction and read subsampling, otherwise estimate with Mash [default: 0] Annotate Genome Parameters --use_bakta [boolean] Use Bakta for genome annotation (requires --bakta_db) Optional Parameters --outdir [string] Base directory to write results to [default: ./] --run_name [string] Name of the directory to hold results [default: bactopia] Helpful Parameters --wf [string] Specify which workflow or Bactopia Tool to execute [default: bactopia] --list_wfs [boolean] List the available workflows and Bactopia Tools to use with '--wf' --help_all [boolean] An alias for --help --show_hidden_params --version [boolean] Display version text. !! Hiding 166 params, use --show_hidden_params (or --help_all) to show them !! -------------------------------------------------------------------- If you use bactopia for your analysis please cite: * Bactopia https://doi.org/10.1128/mSystems.00190-20 * The nf-core framework https://doi.org/10.1038/s41587-020-0439-x * Software dependencies https://bactopia.github.io/acknowledgements/ --------------------------------------------------------------------","title":"Usage"},{"location":"usage-basic/#inputs","text":"Bactopia has multiple approaches to specify your input sequences. Bactopia can process Illumina and Nanopore FASTQs and assemblies. Illumina and Nanopore FASTQs a can be locally available or an Experiment accession to download associated FASTQs from the European Nucleotide Archive (ENA) . If you have Illumina and Nanopore reads for a sample you have choose to do a hybrid assembly. Likewise assemblies can be local, or a GenBank/RefSeq accession to download from NCBI Assembly. Input assemblies will have Illumina reads simulated so that the complete Bactopia pipeline run. By default, the assembly will not be reassembled. Which approach really depends on what you need to achieve! The following sections describe methods to process single samples, multiple samples, downloading samples from the ENA.","title":"Inputs"},{"location":"usage-basic/#local","text":"","title":"Local"},{"location":"usage-basic/#single-sample","text":"When you only need to process a single sample at a time, Bactopia allows that! You only have to the sample name ( --sample ) and the whether the read set is paired-end ( --R1 and --R2 ), single-end ( --SE ), Illumina paired-end + long reads ( --hybrid ), or an assembly ( --assembly ).","title":"Single Sample"},{"location":"usage-basic/#paired-end","text":"Use --R1, --R2 for Paired-End FASTQs bactopia --sample my-sample --R1 /path/to/my-sample_R1.fastq.gz --R2 /path/to/my-sample_R2.fastq.gz","title":"Paired-End"},{"location":"usage-basic/#single-end","text":"Use --SE for Single-End FASTQs bactopia --sample my-sample --SE /path/to/my-sample.fastq.gz","title":"Single-End"},{"location":"usage-basic/#nanopore","text":"Use --SE and --ont for Oxford Nanopore FASTQs bactopia --sample my-sample --SE /path/to/my-ont-sample.fastq.gz --ont","title":"Nanopore"},{"location":"usage-basic/#hybrid-assembly","text":"Use --R1, --R2, --SE, and --hybrid for Paired-End FASTQs with Long Reads At the assembly step, Unicycler will be used to create a hybrid assembly using the paired-end reads and the long reads. bactopia --sample my-sample --R1 /path/to/my-sample_R1.fastq.gz \\ --R2 /path/to/my-sample_R2.fastq.gz \\ --SE /path/to/my-ont-sample.fastq.gz \\ --hybrid","title":"Hybrid Assembly"},{"location":"usage-basic/#assembly","text":"Use --assembly for an assembled FASTA Assemblies will have 2x250bp Illumina reads simulated without insertions or deletions in the sequence and a minimum PHRED score of Q33. By default, the input assembly will be used for all downstream analyses (e.g. annotation) which use an assembly. If the --reassemble parameter is given, then the a assembly will be created from the simulated reads. bactopia --sample my-sample --assembly /path/to/my-sample.fna.gz","title":"Assembly"},{"location":"usage-basic/#multiple-samples","text":"For multiple samples, you must create a file with information about the inputs, a file of filenames (FOFN). This file specifies sample names and location of FASTQs/FASTAs to be processed. Using this information, paired-end, single-end, nanopore, hybrid or assembly information can be extracted as well as naming output files. While this is an additional step for you, the user, it helps to avoid potential pattern matching errors. Most importantly, by taking this approach, you can process hundreds of samples in a single command. There is also the added benefit of knowing which FASTQs were analysed and their location at a later time! Use --samples for Multiple Samples bactopia --samples my-samples.txt","title":"Multiple Samples"},{"location":"usage-basic/#the-fofn-format","text":"Here is an example FOFN created by bactopia prepare . sample runtype r1 r2 extra SA103113 assembly /example/SA103113.fna.gz SA110685 hybrid /example/SA110685_R1.fastq.gz /SA110685_R2.fastq.gz /example/SA110685.fastq.gz SA123186 paired-end /example/SA123186_R1.fastq.gz /example/SA123186_R2.fastq.gz SA123456 single-end /example/SA12345.fastq.gz SA123456ONT ont /example/SA12345ONT.fastq.gz The expected structure is a tab-delimited table with three columns: sample : A unique prefix, or unique name, to be used for naming output files runtype : Informs Bactopia what type of input the sample is r1 : If paired-end, the first pair of reads, else the single-end reads r2 : If paired-end, the second pair of reads extra : Either the assembly or long reads associated with a sample. These five columns are used as the header for the file. In other words, all input FOFNs require their first line to be: sample runtype r1 r2 extra All lines after the header line, contain unique sample names and location(s) to associated FASTQ file(s). Absolute paths should be used to prevent any file not found errors due to the relative path changing. In the example above, four samples would be processed by Bactopia. SA103113 would have simulated reads crreated from the assembly SA110685 would have a hybrid assembly created using the paired-end reads and long-reads SA123186 would be processed as paired-end reads SA123456 would be processed as single-end reads SA123456ONT would be processed as Nanopore reads Use bactopia prepare to generate the FOFN You can manually create the FOFN, but it is highly recommended to always use bactopia prepare to generate the FOFN. By using a FOFN generated from bactopia prepare you can be confident your FOFN will work with Bactopia.","title":"The FOFN Format"},{"location":"usage-basic/#generating-a-fofn","text":"bactopia prepare has been included to help aid (hopefully!) the process of creating a FOFN for your samples. This script will attempt to find FASTQ files in a given directory and output the expected FOFN format. It will also output any potential issues associated with the pattern matching. Verify accuracy of FOFN This is currently an experimental function. There are likely bugs to be ironed out. Please be sure to give the resulting FOFN a quick look over. usage: bactopia prepare [-h] [-f STR] [-a STR] [--fastq_separator STR] [--fastq_pattern STR] [--pe1_pattern STR] [--pe2_pattern STR] [--assembly_pattern STR] [-r] [--long_reads] [--merge] [--prefix STR] [--version] STR bactopia prepare - Read a directory and prepare a FOFN of FASTQs/FASTAs positional arguments: STR Directory where FASTQ files are stored optional arguments: -h, --help show this help message and exit -f STR, --fastq_ext STR Extension of the FASTQs. Default: .fastq.gz -a STR, --assembly_ext STR Extension of the FASTA assemblies. Default: .fna.gz --fastq_separator STR Split FASTQ name on the last occurrence of the separator. Default: _ --fastq_pattern STR Glob pattern to match FASTQs. Default: *.fastq.gz --pe1_pattern STR Designates difference first set of paired-end reads. Default: ([Aa]|[Rr]1|1) (R1, r1, 1, A, a) --pe2_pattern STR Designates difference second set of paired-end reads. Default: ([Bb]|[Rr]2|2) (R2, r2, 2, AB b) --assembly_pattern STR Glob pattern to match assembly FASTAs. Default: *.fna.gz -r, --recursive Directories will be traversed recursively --long_reads Single-end reads should be treated as long reads --merge Flag samples with multiple read sets to be merged by Bactopia --prefix STR Replace the absolute path with a given string. Default: Use absolute path --version show program's version number and exit","title":"Generating A FOFN"},{"location":"usage-basic/#nanopore_1","text":"Use --long_reads to tell Bactopia to process as Nanopore reads When --long_reads is used, any reads that are identified as single-end will be given a runtype of ont . This will tell Bactopia to process these reads as Nanopore reads.","title":"Nanopore"},{"location":"usage-basic/#validating-fofn","text":"When a FOFN is given, the first thing Bactopia does is verify all FASTQ files are found. If everything checks out, each sample will then be processed, otherwise a list of samples with errors will be output to STDERR. If you would like to only validate your FOFN (and not run the full pipeline), you can use the --check_samples parameter.","title":"Validating FOFN"},{"location":"usage-basic/#without-errors","text":"N E X T F L O W ~ version 20.01.0 Launching `/home/rpetit3/repos/bactopia/main.nf` [gigantic_meitner] - revision: 6a0fbfbd9c Printing what would have been processed. Each line consists of an array of five elements: [SAMPLE_NAME, RUNTYPE, IS_SINGLE_END, [FASTQ_1, FASTQ_2], EXTRA] Found: [SA103113, assembly, false, [null, null], /example/SA103113.fna.gz] [SA110685, hybrid, false, [/example/SA110685_R1.fastq.gz, /example/SA110685_R2.fastq.gz], /example/SA110685.fastq.gz] [SA123186, paired-end, false, [/example/SA123186_R1.fastq.gz, /example/SA123186_R2.fastq.gz], null] [SA12345, single-end, true, [/example/SA12345.fastq.gz], null] [SA12345ONT, ont, true, [/example/SA12345ONT.fastq.gz], null] Each sample has passed validation and is put into a five element array: sample - the name for this sample runtype - the type of run (paired, single, ont, etc...) that should be used is_single_end - the reads are single-end (true) or paired-end (false) fastq_array - the fastqs associated with the sample extra - Extra column for reads to be used in hybrid assembly This array is then automatically queued up for proccessing by Nextflow.","title":"Without Errors"},{"location":"usage-basic/#with-errors","text":"N E X T F L O W ~ version 20.01.0 Launching `/home/rpetit3/repos/bactopia/main.nf` [special_ampere] - revision: 6a0fbfbd9c LINE 4:ERROR: Please verify /example-bad/SA123186_R1.fastq.gz exists, and try again LINE 4:ERROR: Please verify /example-bad/SA123186_R2.fastq.gz exists, and try again LINE 5:ERROR: Please verify /example-bad/SA12345.fastq.gz exists, and try again Sample name \"SA123186\" is not unique, please revise sample names Verify sample names are unique and/or FASTA/FASTQ paths are correct See \"--example_fastqs\" for an example Exiting In the above example, there are multiple errors. Lines 4 and 5 ( LINE 4:ERROR or LINE 5:ERROR ) suggest that based on the given paths the FASTQs do not exist. The sample name SA123186 has been used multiple times, and must be corrected.","title":"With errors"},{"location":"usage-basic/#ena-sra","text":"There are a lot of publicly avilable sequences available from the European Nucleotide Archive (ENA) and the Sequence Read Archive (SRA). There's a good chance you might want to include some of those sequences in your analysis! If that sounds like you, Bactopia has that built in for you! You can give a single Experiment accession ( --accession ) or a file where each line is a single Experiment accession ( --accessions ). Bactopia will then query ENA to determine Run accession(s) associated with the given Experiment accession and proceed download the corresponding FASTQ files from either the SRA (default) or ENA ( --use_ena ). After the download is completed, it will be processed through Bactopia. Use --accession for a Single Experiment Accession SRA: bactopia --accession SRX476958 ENA: bactopia --accession SRX476958 --use_ena Use --accessions for Multiple Experiment Accessions SRA: bactopia --accessions my-accessions.txt ENA: bactopia --accessions my-accessions.txt --use_ena What happens when an Experiment has multiple Runs? In cases where a single Experiment might have multiple Run accessions associated with it, the FASTQ files from each Run are merged into a single set of sequences.","title":"ENA &amp; SRA"},{"location":"usage-basic/#generating-accession-list","text":"bactopia search has been made to help assist in generating a list of Experiment accessions to be procesed by Bactopia (via --accessions ). Users can provide a Taxon ID (e.g. 1280), a binary name (e.g. Staphylococcus aureus), a Study accession (e.g. PRJNA480016), a BioSample accession (e.g. SAMN01737350), or a Run accession (e.g. SRR578340). This value is then queried against ENA's Data Warehouse API ), and a list of all Experiment accessions associated with the query is returned.","title":"Generating Accession List"},{"location":"usage-basic/#usage_1","text":"usage: bactopia search [-h] [--exact_taxon] [--outdir OUTPUT_DIRECTORY] [--prefix PREFIX] [--limit INT] [--version] STR bactopia search - Search ENA for associated WGS samples positional arguments: STR Taxon ID or Study, BioSample, or Run accession optional arguments: -h, --help show this help message and exit --exact_taxon Exclude Taxon ID descendents. --outdir OUTPUT_DIRECTORY Directory to write output. (Default: .) --prefix PREFIX Prefix to use for output file names. (Default: ena) --limit INT Maximum number of results to return. (Default: 1000000) --version show program's version number and exit example usage: bactopia search PRJNA480016 --limit 20 bactopia search 1280 --exact_taxon --limit 20' bactopia search \"staphylococcus aureus\" --limit 20 bactopia search SAMN01737350 bactopia search SRR578340","title":"Usage"},{"location":"usage-basic/#example","text":"bactopia search PRJNA480016 --limit 5 When completed three files are produced: ena-accessions.txt - Contains a list of Experiment accessions to be processed. SRX4563686 SRX4563689 SRX4563687 SRX4563690 SRX4563688 Input for Bactopia This file can be used in conjunction with the --accessions parameter for Bactopia processing. ena-results.txt - Contains the full results of the API query. This includes multiples fields (sample_accession, tax_id, sample_alias, center_name, etc...) ena-summary.txt - Contains a small summary of the completed request QUERY: (study_accession=PRJNA480016 OR secondary_study_accession=PRJNA480016) LIMIT: 5 RESULTS: 5 (./ena-results.txt) ILLUMINA ACCESSIONS: 5 (./ena-accessions.txt)","title":"Example"},{"location":"usage-basic/#-cleanup_workdir","text":"After you run Bactopia, you will notice a directory called work . This directory is where Nextflow runs all the processes and stores the intermediate files. After a process completes successfully, the appropriate results are pulled out and placed in the sample's result folder. The work directory can grow very large very quickly! Please keep this in mind when using Bactopia. To help prevent the build up of the work directory you can use --cleanup_workdir to delete intermediate files after a successful execution of Bactopia. Bactopia and Bactopia Tools use separate work directories Inside the work directory there will be separate subfolders that correspond to a Bactopia run or a specific Bactopia Tool run. This allows you to more easily identify which are ok to delete. The work directory is always ok to delete after a successful run.","title":"--cleanup_workdir"},{"location":"usage-basic/#-max_cpus","text":"At execution, Nextflow creates a queue and the number of slots in the queue is determined by the total number of cores on the system. So if you have a 24-core system, that means Nextflow will have a queue with 24-slots available. This feature kind of makes --max_cpus a little misleading. Typically when you give --max_cpus you are saying \"use this amount of cpus\" . But that is not the case for Nextflow and Bactopia. When you use --max_cpus what you are actually saying is \"for any particular task, use this amount of slots\" . Commands within a task processors will use the amount specified by --max_cpus . --max_cpus can have a significant effect on the efficiency of Bactopia So for example if you have a system with 24-cores. This command, bactopia ... --max_cpus 24 , says for any particular task, use 24 slots . Nextflow will give tasks in Bactopia 24 slots out of 24 available (24-core machine). In other words the queue can one have one task running at once because each task occupies 24 slots. On the other hand, bactopia ... --max_cpus 4 says for any particular task, use 4 slots . Now, for Nextflow will give each task 4 slots out of 24 slots. Which means 6 tasks can be running at once. This can lead to much better efficiency because less jobs are stuck waiting in line. There are some tasks in Bactopia that will only ever use a single slot because they are single-core tasks. But for example the annotation step will always use the number of slots specified by --max_cpus . If the --max_cpus is too high, the annotation will get bogged down, which causes tasks dependent on annotation to also get bogged down. When in doubt --max_cpus 4 is a safe value. This is also the default value for Bactopia.","title":"--max_cpus"},{"location":"usage-basic/#-qs","text":"The -qs parameter is short for queue size . As described above for --max_cpus , the default value for -qs is set to the total number of cores on the system. This parameter allows you to adjust the maximum number of cores Nextflow can use at any given moment. -qs allows you to play nicely on shared resources From the example above, if you have a system with 24-cores. The default queue size if 24 slots. bactopia ... --max_cpus 4 says for any particular task, use a maximum of 4 slots . Nextflow will give each task 4 slots out of 24 slots. But there might be other people also using the server. bactopia ... --max_cpus 4 -qs 12 says for any particular task, use a maximum of 4 slots, but don't use more than 12 slots . Nextflow will give each task 4 slots out of 12 slots. Now instead of using all the cores on the server, the maximum that can be used in 12. -qs might need adjusting for job schedulers. The default value for -qs is set to 100 when using a job scheduler (e.g. SLURM, AWS Batch). There may be times when you need adjust this to meet your needs. For example, if using AWS Batch you might want to increase the value to have more jobs processed at once (e.g. 100 vs 500).","title":"-qs"},{"location":"usage-basic/#-genome_size","text":"Throughout the Bactopia workflow a genome size is used for various tasks. By default, a genome size is estimated using Mash. However, users can provide their own value for genome size, use values based on Species Specific Datasets , or completely disable it. Value Result empty Mash is used to estimate the genome size integer Uses the genome size (e.g. --genome_size 2800000 ) provided by the user 0 Read error correct and read subsampling will be disabled. min Requires --species , the minimum completed genome size for a species is used median Requires --species , the median completed genome size for a species is used mean Requires --species , the mean completed genome size for a species is used max Requires --species , the maximum completed genome size for a species is used Mash may not be the most accurate estimate Mash is very convenient to quickly estimate a genome size, but it may not be the most accurate in all cases and will differ between samples. It is recommended that when possible a known genome size or one based off completed genomes should be used.","title":"--genome_size"},{"location":"usage-basic/#-nfconfig","text":"A key feature of Nextflow is you can provide your own config files. What this boils down to you can easily set Bactopia to run on your environment. With --nfconfig you can tell Bactopia to import your config file. --nfconfig has been set up so that it is the last config file to be loaded by Nextflow. This means that if your config file contains variables (e.g. params or profiles) already set they will be overwritten by your values. Nextflow goes into great details on how to create configuration files. Please check the following links for adjustsments you be interested in making. Scope Description env Set any environment variables that might be required params Change the default values of command line arguments process Adjust perprocess configurations such as containers, conda envs, or resource usage profile Create predefined profiles for your Executor There are many other scopes that you might be interested in checking out. You are most like going to want to create a custom profile. By doing so you can specify it at runtime ( -profile myProfile ) and Nextflow will be excuted based on that profile. Often times your custom profile will include information on the executor (queues, allocations, apths, etc...). If you need help please reach out ! If you're using the standard profile (did not specify -profile 'xyz') this might not be necessary.","title":"--nfconfig"},{"location":"usage-basic/#-resume","text":"Bactopia relies on Nextflow's Resume Feature to resume runs. You can tell Bactopia to resume by adding -resume to your command line. When -resume is used, Nextflow will review the cache and determine if the previous run is resumable. If the previous run is not resumable, execution will start at the beginning.","title":"-resume"},{"location":"usage-basic/#-keep_all_files","text":"In some processes, Bactopia will delete large intermediate files (e.g. multiple uncompressed FASTQs) only after a process successfully completes. Since this a per-process function, it does not affect Nextflow's ability to resume ( -resume )a workflow. You can deactivate this feature using --keep_all_files . Please, keep in mind the work directory is already large, this will make it 2-3 times larger.","title":"--keep_all_files"},{"location":"usage-complete/","text":"Runtime Parameters \u00b6 Bactopia includes numerous (180+) configurable parameters. Now that doesn't mean you need to go in there and start changing them, but there will be times when you might have to. By exposing all these parameters, you can easily change them to fit your needs. In the following sections, these parameters are grouped by which Nextflow process they are applicable to. The description and default values for these parameters were taken from the program to which they apply. Not all of the available parameters for each and every program are available If you see a tool in which a parameter has not been made available, please make a suggestion! Required Parameters \u00b6 The required parameters depends on how many samples are to be proccessed. You can learn more about which approach to take at Specifying Input FASTQs . --------------------------------------------- _ _ _ | |__ __ _ ___| |_ ___ _ __ (_) __ _ | '_ \\ / _` |/ __| __/ _ \\| '_ \\| |/ _` | | |_) | (_| | (__| || (_) | |_) | | (_| | |_.__/ \\__,_|\\___|\\__\\___/| .__/|_|\\__,_| |_| bactopia v2.x.x Bactopia is a flexible pipeline for complete analysis of bacterial genomes. --------------------------------------------- Typical pipeline command: bactopia --samples samples.txt --datasets datasets/ --species 'Staphylococcus aureus' Required Parameters ### For Procesessing Multiple Samples --samples [string] A FOFN with sample names and paths to FASTQ/FASTAs to process ### For Processing A Single Sample --R1 [string] First set of compressed (gzip) paired-end FASTQ reads (requires --R2 and --sample) --R2 [string] Second set of compressed (gzip) paired-end FASTQ reads (requires --R1 and --sample) --SE [string] Compressed (gzip) single-end FASTQ reads (requires --sample) --ont [boolean] Treat `--SE` as long reads for analysis. (requires --sample) --hybrid [boolean] Treat `--SE` as long reads for hybrid assembly. (requires --R1, --R2, --SE and --sample) --sample [string] Sample name to use for the input sequences ### For Downloading from SRA/ENA or NCBI Assembly **Note: Downloaded assemblies will have error free Illumina reads simulated for processing.** --accessions [string] A file containing ENA/SRA Experiment accessions or NCBI Assembly accessions to processed --accession [string] Sample name to use for the input sequences ### For Processing an Assembly **Note: Assemblies will have error free Illumina reads simulated for processing.** --assembly [string] A assembled genome in compressed FASTA format. (requires --sample) Dataset Parameters \u00b6 If you followed the steps in Build Datasets , you can use the following parameters to point Bactopia to you datasets. Dataset Parameters --datasets [string] The path to datasets that have already been set up --species [string] Name of species for species-specific dataset to use --ask_merlin [boolean] Ask Merlin to execute species specific Bactopia Tools based on Mash distances --coverage [integer] Reduce samples to a given coverage [default: 100] --genome_size [string] Expected genome size (bp) for all samples, a value of '0' will disable read error correction and read subsampling, otherwise estimate with Mash [default: 0] --available_datasets [boolean] Print a list of available datasets found based on location given by `--datasets` --genome_size \u00b6 Throughout the Bactopia workflow a genome size is used for various tasks. By default, a genome size is estimated using Mash. However, users can provide their own value for genome size, use values based on Species Specific Datasets , or completely disable it. Value Result empty Mash is used to estimate the genome size integer Uses the genome size (e.g. --genome_size 2800000 ) provided by the user 0 Read error correct and read subsampling will be disabled. min Requires --species , the minimum completed genome size for a species is used median Requires --species , the median completed genome size for a species is used mean Requires --species , the mean completed genome size for a species is used max Requires --species , the maximum completed genome size for a species is used Mash may not be the most accurate estimate Mash is very convenient to quickly estimate a genome size, but it may not be the most accurate in all cases and will differ between samples. It is recommended that when possible a known genome size or one based off completed genomes should be used. Gather Samples Parameters \u00b6 --skip_fastq_check [boolean] Skip minimum requirement checks for input FASTQs --min_basepairs [integer] The minimum amount of basepairs required to continue downstream analyses. [default: 2241820] --min_reads [integer] The minimum amount of reads required to continue downstream analyses. [default: 7472] --min_coverage [integer] The minimum amount of coverage required to continue downstream analyses. [default: 10] --min_proportion [number] The minimum proportion of basepairs for paired-end reads to continue downstream analyses. [default: 0.5] --min_genome_size [integer] The minimum estimated genome size allowed for the input sequence to continue downstream analyses. [default: 100000] --max_genome_size [integer] The maximum estimated genome size allowed for the input sequence to continue downstream analyses. [default: 18040666] --attempts [integer] Maximum times to attempt downloads [default: 3] --use_ena [boolean] Download FASTQs from ENA --no_cache [boolean] Skip caching the assembly summary file from ncbi-genome-download QC Reads Parameters \u00b6 QC Reads Parameters --skip_qc [boolean] The QC step will be skipped and it will be assumed the inputs sequences have already been QCed. --skip_qc_plots [boolean] QC Plot creation by FastQC or Nanoplot will be skipped --skip_error_correction [boolean] FLASH error correction of reads will be skipped. --adapters [string] A FASTA file containing adapters to remove --adapter_k [integer] Kmer length used for finding adapters. [default: 23] --phix [string] phiX174 reference genome to remove --phix_k [integer] Kmer length used for finding phiX174. [default: 31] --ktrim [string] Trim reads to remove bases matching reference kmers [default: r] --mink [integer] Look for shorter kmers at read tips down to this length, when k-trimming or masking. [default: 11] --hdist [integer] Maximum Hamming distance for ref kmers (subs only) [default: 1] --tpe [string] When kmer right-trimming, trim both reads to the minimum length of either [default: t] --tbo [string] Trim adapters based on where paired reads overlap [default: t] --qtrim [string] Trim read ends to remove bases with quality below trimq. [default: rl] --trimq [integer] Regions with average quality BELOW this will be trimmed if qtrim is set to something other than f [default: 6] --maq [integer] Reads with average quality (after trimming) below this will be discarded [default: 10] --minlength [integer] Reads shorter than this after trimming will be discarded [default: 35] --ftm [integer] If positive, right-trim length to be equal to zero, modulo this number [default: 5] --tossjunk [string] Discard reads with invalid characters as bases [default: t] --qout [string] PHRED offset to use for output FASTQs [default: 33] --maxcor [integer] Max number of corrections within a 20bp window [default: 1] --sampleseed [integer] Set to a positive number to use as the random number generator seed for sampling [default: 42] --ont_minlength [integer] ONT Reads shorter than this will be discarded [default: 1000] --ont_minqual [integer] Minimum average read quality filter of ONT reads --porechop_opts [integer] Extra Porechop options in quotes --nanoplot_opts [integer] Extra NanoPlot options in quotes --bbduk_opts [integer] Extra BBDuk options in quotes Assembly Parameters \u00b6 Assemble Genome Parameters --shovill_assembler [string] Assembler to be used by Shovill [default: skesa] --dragonflye_assembler [string] Assembler to be used by Dragonflye [default: flye] --use_unicycler [boolean] Use unicycler for paired end assembly --min_contig_len [integer] Minimum contig length <0=AUTO> [default: 500] --min_contig_cov [integer] Minimum contig coverage <0=AUTO> [default: 2] --contig_namefmt [string] Format of contig FASTA IDs in 'printf' style --shovill_opts [string] Extra assembler options in quotes --shovill_kmers [string] K-mers to use <blank=AUTO> --trim [boolean] Enable adaptor trimming --no_stitch [boolean] Disable read stitching for paired-end reads --no_corr [boolean] Disable post-assembly correction --unicycler_mode [string] Bridging mode used by Unicycler [default: normal] --min_polish_size [integer] Contigs shorter than this value (bp) will not be polished using Pilon [default: 10000] --min_component_size [integer] Graph dead ends smaller than this size (bp) will be removed from the final graph [default: 1000] --min_dead_end_size [integer] Graph dead ends smaller than this size (bp) will be removed from the final graph [default: 1000] --medaka_model [string] The model to use for Medaka polishing --medaka_steps [integer] The number of Medaka polishing steps to conduct --racon_steps [integer] The number of Racon polishing steps to conduct [default: 1] --no_polish [boolean] Skip the assembly polishing step --no_miniasm [boolean] Skip miniasm+Racon bridging --no_rotate [boolean] Do not rotate completed replicons to start at a standard gene --reassemble [boolean] If reads were simulated, they will be used to create a new assembly. Assembly QC Parameters \u00b6 Assembly QC Parameters --run_checkm [boolean] Run CheckM in the assembly QC step --checkm_unique [integer] Minimum number of unique phylogenetic markers required to use lineage-specific marker set. [default: 10] --checkm_multi [integer] Maximum number of multi-copy phylogenetic markers before defaulting to domain-level marker set. [default: 10] --aai_strain [number] AAI threshold used to identify strain heterogeneity [default: 0.9] --checkm_length [number] Percent overlap between target and query [default: 0.7] --full_tree [boolean] Use the full tree (requires ~40GB of memory) for determining lineage of each bin. --skip_pseudogene_correction [boolean] Skip identification and filtering of pseudogene --ignore_thresholds [boolean] Ignore model-specific score thresholds --checkm_ali [boolean] Generate HMMER alignment file for each bin --checkm_nt [boolean] Generate nucleotide gene sequences for each bin --force_domain [boolean] Use domain-level sets for all bins --no_refinement [boolean] Do not perform lineage-specific marker set refinement --individual_markers [boolean] Treat marker as independent --skip_adj_correction [boolean] Do not exclude adjacent marker genes when estimating contamination --contig_thresholds [string] Comma-separated list of contig length thresholds [default: 0,1000,10000,100000,250000,1000000] --plots_format [string] Save plots in specified format [default: pdf] Annotate Genome Parameters \u00b6 Annotate Genome Parameters --compliant [boolean] Force Genbank/ENA/DDJB compliance --centre [string] Sequencing centre ID [default: Bactopia] --addmrna [boolean] Add 'mRNA' features for each 'CDS' feature --rawproduct [boolean] Do not clean up /product annotation --cdsrnaolap [boolean] Allow [tr]RNA to overlap CDS --prokka_evalue [string] Similarity e-value cut-off [default: 1e-09] --prokka_coverage [integer] Minimum coverage on query protein [default: 80] --nogenes [boolean] Do not add 'gene' features for each 'CDS' feature --norrna [boolean] Don't run rRNA search --notrna [boolean] Don't run tRNA search --rnammer [boolean] Prefer RNAmmer over Barrnap for rRNA prediction --rfam [boolean] Enable searching for ncRNAs with Infernal+Rfam --skip_prodigal_tf [boolean] If a Prodigal training file was found, it will not be used Minmer Sketch Parameters \u00b6 Minmer Sketch Parameters --count_31mers [boolean] Enable 31-mer counting with McCortex --keep_singletons [boolean] Keep all counted 31-mers --sketch_size [integer] Sketch size. Each sketch will have at most this many non-redundant min-hashes. [default: 10000] --sourmash_scale [integer] Choose number of hashes as 1 in FRACTION of input k-mers [default: 10000] Minmer Query Parameters \u00b6 Minmer Query Parameters --no_winner_take_all [boolean] Disable winner-takes-all strategy for identity estimates --screen_i [number] Minimum identity to report. [default: 0.8] Antimicrobial Resistance Parameters \u00b6 Antimicrobial Resistance Parameters --skip_amr [boolean] Skip running AMRFinder+. --amr_plus [boolean] Add the plus genes to the report --amr_report_common [boolean] Suppress proteins common to a taxonomy group --amr_organism [string] Taxonomy group: Campylobacter, Escherichia, Klebsiella, Salmonella, Staphylococcus, Vibrio --amr_ident_min [integer] Minimum identity for nucleotide hit (0..1). -1 means use a curated threshold if it exists and 0.9 otherwise [default: -1] --amr_coverage_min [number] Minimum coverage of the reference protein [default: 0.5] --amr_translation_table [integer] NCBI genetic code for translated BLAST [default: 11] BLAST Parameters \u00b6 Blast Parameters --perc_identity [integer] Percent identity [default: 50] --qcov_hsp_perc [integer] Percent query coverage per hsp [default: 50] --max_target_seqs [integer] Maximum number of aligned sequences to keep [default: 2000] Call Variant Parameters \u00b6 Call Variants Parameters --mapqual [integer] Minimum read mapping quality to consider [default: 60] --basequal [integer] Minimum base quality to consider [default: 13] --mincov [integer] Minimum site depth to for calling alleles [default: 10] --minfrac [integer] Minimum proportion for variant evidence (0=AUTO) --minqual [integer] Minimum QUALITY in VCF column 6 [default: 100] --maxsoft [integer] Maximum soft clipping to allow [default: 10] --bwaopt [string] Extra BWA MEM options, eg. -x pacbio --fbopt [string] Extra Freebayes options, eg. --read-snp-limit 2 --random_tie_break [boolean] On references with matching distances, randomly select one. --disable_auto_variants [boolean] Disable automatic selection of reference genome based on Mash distances Mapping Parameters \u00b6 Mapping Query Parameters --keep_unmapped_reads [boolean] Keep unmapped reads, this does not affect variant calling. --bwa_mem_opts [string] Extra BWA MEM options --bwa_aln_opts [string] Extra BWA ALN options --bwa_samse_opts [string] Extra BWA SAMSE options --bwa_sampe_opts [string] Extra BWA SAMPE options --bwa_n [integer] Maximum number of alignments to output in the XA tag for reads paired properly. [default: 9999] Sequence Type Parameters \u00b6 Sequence Type Parameters --mlst_nucmer_min_id [integer] Minimum alignment identity (delta-filter -i) [default: 90] --mlst_nucmer_min_len [integer] Minimum alignment identity (delta-filter -i) [default: 20] --mlst_nucmer_breaklen [integer] Value to use for -breaklen when running nucmer [default: 200] --mlst_assembly_cov [integer] Target read coverage when sampling reads for assembly [default: 50] --mlst_min_scaff_depth [integer] Minimum number of read pairs needed as evidence for scaffold link between two contigs [default: 10] --mlst_spades_options [string] Extra options to pass to Spades assembler --mlst_assembled_threshold [number] If proportion of gene assembled (regardless of into how many contigs) is at least this value then the flag gene_assembled is set [default: 0.95] --mlst_gene_nt_extend [integer] Max number of nucleotides to extend ends of gene matches to look for start/stop codons [default: 30] --mlst_unique_threshold [number] If proportion of bases in gene assembled more than once is <= this value, then the flag unique_contig is set [default: 0.03] --mlst_ariba_no_clean [boolean] Do not clean up intermediate files created by Ariba. Optional Parameters \u00b6 Optional Parameters --outdir [string] Base directory to write results to [default: ./] --run_name [string] Name of the directory to hold results [default: bactopia] --skip_compression [boolean] Ouput files will not be compressed --keep_all_files [boolean] Keeps all analysis files created --keep_all_files \u00b6 In some processes, Bactopia will delete large intermediate files (e.g. multiple uncompressed FASTQs) only after a process successfully completes. Since this a per-process function, it does not affect Nextflow's ability to resume ( -resume )a workflow. You can deactivate this feature using --keep_all_files . Please, keep in mind the work directory is already large, this will make it 2-3 times larger. Max Job Request Parameters \u00b6 Max Job Request Parameters --max_retry [integer] Maximum times to retry a process before allowing it to fail. [default: 3] --max_cpus [integer] Maximum number of CPUs that can be requested for any single job. [default: 4] --max_memory [integer] Maximum amount of memory (in GB) that can be requested for any single job. [default: 32] --max_time [integer] Maximum amount of time (in minutes) that can be requested for any single job. [default: 120] --max_downloads [integer] Maximum number of samples to download at a time [default: 3] --max_cpus \u00b6 At execution, Nextflow creates a queue and the number of slots in the queue is determined by the total number of cores on the system. So if you have a 24-core system, that means Nextflow will have a queue with 24-slots available. This feature kind of makes --max_cpus a little misleading. Typically when you give --max_cpus you are saying \"use this amount of cpus\" . But that is not the case for Nextflow and Bactopia. When you use --max_cpus what you are actually saying is \"for any particular task, use this amount of slots\" . Commands within a task processors will use the amount specified by --max_cpus . --max_cpus can have a significant effect on the efficiency of Bactopia So for example if you have a system with 24-cores. This command, bactopia ... --max_cpus 24 , says for any particular task, use 24 slots . Nextflow will give tasks in Bactopia 24 slots out of 24 available (24-core machine). In other words the queue can one have one task running at once because each task occupies 24 slots. On the other hand, bactopia ... --max_cpus 4 says for any particular task, use 4 slots . Now, for Nextflow will give each task 4 slots out of 24 slots. Which means 6 tasks can be running at once. This can lead to much better efficiency because less jobs are stuck waiting in line. There are some tasks in Bactopia that will only ever use a single slot because they are single-core tasks. But for example the annotation step will always use the number of slots specified by --max_cpus . If the --max_cpus is too high, the annotation will get bogged down, which causes tasks dependent on annotation to also get bogged down. When in doubt --max_cpus 4 is a safe value. This is also the default value for Bactopia. -qs \u00b6 The -qs parameter is short for queue size . As described above for --max_cpus , the default value for -qs is set to the total number of cores on the system. This parameter allows you to adjust the maximum number of cores Nextflow can use at any given moment. -qs allows you to play nicely on shared resources From the example above, if you have a system with 24-cores. The default queue size if 24 slots. bactopia ... --max_cpus 4 says for any particular task, use a maximum of 4 slots . Nextflow will give each task 4 slots out of 24 slots. But there might be other people also using the server. bactopia ... --max_cpus 4 -qs 12 says for any particular task, use a maximum of 4 slots, but don't use more than 12 slots . Nextflow will give each task 4 slots out of 12 slots. Now instead of using all the cores on the server, the maximum that can be used in 12. -qs might need adjusting for job schedulers. The default value for -qs is set to 100 when using a job scheduler (e.g. SLURM, AWS Batch). There may be times when you need adjust this to meet your needs. For example, if using AWS Batch you might want to increase the value to have more jobs processed at once (e.g. 100 vs 500). Nextflow Configuration Parameters \u00b6 Nextflow Configuration Parameters --nfconfig [string] A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode [string] Method used to save pipeline results to output directory. [default: copy] --infodir [string] Directory to keep pipeline Nextflow logs and reports. [default: ${params.outdir}/pipeline_info] --force [boolean] Nextflow will overwrite existing output files. --cleanup_workdir [boolean] After Bactopia is successfully executed, the `work` directory will be deleted. --nfconfig \u00b6 A key feature of Nextflow is you can provide your own config files. What this boils down to you can easily set Bactopia to run on your environment. With --nfconfig you can tell Bactopia to import your config file. --nfconfig has been set up so that it is the last config file to be loaded by Nextflow. This means that if your config file contains variables (e.g. params or profiles) already set they will be overwritten by your values. Nextflow goes into great details on how to create configuration files. Please check the following links for adjustsments you be interested in making. Scope Description env Set any environment variables that might be required params Change the default values of command line arguments process Adjust perprocess configurations such as containers, conda envs, or resource usage profile Create predefined profiles for your Executor There are many other scopes that you might be interested in checking out. You are most like going to want to create a custom profile. By doing so you can specify it at runtime ( -profile myProfile ) and Nextflow will be excuted based on that profile. Often times your custom profile will include information on the executor (queues, allocations, apths, etc...). If you need help please reach out ! If you're using the standard profile (did not specify -profile 'xyz') this might not be necessary. --cleanup_workdir \u00b6 After you run Bactopia, you will notice a directory called work . This directory is where Nextflow runs all the processes and stores the intermediate files. After a process completes successfully, the appropriate results are pulled out and placed in the sample's result folder. The work directory can grow very large very quickly! Please keep this in mind when using Bactopia. To help prevent the build up of the work directory you can use --cleanup_workdir to delete intermediate files after a successful execution of Bactopia. Bactopia and Bactopia Tools use separate work directories Inside the work directory there will be separate subfolders that correspond to a Bactopia run or a specific Bactopia Tool run. This allows you to more easily identify which are ok to delete. The work directory is always ok to delete after a successful run. -resume \u00b6 Bactopia relies on Nextflow's Resume Feature to resume runs. You can tell Bactopia to resume by adding -resume to your command line. When -resume is used, Nextflow will review the cache and determine if the previous run is resumable. If the previous run is not resumable, execution will start at the beginning. Nextflow Profile Parameters \u00b6 Nextflow Profile Parameters --condadir [string] Directory to Nextflow should use for Conda environments --registry [string] Docker registry to pull containers from. [default: dockerhub] --singularity_cache [string] Directory where remote Singularity images are stored. --singularity_pull_docker_container [boolean] Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild [boolean] Force overwrite of existing pre-built environments. --queue [string] Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) [default: general,high-memory] --cluster_opts [string] Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch [boolean] All intermediate files created on worker nodes of will be transferred to the head node. Helpful Parameters \u00b6 Helpful Parameters --monochrome_logs [boolean] Do not use coloured log outputs. --nfdir [boolean] Print directory Nextflow has pulled Bactopia to --sleep_time [integer] The amount of time (seconds) Nextflow will wait after setting up datasets before execution. [default: 5] --validate_params [boolean] Boolean whether to validate parameters against the schema at runtime [default: true] --help [boolean] Display help text. --wf [string] Specify which workflow or Bactopia Tool to execute [default: bactopia] --list_wfs [boolean] List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params [boolean] Show all params when using `--help` --help_all [boolean] An alias for --help --show_hidden_params --version [boolean] Display version text.","title":"Complete Usage"},{"location":"usage-complete/#runtime-parameters","text":"Bactopia includes numerous (180+) configurable parameters. Now that doesn't mean you need to go in there and start changing them, but there will be times when you might have to. By exposing all these parameters, you can easily change them to fit your needs. In the following sections, these parameters are grouped by which Nextflow process they are applicable to. The description and default values for these parameters were taken from the program to which they apply. Not all of the available parameters for each and every program are available If you see a tool in which a parameter has not been made available, please make a suggestion!","title":"Runtime Parameters"},{"location":"usage-complete/#required-parameters","text":"The required parameters depends on how many samples are to be proccessed. You can learn more about which approach to take at Specifying Input FASTQs . --------------------------------------------- _ _ _ | |__ __ _ ___| |_ ___ _ __ (_) __ _ | '_ \\ / _` |/ __| __/ _ \\| '_ \\| |/ _` | | |_) | (_| | (__| || (_) | |_) | | (_| | |_.__/ \\__,_|\\___|\\__\\___/| .__/|_|\\__,_| |_| bactopia v2.x.x Bactopia is a flexible pipeline for complete analysis of bacterial genomes. --------------------------------------------- Typical pipeline command: bactopia --samples samples.txt --datasets datasets/ --species 'Staphylococcus aureus' Required Parameters ### For Procesessing Multiple Samples --samples [string] A FOFN with sample names and paths to FASTQ/FASTAs to process ### For Processing A Single Sample --R1 [string] First set of compressed (gzip) paired-end FASTQ reads (requires --R2 and --sample) --R2 [string] Second set of compressed (gzip) paired-end FASTQ reads (requires --R1 and --sample) --SE [string] Compressed (gzip) single-end FASTQ reads (requires --sample) --ont [boolean] Treat `--SE` as long reads for analysis. (requires --sample) --hybrid [boolean] Treat `--SE` as long reads for hybrid assembly. (requires --R1, --R2, --SE and --sample) --sample [string] Sample name to use for the input sequences ### For Downloading from SRA/ENA or NCBI Assembly **Note: Downloaded assemblies will have error free Illumina reads simulated for processing.** --accessions [string] A file containing ENA/SRA Experiment accessions or NCBI Assembly accessions to processed --accession [string] Sample name to use for the input sequences ### For Processing an Assembly **Note: Assemblies will have error free Illumina reads simulated for processing.** --assembly [string] A assembled genome in compressed FASTA format. (requires --sample)","title":"Required Parameters"},{"location":"usage-complete/#dataset-parameters","text":"If you followed the steps in Build Datasets , you can use the following parameters to point Bactopia to you datasets. Dataset Parameters --datasets [string] The path to datasets that have already been set up --species [string] Name of species for species-specific dataset to use --ask_merlin [boolean] Ask Merlin to execute species specific Bactopia Tools based on Mash distances --coverage [integer] Reduce samples to a given coverage [default: 100] --genome_size [string] Expected genome size (bp) for all samples, a value of '0' will disable read error correction and read subsampling, otherwise estimate with Mash [default: 0] --available_datasets [boolean] Print a list of available datasets found based on location given by `--datasets`","title":"Dataset Parameters"},{"location":"usage-complete/#-genome_size","text":"Throughout the Bactopia workflow a genome size is used for various tasks. By default, a genome size is estimated using Mash. However, users can provide their own value for genome size, use values based on Species Specific Datasets , or completely disable it. Value Result empty Mash is used to estimate the genome size integer Uses the genome size (e.g. --genome_size 2800000 ) provided by the user 0 Read error correct and read subsampling will be disabled. min Requires --species , the minimum completed genome size for a species is used median Requires --species , the median completed genome size for a species is used mean Requires --species , the mean completed genome size for a species is used max Requires --species , the maximum completed genome size for a species is used Mash may not be the most accurate estimate Mash is very convenient to quickly estimate a genome size, but it may not be the most accurate in all cases and will differ between samples. It is recommended that when possible a known genome size or one based off completed genomes should be used.","title":"--genome_size"},{"location":"usage-complete/#gather-samples-parameters","text":"--skip_fastq_check [boolean] Skip minimum requirement checks for input FASTQs --min_basepairs [integer] The minimum amount of basepairs required to continue downstream analyses. [default: 2241820] --min_reads [integer] The minimum amount of reads required to continue downstream analyses. [default: 7472] --min_coverage [integer] The minimum amount of coverage required to continue downstream analyses. [default: 10] --min_proportion [number] The minimum proportion of basepairs for paired-end reads to continue downstream analyses. [default: 0.5] --min_genome_size [integer] The minimum estimated genome size allowed for the input sequence to continue downstream analyses. [default: 100000] --max_genome_size [integer] The maximum estimated genome size allowed for the input sequence to continue downstream analyses. [default: 18040666] --attempts [integer] Maximum times to attempt downloads [default: 3] --use_ena [boolean] Download FASTQs from ENA --no_cache [boolean] Skip caching the assembly summary file from ncbi-genome-download","title":"Gather Samples Parameters"},{"location":"usage-complete/#qc-reads-parameters","text":"QC Reads Parameters --skip_qc [boolean] The QC step will be skipped and it will be assumed the inputs sequences have already been QCed. --skip_qc_plots [boolean] QC Plot creation by FastQC or Nanoplot will be skipped --skip_error_correction [boolean] FLASH error correction of reads will be skipped. --adapters [string] A FASTA file containing adapters to remove --adapter_k [integer] Kmer length used for finding adapters. [default: 23] --phix [string] phiX174 reference genome to remove --phix_k [integer] Kmer length used for finding phiX174. [default: 31] --ktrim [string] Trim reads to remove bases matching reference kmers [default: r] --mink [integer] Look for shorter kmers at read tips down to this length, when k-trimming or masking. [default: 11] --hdist [integer] Maximum Hamming distance for ref kmers (subs only) [default: 1] --tpe [string] When kmer right-trimming, trim both reads to the minimum length of either [default: t] --tbo [string] Trim adapters based on where paired reads overlap [default: t] --qtrim [string] Trim read ends to remove bases with quality below trimq. [default: rl] --trimq [integer] Regions with average quality BELOW this will be trimmed if qtrim is set to something other than f [default: 6] --maq [integer] Reads with average quality (after trimming) below this will be discarded [default: 10] --minlength [integer] Reads shorter than this after trimming will be discarded [default: 35] --ftm [integer] If positive, right-trim length to be equal to zero, modulo this number [default: 5] --tossjunk [string] Discard reads with invalid characters as bases [default: t] --qout [string] PHRED offset to use for output FASTQs [default: 33] --maxcor [integer] Max number of corrections within a 20bp window [default: 1] --sampleseed [integer] Set to a positive number to use as the random number generator seed for sampling [default: 42] --ont_minlength [integer] ONT Reads shorter than this will be discarded [default: 1000] --ont_minqual [integer] Minimum average read quality filter of ONT reads --porechop_opts [integer] Extra Porechop options in quotes --nanoplot_opts [integer] Extra NanoPlot options in quotes --bbduk_opts [integer] Extra BBDuk options in quotes","title":"QC Reads Parameters"},{"location":"usage-complete/#assembly-parameters","text":"Assemble Genome Parameters --shovill_assembler [string] Assembler to be used by Shovill [default: skesa] --dragonflye_assembler [string] Assembler to be used by Dragonflye [default: flye] --use_unicycler [boolean] Use unicycler for paired end assembly --min_contig_len [integer] Minimum contig length <0=AUTO> [default: 500] --min_contig_cov [integer] Minimum contig coverage <0=AUTO> [default: 2] --contig_namefmt [string] Format of contig FASTA IDs in 'printf' style --shovill_opts [string] Extra assembler options in quotes --shovill_kmers [string] K-mers to use <blank=AUTO> --trim [boolean] Enable adaptor trimming --no_stitch [boolean] Disable read stitching for paired-end reads --no_corr [boolean] Disable post-assembly correction --unicycler_mode [string] Bridging mode used by Unicycler [default: normal] --min_polish_size [integer] Contigs shorter than this value (bp) will not be polished using Pilon [default: 10000] --min_component_size [integer] Graph dead ends smaller than this size (bp) will be removed from the final graph [default: 1000] --min_dead_end_size [integer] Graph dead ends smaller than this size (bp) will be removed from the final graph [default: 1000] --medaka_model [string] The model to use for Medaka polishing --medaka_steps [integer] The number of Medaka polishing steps to conduct --racon_steps [integer] The number of Racon polishing steps to conduct [default: 1] --no_polish [boolean] Skip the assembly polishing step --no_miniasm [boolean] Skip miniasm+Racon bridging --no_rotate [boolean] Do not rotate completed replicons to start at a standard gene --reassemble [boolean] If reads were simulated, they will be used to create a new assembly.","title":"Assembly Parameters"},{"location":"usage-complete/#assembly-qc-parameters","text":"Assembly QC Parameters --run_checkm [boolean] Run CheckM in the assembly QC step --checkm_unique [integer] Minimum number of unique phylogenetic markers required to use lineage-specific marker set. [default: 10] --checkm_multi [integer] Maximum number of multi-copy phylogenetic markers before defaulting to domain-level marker set. [default: 10] --aai_strain [number] AAI threshold used to identify strain heterogeneity [default: 0.9] --checkm_length [number] Percent overlap between target and query [default: 0.7] --full_tree [boolean] Use the full tree (requires ~40GB of memory) for determining lineage of each bin. --skip_pseudogene_correction [boolean] Skip identification and filtering of pseudogene --ignore_thresholds [boolean] Ignore model-specific score thresholds --checkm_ali [boolean] Generate HMMER alignment file for each bin --checkm_nt [boolean] Generate nucleotide gene sequences for each bin --force_domain [boolean] Use domain-level sets for all bins --no_refinement [boolean] Do not perform lineage-specific marker set refinement --individual_markers [boolean] Treat marker as independent --skip_adj_correction [boolean] Do not exclude adjacent marker genes when estimating contamination --contig_thresholds [string] Comma-separated list of contig length thresholds [default: 0,1000,10000,100000,250000,1000000] --plots_format [string] Save plots in specified format [default: pdf]","title":"Assembly QC Parameters"},{"location":"usage-complete/#annotate-genome-parameters","text":"Annotate Genome Parameters --compliant [boolean] Force Genbank/ENA/DDJB compliance --centre [string] Sequencing centre ID [default: Bactopia] --addmrna [boolean] Add 'mRNA' features for each 'CDS' feature --rawproduct [boolean] Do not clean up /product annotation --cdsrnaolap [boolean] Allow [tr]RNA to overlap CDS --prokka_evalue [string] Similarity e-value cut-off [default: 1e-09] --prokka_coverage [integer] Minimum coverage on query protein [default: 80] --nogenes [boolean] Do not add 'gene' features for each 'CDS' feature --norrna [boolean] Don't run rRNA search --notrna [boolean] Don't run tRNA search --rnammer [boolean] Prefer RNAmmer over Barrnap for rRNA prediction --rfam [boolean] Enable searching for ncRNAs with Infernal+Rfam --skip_prodigal_tf [boolean] If a Prodigal training file was found, it will not be used","title":"Annotate Genome Parameters"},{"location":"usage-complete/#minmer-sketch-parameters","text":"Minmer Sketch Parameters --count_31mers [boolean] Enable 31-mer counting with McCortex --keep_singletons [boolean] Keep all counted 31-mers --sketch_size [integer] Sketch size. Each sketch will have at most this many non-redundant min-hashes. [default: 10000] --sourmash_scale [integer] Choose number of hashes as 1 in FRACTION of input k-mers [default: 10000]","title":"Minmer Sketch Parameters"},{"location":"usage-complete/#minmer-query-parameters","text":"Minmer Query Parameters --no_winner_take_all [boolean] Disable winner-takes-all strategy for identity estimates --screen_i [number] Minimum identity to report. [default: 0.8]","title":"Minmer Query Parameters"},{"location":"usage-complete/#antimicrobial-resistance-parameters","text":"Antimicrobial Resistance Parameters --skip_amr [boolean] Skip running AMRFinder+. --amr_plus [boolean] Add the plus genes to the report --amr_report_common [boolean] Suppress proteins common to a taxonomy group --amr_organism [string] Taxonomy group: Campylobacter, Escherichia, Klebsiella, Salmonella, Staphylococcus, Vibrio --amr_ident_min [integer] Minimum identity for nucleotide hit (0..1). -1 means use a curated threshold if it exists and 0.9 otherwise [default: -1] --amr_coverage_min [number] Minimum coverage of the reference protein [default: 0.5] --amr_translation_table [integer] NCBI genetic code for translated BLAST [default: 11]","title":"Antimicrobial Resistance Parameters"},{"location":"usage-complete/#blast-parameters","text":"Blast Parameters --perc_identity [integer] Percent identity [default: 50] --qcov_hsp_perc [integer] Percent query coverage per hsp [default: 50] --max_target_seqs [integer] Maximum number of aligned sequences to keep [default: 2000]","title":"BLAST Parameters"},{"location":"usage-complete/#call-variant-parameters","text":"Call Variants Parameters --mapqual [integer] Minimum read mapping quality to consider [default: 60] --basequal [integer] Minimum base quality to consider [default: 13] --mincov [integer] Minimum site depth to for calling alleles [default: 10] --minfrac [integer] Minimum proportion for variant evidence (0=AUTO) --minqual [integer] Minimum QUALITY in VCF column 6 [default: 100] --maxsoft [integer] Maximum soft clipping to allow [default: 10] --bwaopt [string] Extra BWA MEM options, eg. -x pacbio --fbopt [string] Extra Freebayes options, eg. --read-snp-limit 2 --random_tie_break [boolean] On references with matching distances, randomly select one. --disable_auto_variants [boolean] Disable automatic selection of reference genome based on Mash distances","title":"Call Variant Parameters"},{"location":"usage-complete/#mapping-parameters","text":"Mapping Query Parameters --keep_unmapped_reads [boolean] Keep unmapped reads, this does not affect variant calling. --bwa_mem_opts [string] Extra BWA MEM options --bwa_aln_opts [string] Extra BWA ALN options --bwa_samse_opts [string] Extra BWA SAMSE options --bwa_sampe_opts [string] Extra BWA SAMPE options --bwa_n [integer] Maximum number of alignments to output in the XA tag for reads paired properly. [default: 9999]","title":"Mapping Parameters"},{"location":"usage-complete/#sequence-type-parameters","text":"Sequence Type Parameters --mlst_nucmer_min_id [integer] Minimum alignment identity (delta-filter -i) [default: 90] --mlst_nucmer_min_len [integer] Minimum alignment identity (delta-filter -i) [default: 20] --mlst_nucmer_breaklen [integer] Value to use for -breaklen when running nucmer [default: 200] --mlst_assembly_cov [integer] Target read coverage when sampling reads for assembly [default: 50] --mlst_min_scaff_depth [integer] Minimum number of read pairs needed as evidence for scaffold link between two contigs [default: 10] --mlst_spades_options [string] Extra options to pass to Spades assembler --mlst_assembled_threshold [number] If proportion of gene assembled (regardless of into how many contigs) is at least this value then the flag gene_assembled is set [default: 0.95] --mlst_gene_nt_extend [integer] Max number of nucleotides to extend ends of gene matches to look for start/stop codons [default: 30] --mlst_unique_threshold [number] If proportion of bases in gene assembled more than once is <= this value, then the flag unique_contig is set [default: 0.03] --mlst_ariba_no_clean [boolean] Do not clean up intermediate files created by Ariba.","title":"Sequence Type Parameters"},{"location":"usage-complete/#optional-parameters","text":"Optional Parameters --outdir [string] Base directory to write results to [default: ./] --run_name [string] Name of the directory to hold results [default: bactopia] --skip_compression [boolean] Ouput files will not be compressed --keep_all_files [boolean] Keeps all analysis files created","title":"Optional Parameters"},{"location":"usage-complete/#-keep_all_files","text":"In some processes, Bactopia will delete large intermediate files (e.g. multiple uncompressed FASTQs) only after a process successfully completes. Since this a per-process function, it does not affect Nextflow's ability to resume ( -resume )a workflow. You can deactivate this feature using --keep_all_files . Please, keep in mind the work directory is already large, this will make it 2-3 times larger.","title":"--keep_all_files"},{"location":"usage-complete/#max-job-request-parameters","text":"Max Job Request Parameters --max_retry [integer] Maximum times to retry a process before allowing it to fail. [default: 3] --max_cpus [integer] Maximum number of CPUs that can be requested for any single job. [default: 4] --max_memory [integer] Maximum amount of memory (in GB) that can be requested for any single job. [default: 32] --max_time [integer] Maximum amount of time (in minutes) that can be requested for any single job. [default: 120] --max_downloads [integer] Maximum number of samples to download at a time [default: 3]","title":"Max Job Request Parameters"},{"location":"usage-complete/#-max_cpus","text":"At execution, Nextflow creates a queue and the number of slots in the queue is determined by the total number of cores on the system. So if you have a 24-core system, that means Nextflow will have a queue with 24-slots available. This feature kind of makes --max_cpus a little misleading. Typically when you give --max_cpus you are saying \"use this amount of cpus\" . But that is not the case for Nextflow and Bactopia. When you use --max_cpus what you are actually saying is \"for any particular task, use this amount of slots\" . Commands within a task processors will use the amount specified by --max_cpus . --max_cpus can have a significant effect on the efficiency of Bactopia So for example if you have a system with 24-cores. This command, bactopia ... --max_cpus 24 , says for any particular task, use 24 slots . Nextflow will give tasks in Bactopia 24 slots out of 24 available (24-core machine). In other words the queue can one have one task running at once because each task occupies 24 slots. On the other hand, bactopia ... --max_cpus 4 says for any particular task, use 4 slots . Now, for Nextflow will give each task 4 slots out of 24 slots. Which means 6 tasks can be running at once. This can lead to much better efficiency because less jobs are stuck waiting in line. There are some tasks in Bactopia that will only ever use a single slot because they are single-core tasks. But for example the annotation step will always use the number of slots specified by --max_cpus . If the --max_cpus is too high, the annotation will get bogged down, which causes tasks dependent on annotation to also get bogged down. When in doubt --max_cpus 4 is a safe value. This is also the default value for Bactopia.","title":"--max_cpus"},{"location":"usage-complete/#-qs","text":"The -qs parameter is short for queue size . As described above for --max_cpus , the default value for -qs is set to the total number of cores on the system. This parameter allows you to adjust the maximum number of cores Nextflow can use at any given moment. -qs allows you to play nicely on shared resources From the example above, if you have a system with 24-cores. The default queue size if 24 slots. bactopia ... --max_cpus 4 says for any particular task, use a maximum of 4 slots . Nextflow will give each task 4 slots out of 24 slots. But there might be other people also using the server. bactopia ... --max_cpus 4 -qs 12 says for any particular task, use a maximum of 4 slots, but don't use more than 12 slots . Nextflow will give each task 4 slots out of 12 slots. Now instead of using all the cores on the server, the maximum that can be used in 12. -qs might need adjusting for job schedulers. The default value for -qs is set to 100 when using a job scheduler (e.g. SLURM, AWS Batch). There may be times when you need adjust this to meet your needs. For example, if using AWS Batch you might want to increase the value to have more jobs processed at once (e.g. 100 vs 500).","title":"-qs"},{"location":"usage-complete/#nextflow-configuration-parameters","text":"Nextflow Configuration Parameters --nfconfig [string] A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode [string] Method used to save pipeline results to output directory. [default: copy] --infodir [string] Directory to keep pipeline Nextflow logs and reports. [default: ${params.outdir}/pipeline_info] --force [boolean] Nextflow will overwrite existing output files. --cleanup_workdir [boolean] After Bactopia is successfully executed, the `work` directory will be deleted.","title":"Nextflow Configuration Parameters"},{"location":"usage-complete/#-nfconfig","text":"A key feature of Nextflow is you can provide your own config files. What this boils down to you can easily set Bactopia to run on your environment. With --nfconfig you can tell Bactopia to import your config file. --nfconfig has been set up so that it is the last config file to be loaded by Nextflow. This means that if your config file contains variables (e.g. params or profiles) already set they will be overwritten by your values. Nextflow goes into great details on how to create configuration files. Please check the following links for adjustsments you be interested in making. Scope Description env Set any environment variables that might be required params Change the default values of command line arguments process Adjust perprocess configurations such as containers, conda envs, or resource usage profile Create predefined profiles for your Executor There are many other scopes that you might be interested in checking out. You are most like going to want to create a custom profile. By doing so you can specify it at runtime ( -profile myProfile ) and Nextflow will be excuted based on that profile. Often times your custom profile will include information on the executor (queues, allocations, apths, etc...). If you need help please reach out ! If you're using the standard profile (did not specify -profile 'xyz') this might not be necessary.","title":"--nfconfig"},{"location":"usage-complete/#-cleanup_workdir","text":"After you run Bactopia, you will notice a directory called work . This directory is where Nextflow runs all the processes and stores the intermediate files. After a process completes successfully, the appropriate results are pulled out and placed in the sample's result folder. The work directory can grow very large very quickly! Please keep this in mind when using Bactopia. To help prevent the build up of the work directory you can use --cleanup_workdir to delete intermediate files after a successful execution of Bactopia. Bactopia and Bactopia Tools use separate work directories Inside the work directory there will be separate subfolders that correspond to a Bactopia run or a specific Bactopia Tool run. This allows you to more easily identify which are ok to delete. The work directory is always ok to delete after a successful run.","title":"--cleanup_workdir"},{"location":"usage-complete/#-resume","text":"Bactopia relies on Nextflow's Resume Feature to resume runs. You can tell Bactopia to resume by adding -resume to your command line. When -resume is used, Nextflow will review the cache and determine if the previous run is resumable. If the previous run is not resumable, execution will start at the beginning.","title":"-resume"},{"location":"usage-complete/#nextflow-profile-parameters","text":"Nextflow Profile Parameters --condadir [string] Directory to Nextflow should use for Conda environments --registry [string] Docker registry to pull containers from. [default: dockerhub] --singularity_cache [string] Directory where remote Singularity images are stored. --singularity_pull_docker_container [boolean] Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild [boolean] Force overwrite of existing pre-built environments. --queue [string] Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) [default: general,high-memory] --cluster_opts [string] Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch [boolean] All intermediate files created on worker nodes of will be transferred to the head node.","title":"Nextflow Profile Parameters"},{"location":"usage-complete/#helpful-parameters","text":"Helpful Parameters --monochrome_logs [boolean] Do not use coloured log outputs. --nfdir [boolean] Print directory Nextflow has pulled Bactopia to --sleep_time [integer] The amount of time (seconds) Nextflow will wait after setting up datasets before execution. [default: 5] --validate_params [boolean] Boolean whether to validate parameters against the schema at runtime [default: true] --help [boolean] Display help text. --wf [string] Specify which workflow or Bactopia Tool to execute [default: bactopia] --list_wfs [boolean] List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params [boolean] Show all params when using `--help` --help_all [boolean] An alias for --help --show_hidden_params --version [boolean] Display version text.","title":"Helpful Parameters"},{"location":"workflow-overview/","text":"Workflow Overview \u00b6 Bactopia is an extensive workflow integrating numerous steps in bacterial genome analysis. Through out the workflow there are steps that are always enabled and dataset enabled . Each of the steps depicted in the image below are described in this section. A list of software directly used in each step is also listed. Please check out the Acknowledgements section to get the full list of software as well how to download and cite said software. Always Enabled Steps \u00b6 The Always Enabled Steps are always executed by Bactopia. These steps do not depend of external datasets and thus are always enabled. Gather FASTQs \u00b6 Specifies exactly where the input FASTQ/FASTAs are coming from. If you are using local inputs (e.g. --R1/--R2 , --fastqs ) it will verify they can be accessed. If an accession(s) ( --accession or --accessions ) was given, the corresponding FASTQs (SRA/ENA) or assemblies (NCBI Assembly) are downloaded in this step. All assemblies will have 2x250bp Illumina reads simulated withour insertions or deletions and a minimum PHRED score of Q33. Software Usage ART Generate simulated Illumina reads from an assembly ena-dl Download FASTQ files from ENA ncbi-genome-download Download GenBank/RefSeq assemblies from NCBI Assembly database Validate FASTQs \u00b6 Determines if the FASTQ file contains enough sequencing to continue processing. The --min_reads and --min_basepairs parameters adjust the minimum amount of sequencing required to continue processing. This step does not directly test the validity of the FASTQ format (although, it would fail if the format is invalid!). Software Usage fastq-scan Determine total read and basepairs of FASTQ Original Summary \u00b6 Produces summary statistics (read lengths, quality scores, etc...) based on the original input FASTQs. Software Usage FastQC Generates a HTML report of original FASTQ summary statistics fastq-scan Generates original FASTQ summary statistics in JSON format Genome Size \u00b6 The genome size is by various programs in the Bactopia workflow. By default, if no genome size is given one is estimated using Mash. Otherwise, a specific genome size can be specified or completely disabled using the --genome_size parameter. See Genome Size Parameter to learn more about specifying the genome size. Software Usage Mash If not given, estimates genome size of sample Quality Control \u00b6 The input FASTQs go through a few clean up steps. First, Illumina related adapters and phiX contaminants are removed. Then reads that fail to pass length and/or quality requirements are filtered out. If the genome size is available, sequence error-corrections are made and the total sequencing is reduced to a specified coverage. After this step, all downstream analyses are based on the QC'd FASTQ and the original is no longer used. Software Description BBTools Removes Illumina adapters, phiX contaminants, filters reads based on length and quality score, and reduces inputs to a specified coverage. Lighter Corrects sequencing errors QC Summary \u00b6 Produces summary statistics (read lengths, quality scores, etc...) based on the final set of QC'd FASTQs. Software Usage FastQC Generates a HTML report of QC'd FASTQ summary statistics fastq-scan Generates QC'd FASTQ summary statistics in JSON format Count 31-mers \u00b6 All 31 basepair (31-mers) sequences are counted and the singletons (those 31-mers only counted once) are filtered out. Software Description McCortex Counts 31-mers in the input FASTQ Minmer Sketch \u00b6 A minmer sketch and signature is created based on the QC'd FASTQs for multiple values of k . If datasets are available, the sketches/signatures are used for further downstream analysis. Software Usage Mash Produces a sketch ( k =21,31) of tje QC'd FASTQ Sourmash Produces a signature ( k =21,31,51) of the QC'd FASTQ De novo Assembly \u00b6 The QC'd FASTQs are assembled using the Shovill pipeline. This allows for a seamless assembly process using MEGAHIT , SKESA , SPAdes or Velvet . Alternatively, if long reads are available to complement Illumina paired-end reads, hybrid assembly is available through Unicycler . Software Usage assembly-scan Generates summary statistics of the final assembly Shovill Manages multiple steps in the Illumina assembly process Unicycler Manages multiple steps in the hybrid assembly process Assembly Quality Assessment \u00b6 After assembly, the de novo assembly is assessed for its biological (e.g. containment & contamination) as well as its technical (e.g. misassemblies and errors) quality using CheckM and QUAST . Software Usage CheckM Assess the biological quality of a de novo assembly based on presence of marker genes QUAST Gives a summary on the technical (e.g. misassemblies etc) quality of a de novo assembly Genome Annotation \u00b6 Genes are predicted and annotated from the assembled genome using Prokka . If available, a clustered RefSeq protein set is used for the first pass of annotation. Software Usage Prokka Predicts and annotates assembled genomes Antimicrobial Resistance \u00b6 Searches for antimicrobial resistance genes and assosiated point mutations in the annotated gene and protein sequences. If datasets are available, local assemblies can also be used to predict antibiotic resistance. Software Usage AMRFinderPlus Predicts antimicrobial resistance based on genes and point mutations Dataset Enabled Steps \u00b6 The remaining Dataset Enabled Steps require supplemental datasets to be available to be executed. There are many datasets available that Bactopia can take advantage of. To learn more about setting up these datasets, check out Build Datasets . These datasets can be broken into two groups, Public Datasets and User Datasets . Public Datasets \u00b6 Publicly available datasets can be used for further analysis. Call Variants (Auto) \u00b6 Variants are predicted using Snippy . The QC'd FASTQs are aligned to the nearest (based on Mash distance) RefSeq completed genome. By default, only the nearest genome is selected, but multiple genomes can be selected ( --max_references ) or this feature can be completely disabled ( disable_auto_variants ). Software Usage Bedtools Generates the per-base coverage of the reference alignment NCBI Genome Download Downloads the RefSeq completed genome Snippy Manages multiple steps in the haploid variant calling process vcf-annotator Adds annotations from reference GenBank to the final VCF Minmer Query \u00b6 Screens QC'd FASTQs and signatures against available Minmer Datasets . Software Usage Mash Screens against RefSeq and/or PLSDB sketches Sourmash Screens signature against GenBank Sequence Type \u00b6 Uses a PubMLST.org MLST schema to determine the sequence type of the sample. Software Usage Ariba Runs QC'd FASTQ against a MLST database BLAST Aligns MLST loci against the assembled genome User Datasets \u00b6 Another option is for users to provide their own data to include in the analysis. BLAST Alignment \u00b6 Each gene, protein, or primer sequence provided by the user is aligned against the assembled genome. Software Usage BLAST Aligns reference sequences against the assembled genome Call Variants (User) \u00b6 Uses the same procedure as Call Variants (Auto) , except variants are called against each reference provided by the user. Software Usage Bedtools Generates the per-base coverage of the reference alignment Snippy Manages multiple steps in the haploid variant calling process vcf-annotator Adds annotations from reference GenBank to the final VCF Reference Mapping \u00b6 Aligns the QC'd FASTQs to each sequence provided by the user. Software Usage Bedtools Generates the per-base coverage of the reference alignment BWA Aligns QC'd FASTQ to a reference sequence Samtools Converts alignment from SAM to BAM","title":"Workflow Overview"},{"location":"workflow-overview/#workflow-overview","text":"Bactopia is an extensive workflow integrating numerous steps in bacterial genome analysis. Through out the workflow there are steps that are always enabled and dataset enabled . Each of the steps depicted in the image below are described in this section. A list of software directly used in each step is also listed. Please check out the Acknowledgements section to get the full list of software as well how to download and cite said software.","title":"Workflow Overview"},{"location":"workflow-overview/#always-enabled-steps","text":"The Always Enabled Steps are always executed by Bactopia. These steps do not depend of external datasets and thus are always enabled.","title":"Always Enabled Steps"},{"location":"workflow-overview/#gather-fastqs","text":"Specifies exactly where the input FASTQ/FASTAs are coming from. If you are using local inputs (e.g. --R1/--R2 , --fastqs ) it will verify they can be accessed. If an accession(s) ( --accession or --accessions ) was given, the corresponding FASTQs (SRA/ENA) or assemblies (NCBI Assembly) are downloaded in this step. All assemblies will have 2x250bp Illumina reads simulated withour insertions or deletions and a minimum PHRED score of Q33. Software Usage ART Generate simulated Illumina reads from an assembly ena-dl Download FASTQ files from ENA ncbi-genome-download Download GenBank/RefSeq assemblies from NCBI Assembly database","title":"Gather FASTQs"},{"location":"workflow-overview/#validate-fastqs","text":"Determines if the FASTQ file contains enough sequencing to continue processing. The --min_reads and --min_basepairs parameters adjust the minimum amount of sequencing required to continue processing. This step does not directly test the validity of the FASTQ format (although, it would fail if the format is invalid!). Software Usage fastq-scan Determine total read and basepairs of FASTQ","title":"Validate FASTQs"},{"location":"workflow-overview/#original-summary","text":"Produces summary statistics (read lengths, quality scores, etc...) based on the original input FASTQs. Software Usage FastQC Generates a HTML report of original FASTQ summary statistics fastq-scan Generates original FASTQ summary statistics in JSON format","title":"Original Summary"},{"location":"workflow-overview/#genome-size","text":"The genome size is by various programs in the Bactopia workflow. By default, if no genome size is given one is estimated using Mash. Otherwise, a specific genome size can be specified or completely disabled using the --genome_size parameter. See Genome Size Parameter to learn more about specifying the genome size. Software Usage Mash If not given, estimates genome size of sample","title":"Genome Size"},{"location":"workflow-overview/#quality-control","text":"The input FASTQs go through a few clean up steps. First, Illumina related adapters and phiX contaminants are removed. Then reads that fail to pass length and/or quality requirements are filtered out. If the genome size is available, sequence error-corrections are made and the total sequencing is reduced to a specified coverage. After this step, all downstream analyses are based on the QC'd FASTQ and the original is no longer used. Software Description BBTools Removes Illumina adapters, phiX contaminants, filters reads based on length and quality score, and reduces inputs to a specified coverage. Lighter Corrects sequencing errors","title":"Quality Control"},{"location":"workflow-overview/#qc-summary","text":"Produces summary statistics (read lengths, quality scores, etc...) based on the final set of QC'd FASTQs. Software Usage FastQC Generates a HTML report of QC'd FASTQ summary statistics fastq-scan Generates QC'd FASTQ summary statistics in JSON format","title":"QC Summary"},{"location":"workflow-overview/#count-31-mers","text":"All 31 basepair (31-mers) sequences are counted and the singletons (those 31-mers only counted once) are filtered out. Software Description McCortex Counts 31-mers in the input FASTQ","title":"Count 31-mers"},{"location":"workflow-overview/#minmer-sketch","text":"A minmer sketch and signature is created based on the QC'd FASTQs for multiple values of k . If datasets are available, the sketches/signatures are used for further downstream analysis. Software Usage Mash Produces a sketch ( k =21,31) of tje QC'd FASTQ Sourmash Produces a signature ( k =21,31,51) of the QC'd FASTQ","title":"Minmer Sketch"},{"location":"workflow-overview/#de-novo-assembly","text":"The QC'd FASTQs are assembled using the Shovill pipeline. This allows for a seamless assembly process using MEGAHIT , SKESA , SPAdes or Velvet . Alternatively, if long reads are available to complement Illumina paired-end reads, hybrid assembly is available through Unicycler . Software Usage assembly-scan Generates summary statistics of the final assembly Shovill Manages multiple steps in the Illumina assembly process Unicycler Manages multiple steps in the hybrid assembly process","title":"De novo Assembly"},{"location":"workflow-overview/#assembly-quality-assessment","text":"After assembly, the de novo assembly is assessed for its biological (e.g. containment & contamination) as well as its technical (e.g. misassemblies and errors) quality using CheckM and QUAST . Software Usage CheckM Assess the biological quality of a de novo assembly based on presence of marker genes QUAST Gives a summary on the technical (e.g. misassemblies etc) quality of a de novo assembly","title":"Assembly Quality Assessment"},{"location":"workflow-overview/#genome-annotation","text":"Genes are predicted and annotated from the assembled genome using Prokka . If available, a clustered RefSeq protein set is used for the first pass of annotation. Software Usage Prokka Predicts and annotates assembled genomes","title":"Genome Annotation"},{"location":"workflow-overview/#antimicrobial-resistance","text":"Searches for antimicrobial resistance genes and assosiated point mutations in the annotated gene and protein sequences. If datasets are available, local assemblies can also be used to predict antibiotic resistance. Software Usage AMRFinderPlus Predicts antimicrobial resistance based on genes and point mutations","title":"Antimicrobial Resistance"},{"location":"workflow-overview/#dataset-enabled-steps","text":"The remaining Dataset Enabled Steps require supplemental datasets to be available to be executed. There are many datasets available that Bactopia can take advantage of. To learn more about setting up these datasets, check out Build Datasets . These datasets can be broken into two groups, Public Datasets and User Datasets .","title":"Dataset Enabled Steps"},{"location":"workflow-overview/#public-datasets","text":"Publicly available datasets can be used for further analysis.","title":"Public Datasets"},{"location":"workflow-overview/#call-variants-auto","text":"Variants are predicted using Snippy . The QC'd FASTQs are aligned to the nearest (based on Mash distance) RefSeq completed genome. By default, only the nearest genome is selected, but multiple genomes can be selected ( --max_references ) or this feature can be completely disabled ( disable_auto_variants ). Software Usage Bedtools Generates the per-base coverage of the reference alignment NCBI Genome Download Downloads the RefSeq completed genome Snippy Manages multiple steps in the haploid variant calling process vcf-annotator Adds annotations from reference GenBank to the final VCF","title":"Call Variants (Auto)"},{"location":"workflow-overview/#minmer-query","text":"Screens QC'd FASTQs and signatures against available Minmer Datasets . Software Usage Mash Screens against RefSeq and/or PLSDB sketches Sourmash Screens signature against GenBank","title":"Minmer Query"},{"location":"workflow-overview/#sequence-type","text":"Uses a PubMLST.org MLST schema to determine the sequence type of the sample. Software Usage Ariba Runs QC'd FASTQ against a MLST database BLAST Aligns MLST loci against the assembled genome","title":"Sequence Type"},{"location":"workflow-overview/#user-datasets","text":"Another option is for users to provide their own data to include in the analysis.","title":"User Datasets"},{"location":"workflow-overview/#blast-alignment","text":"Each gene, protein, or primer sequence provided by the user is aligned against the assembled genome. Software Usage BLAST Aligns reference sequences against the assembled genome","title":"BLAST Alignment"},{"location":"workflow-overview/#call-variants-user","text":"Uses the same procedure as Call Variants (Auto) , except variants are called against each reference provided by the user. Software Usage Bedtools Generates the per-base coverage of the reference alignment Snippy Manages multiple steps in the haploid variant calling process vcf-annotator Adds annotations from reference GenBank to the final VCF","title":"Call Variants (User)"},{"location":"workflow-overview/#reference-mapping","text":"Aligns the QC'd FASTQs to each sequence provided by the user. Software Usage Bedtools Generates the per-base coverage of the reference alignment BWA Aligns QC'd FASTQ to a reference sequence Samtools Converts alignment from SAM to BAM","title":"Reference Mapping"},{"location":"bactopia-tools/","text":"Overview \u00b6 After you've run your samples through Bactopia, you are probably going to want to investigate them some more, or conduct some comparative analyses. That's where Bactopia Tools come into play! Bactopia Tools are a set of predifined workflows such as pan-genome contruction, serotyping, and phylogenies. A main benefit of using Bactopia Tools, is they make use of the predictable output structure of Bactopia to automate analyses. This saves you valuable time by allowing you to make further use of the many output files to extend your analyses. Available Bactopia Tools \u00b6 There are currently 37 Bactopia Tools that you can make use of. Below are a list of available Bactopia Tools, grouped as Subworkflows and Modules . Subworkflows (7) \u00b6 Subworkflows string together tools to create an complete pipeline. Subworkflow Description ariba Gene identification through local assemblies bakta Rapid annotation of bacterial genomes and plasmids eggnog Functional annotation of proteins using orthologous groups and phylogenies gtdb Identify marker genes and assign taxonomic classifications merlin MinmER assisted species-specific bactopia tool seLectIoN pangenome Pangenome analysis with optional core-genome phylogeny staphtyper Determine the agr, spa and SCCmec types for Staphylococcus aureus genomes Modules (30) \u00b6 Modules are workflows consisting of only one tool. Module Description abricate Mass screening of contigs for antimicrobial and virulence genes agrvate Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. amrfinderplus Identify antimicrobial resistance in genes or proteins checkm Assess the assembly quality of your samples ectyper In-silico prediction of Escherichia coli serotype emmtyper emm-typing of Streptococcus pyogenes assemblies fastani fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI) gamma Identification, classification, and annotation of translated gene matches hicap Identify cap locus serotype and structure in your Haemophilus influenzae assemblies hpsuissero Serotype prediction of Haemophilus parasuis assemblies ismapper Identify insertion sites positions in bacterial genomes kleborate Screening Klebsiella genome assemblies for MLST, sub-species, and other related genes of interest kraken Taxonomic classifications of sequence reads legsta Typing of Legionella pneumophila assemblies lissero Serogroup typing prediction for Listeria monocytogenes mashdist Calculate Mash distances between sequences mashtree Quickly create a tree using Mash distances meningotype Serotyping of Neisseria meningitidis mlst Automatic MLST calling from assembled contigs mobsuite Reconstruct and annotate plasmids in bacterial assemblies ngmaster Multi-antigen sequence typing for Neisseria gonorrhoeae prokka Whole genome annotation of small genomes (bacterial, archeal, viral) rgi Predict antibiotic resistance from assemblies seqsero2 Salmonella serotype prediction from reads or assemblies shigatyper Shigella serotype from Illumina or Oxford Nanopore reads sistr Serovar prediction of Salmonella assemblies spatyper Computational method for finding spa types in Staphylococcus aureus ssuissero Serotype prediction of Streptococcus suis assemblies staphopiasccmec Primer based SCCmec typing of Staphylococcus aureus genomes tbprofiler Detect resistance and lineages of Mycobacterium tuberculosis genomes Common Inputs \u00b6 With the exceptions of the summary tool, each Bactopia Tool will use the following input parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line. --bactopia \u00b6 This parameter tells each tool where to find your Bactopia outputs from your project. Using this path, the tool will identify the required inputs and begin analysis. What this means is there is no need for you to wrangle up input files for comparative analyses. --exclude \u00b6 What --exclude allows is for you to give a text file with a list of samples that should probably be excluded from further analyses. While you can produce this list yourself, the summary tool will produce a list of samples that do not pass certain thresholds. These thresholds are based on read lengths, sequence quality, coverage and assembly quality. You can adjust these thresholds to meet your needs. --include \u00b6 Similarly, --include allows you to give a text file with a list of samples to be included in the analysis. This allows you to target your anlyses on a specific subset of samples. An example of this may be to use the fastani tool to determine samples with >95% ANI to a reference, then create a pan-genome with the roary tool using only the subset of samples. nf-core/modules Availabilty \u00b6 Good news! All Bactopia Tools are also available through nf-core/modules , a repository of ready to use Nextflow DSL2 modules. This means you can leverage nf-core tools to rapidly string together your own workflows. Many of the above Bactopia Tools were submitted to nf-core/modules as part of Bactopia V2 . The nf-core Team is a fun group to work with so expect many more Bactopia Tools to find their way to nf-core/modules ! Thank you modules team! Suggest A Tool \u00b6 Do you have an idea or suggestion for an analysis that should be added to the set of Bactopia Tools? If so, please feel free to submit it to Bactopia GitHub Issues !","title":"Introduction"},{"location":"bactopia-tools/#overview","text":"After you've run your samples through Bactopia, you are probably going to want to investigate them some more, or conduct some comparative analyses. That's where Bactopia Tools come into play! Bactopia Tools are a set of predifined workflows such as pan-genome contruction, serotyping, and phylogenies. A main benefit of using Bactopia Tools, is they make use of the predictable output structure of Bactopia to automate analyses. This saves you valuable time by allowing you to make further use of the many output files to extend your analyses.","title":"Overview"},{"location":"bactopia-tools/#available-bactopia-tools","text":"There are currently 37 Bactopia Tools that you can make use of. Below are a list of available Bactopia Tools, grouped as Subworkflows and Modules .","title":"Available Bactopia Tools"},{"location":"bactopia-tools/#subworkflows-7","text":"Subworkflows string together tools to create an complete pipeline. Subworkflow Description ariba Gene identification through local assemblies bakta Rapid annotation of bacterial genomes and plasmids eggnog Functional annotation of proteins using orthologous groups and phylogenies gtdb Identify marker genes and assign taxonomic classifications merlin MinmER assisted species-specific bactopia tool seLectIoN pangenome Pangenome analysis with optional core-genome phylogeny staphtyper Determine the agr, spa and SCCmec types for Staphylococcus aureus genomes","title":"Subworkflows (7)"},{"location":"bactopia-tools/#modules-30","text":"Modules are workflows consisting of only one tool. Module Description abricate Mass screening of contigs for antimicrobial and virulence genes agrvate Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. amrfinderplus Identify antimicrobial resistance in genes or proteins checkm Assess the assembly quality of your samples ectyper In-silico prediction of Escherichia coli serotype emmtyper emm-typing of Streptococcus pyogenes assemblies fastani fast alignment-free computation of whole-genome Average Nucleotide Identity (ANI) gamma Identification, classification, and annotation of translated gene matches hicap Identify cap locus serotype and structure in your Haemophilus influenzae assemblies hpsuissero Serotype prediction of Haemophilus parasuis assemblies ismapper Identify insertion sites positions in bacterial genomes kleborate Screening Klebsiella genome assemblies for MLST, sub-species, and other related genes of interest kraken Taxonomic classifications of sequence reads legsta Typing of Legionella pneumophila assemblies lissero Serogroup typing prediction for Listeria monocytogenes mashdist Calculate Mash distances between sequences mashtree Quickly create a tree using Mash distances meningotype Serotyping of Neisseria meningitidis mlst Automatic MLST calling from assembled contigs mobsuite Reconstruct and annotate plasmids in bacterial assemblies ngmaster Multi-antigen sequence typing for Neisseria gonorrhoeae prokka Whole genome annotation of small genomes (bacterial, archeal, viral) rgi Predict antibiotic resistance from assemblies seqsero2 Salmonella serotype prediction from reads or assemblies shigatyper Shigella serotype from Illumina or Oxford Nanopore reads sistr Serovar prediction of Salmonella assemblies spatyper Computational method for finding spa types in Staphylococcus aureus ssuissero Serotype prediction of Streptococcus suis assemblies staphopiasccmec Primer based SCCmec typing of Staphylococcus aureus genomes tbprofiler Detect resistance and lineages of Mycobacterium tuberculosis genomes","title":"Modules  (30)"},{"location":"bactopia-tools/#common-inputs","text":"With the exceptions of the summary tool, each Bactopia Tool will use the following input parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line.","title":"Common Inputs"},{"location":"bactopia-tools/#-bactopia","text":"This parameter tells each tool where to find your Bactopia outputs from your project. Using this path, the tool will identify the required inputs and begin analysis. What this means is there is no need for you to wrangle up input files for comparative analyses.","title":"--bactopia"},{"location":"bactopia-tools/#-exclude","text":"What --exclude allows is for you to give a text file with a list of samples that should probably be excluded from further analyses. While you can produce this list yourself, the summary tool will produce a list of samples that do not pass certain thresholds. These thresholds are based on read lengths, sequence quality, coverage and assembly quality. You can adjust these thresholds to meet your needs.","title":"--exclude"},{"location":"bactopia-tools/#-include","text":"Similarly, --include allows you to give a text file with a list of samples to be included in the analysis. This allows you to target your anlyses on a specific subset of samples. An example of this may be to use the fastani tool to determine samples with >95% ANI to a reference, then create a pan-genome with the roary tool using only the subset of samples.","title":"--include"},{"location":"bactopia-tools/#nf-coremodules-availabilty","text":"Good news! All Bactopia Tools are also available through nf-core/modules , a repository of ready to use Nextflow DSL2 modules. This means you can leverage nf-core tools to rapidly string together your own workflows. Many of the above Bactopia Tools were submitted to nf-core/modules as part of Bactopia V2 . The nf-core Team is a fun group to work with so expect many more Bactopia Tools to find their way to nf-core/modules ! Thank you modules team!","title":"nf-core/modules Availabilty"},{"location":"bactopia-tools/#suggest-a-tool","text":"Do you have an idea or suggestion for an analysis that should be added to the set of Bactopia Tools? If so, please feel free to submit it to Bactopia GitHub Issues !","title":"Suggest A Tool"},{"location":"bactopia-tools/abricate/","text":"Bactopia Tool - abricate \u00b6 The abricate module uses Abricate to screen assemblies for antimicrobial resistance and virulence genes. Example Usage \u00b6 bactopia --wf abricate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the abricate tool. Where possible the file descriptions below were modified from a tools description. abricate/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 abricate \u2502 \u251c\u2500\u2500 nf-abricate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 abricate \u2502 \u2502 \u251c\u2500\u2500 nf-abricate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 abricate-dag.dot \u2502 \u251c\u2500\u2500 abricate-report.html \u2502 \u251c\u2500\u2500 abricate-timeline.html \u2502 \u2514\u2500\u2500 abricate-trace.txt \u251c\u2500\u2500 abricate.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description abricate.tsv A merged TSV file with Abricate results from all samples Abricate \u00b6 Below is a description of the per-sample results from Abricate . Filename Description <SAMPLE_NAME>.tzt A tab-delimited report of hits, for full details please see Abricate - Output Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description abricate-dag.dot The Nextflow DAG visualisation abricate-report.html The Nextflow Execution Report abricate-timeline.html The Nextflow Timeline Report abricate-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Abricate Parameters \u00b6 Parameter Description Default --abricate_db Database to use ncbi --minid Minimum DNA percent identity 80 --mincov Minimum DNA percent coverage 80 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and abricate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Abricate Seemann T Abricate: mass screening of contigs for antimicrobial and virulence genes (GitHub) ARG-ANNOT Gupta SK, Padmanabhan BR, Diene SM, Lopez-Rojas R, Kempf M, Landraud L, Rolain J-M ARG-ANNOT, a new bioinformatic tool to discover antibiotic resistance genes in bacterial genomes. Antimicrob. Agents Chemother 58, 212\u2013220 (2014) CARD Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) EcOH Ingle DJ, Valcanis M, Kuzevski A, Tauschek M, Inouye M, Stinear T, Levine MM, Robins-Browne RM, Holt KE In silico serotyping of E. coli from short read data identifies limited novel O-loci but extensive diversity of O:H serotype combinations within and between pathogenic lineages. Microbial Genomics , 2(7), e000064. (2016) MEGARes 2.0 Doster E, Lakin SM, Dean CJ, Wolfe C, Young JG, Boucher C, Belk KE, Noyes NR, Morley PS MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Research , 48(D1), D561\u2013D569. (2020) NCBI Reference Gene Catalog Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) PlasmidFinder Carattoli A, Zankari E, Garc\u00eda-Fern\u00e1ndez A, Larsen MV, Lund O, Villa L, Aarestrup FM, Hasman H In silico detection and typing of plasmids using PlasmidFinder and plasmid multilocus sequence typing. Antimicrob. Agents Chemother. 58, 3895\u20133903 (2014) ResFinder Zankari E, Hasman H, Cosentino S, Vestergaard M, Rasmussen S, Lund O, Aarestrup FM, Larsen MV Identification of acquired antimicrobial resistance genes. J. Antimicrob. Chemother. 67, 2640\u20132644 (2012) VFDB Chen L, Zheng D, Liu B, Yang J, Jin Q VFDB 2016: hierarchical and refined dataset for big data analysis--10 years on. Nucleic Acids Res. 44, D694\u20137 (2016)","title":"abricate"},{"location":"bactopia-tools/abricate/#bactopia-tool-abricate","text":"The abricate module uses Abricate to screen assemblies for antimicrobial resistance and virulence genes.","title":"Bactopia Tool - abricate"},{"location":"bactopia-tools/abricate/#example-usage","text":"bactopia --wf abricate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/abricate/#output-overview","text":"Below is the default output structure for the abricate tool. Where possible the file descriptions below were modified from a tools description. abricate/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 abricate \u2502 \u251c\u2500\u2500 nf-abricate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 abricate \u2502 \u2502 \u251c\u2500\u2500 nf-abricate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 abricate-dag.dot \u2502 \u251c\u2500\u2500 abricate-report.html \u2502 \u251c\u2500\u2500 abricate-timeline.html \u2502 \u2514\u2500\u2500 abricate-trace.txt \u251c\u2500\u2500 abricate.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/abricate/#results","text":"","title":"Results"},{"location":"bactopia-tools/abricate/#top-level","text":"Below are results that are in the base directory. Filename Description abricate.tsv A merged TSV file with Abricate results from all samples","title":"Top Level"},{"location":"bactopia-tools/abricate/#abricate","text":"Below is a description of the per-sample results from Abricate . Filename Description <SAMPLE_NAME>.tzt A tab-delimited report of hits, for full details please see Abricate - Output","title":"Abricate"},{"location":"bactopia-tools/abricate/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/abricate/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/abricate/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description abricate-dag.dot The Nextflow DAG visualisation abricate-report.html The Nextflow Execution Report abricate-timeline.html The Nextflow Timeline Report abricate-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/abricate/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/abricate/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/abricate/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/abricate/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/abricate/#abricate-parameters","text":"Parameter Description Default --abricate_db Database to use ncbi --minid Minimum DNA percent identity 80 --mincov Minimum DNA percent coverage 80","title":"Abricate Parameters"},{"location":"bactopia-tools/abricate/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/abricate/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/abricate/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/abricate/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/abricate/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/abricate/#citations","text":"If you use Bactopia and abricate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Abricate Seemann T Abricate: mass screening of contigs for antimicrobial and virulence genes (GitHub) ARG-ANNOT Gupta SK, Padmanabhan BR, Diene SM, Lopez-Rojas R, Kempf M, Landraud L, Rolain J-M ARG-ANNOT, a new bioinformatic tool to discover antibiotic resistance genes in bacterial genomes. Antimicrob. Agents Chemother 58, 212\u2013220 (2014) CARD Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020) EcOH Ingle DJ, Valcanis M, Kuzevski A, Tauschek M, Inouye M, Stinear T, Levine MM, Robins-Browne RM, Holt KE In silico serotyping of E. coli from short read data identifies limited novel O-loci but extensive diversity of O:H serotype combinations within and between pathogenic lineages. Microbial Genomics , 2(7), e000064. (2016) MEGARes 2.0 Doster E, Lakin SM, Dean CJ, Wolfe C, Young JG, Boucher C, Belk KE, Noyes NR, Morley PS MEGARes 2.0: a database for classification of antimicrobial drug, biocide and metal resistance determinants in metagenomic sequence data. Nucleic Acids Research , 48(D1), D561\u2013D569. (2020) NCBI Reference Gene Catalog Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019) PlasmidFinder Carattoli A, Zankari E, Garc\u00eda-Fern\u00e1ndez A, Larsen MV, Lund O, Villa L, Aarestrup FM, Hasman H In silico detection and typing of plasmids using PlasmidFinder and plasmid multilocus sequence typing. Antimicrob. Agents Chemother. 58, 3895\u20133903 (2014) ResFinder Zankari E, Hasman H, Cosentino S, Vestergaard M, Rasmussen S, Lund O, Aarestrup FM, Larsen MV Identification of acquired antimicrobial resistance genes. J. Antimicrob. Chemother. 67, 2640\u20132644 (2012) VFDB Chen L, Zheng D, Liu B, Yang J, Jin Q VFDB 2016: hierarchical and refined dataset for big data analysis--10 years on. Nucleic Acids Res. 44, D694\u20137 (2016)","title":"Citations"},{"location":"bactopia-tools/agrvate/","tags":["fasta","Staphylococcus aureus","virulence"],"text":"Bactopia Tool - agrvate \u00b6 The agrvate module uses AgrVATE to rapidly identify the agr locus type in Staphylococcus aureus assemblies. Example Usage \u00b6 bactopia --wf agrvate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the agrvate tool. Where possible the file descriptions below were modified from a tools description. agrvate/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 agrvate \u2502 \u251c\u2500\u2500 nf-agrvate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 agrvate-dag.dot \u2502 \u251c\u2500\u2500 agrvate-report.html \u2502 \u251c\u2500\u2500 agrvate-timeline.html \u2502 \u2514\u2500\u2500 agrvate-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different agrvate is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the agrvate directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples AgrVATE \u00b6 Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description agrvate-dag.dot The Nextflow DAG visualisation agrvate-report.html The Nextflow Execution Report agrvate-timeline.html The Nextflow Timeline Report agrvate-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis AgrVATE Parameters \u00b6 Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and agrvate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub)","title":"agrvate"},{"location":"bactopia-tools/agrvate/#bactopia-tool-agrvate","text":"The agrvate module uses AgrVATE to rapidly identify the agr locus type in Staphylococcus aureus assemblies.","title":"Bactopia Tool - agrvate"},{"location":"bactopia-tools/agrvate/#example-usage","text":"bactopia --wf agrvate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/agrvate/#output-overview","text":"Below is the default output structure for the agrvate tool. Where possible the file descriptions below were modified from a tools description. agrvate/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 agrvate \u2502 \u251c\u2500\u2500 nf-agrvate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 agrvate-dag.dot \u2502 \u251c\u2500\u2500 agrvate-report.html \u2502 \u251c\u2500\u2500 agrvate-timeline.html \u2502 \u2514\u2500\u2500 agrvate-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different agrvate is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the agrvate directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/agrvate/#results","text":"","title":"Results"},{"location":"bactopia-tools/agrvate/#top-level","text":"Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples","title":"Top Level"},{"location":"bactopia-tools/agrvate/#agrvate","text":"Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing","title":"AgrVATE"},{"location":"bactopia-tools/agrvate/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/agrvate/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/agrvate/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description agrvate-dag.dot The Nextflow DAG visualisation agrvate-report.html The Nextflow Execution Report agrvate-timeline.html The Nextflow Timeline Report agrvate-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/agrvate/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/agrvate/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/agrvate/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/agrvate/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/agrvate/#agrvate-parameters","text":"Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False","title":"AgrVATE Parameters"},{"location":"bactopia-tools/agrvate/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/agrvate/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/agrvate/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/agrvate/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/agrvate/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/agrvate/#citations","text":"If you use Bactopia and agrvate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub)","title":"Citations"},{"location":"bactopia-tools/amrfinderplus/","tags":["antimicrobial resistance","fasta"],"text":"Bactopia Tool - amrfinderplus \u00b6 The amrfinderplus module uses AMRFinder+ to screen assemblies and proteins for antimicrobial resistance and virulence genes. Example Usage \u00b6 bactopia --wf amrfinderplus \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the amrfinderplus tool. Where possible the file descriptions below were modified from a tools description. amrfinderplus/ \u251c\u2500\u2500 SRX4563671 \u2502 \u251c\u2500\u2500 SRX4563671-genes.tsv \u2502 \u251c\u2500\u2500 SRX4563671-proteins.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 amrfinderplus \u2502 \u251c\u2500\u2500 nf-amrfinderplus.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 amrfinderplus \u2502 \u2502 \u251c\u2500\u2500 nf-amrfinderplus.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 amrfinderplus-dag.dot \u2502 \u251c\u2500\u2500 amrfinderplus-report.html \u2502 \u251c\u2500\u2500 amrfinderplus-timeline.html \u2502 \u2514\u2500\u2500 amrfinderplus-trace.txt \u251c\u2500\u2500 amrfinderdb.tar.gz \u251c\u2500\u2500 amrfinderplus-genes.tsv \u251c\u2500\u2500 amrfinderplus-proteins.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description amrfinderdb.tar.gz A tarball of the AMRFinder+ database used during analysis amrfinderplus-genes.tsv A merged TSV file with AMRFinder+ results using nucleotide inputs amrfinderplus-proteins.tsv A merged TSV file with AMRFinder+ results using protein inputs AMRFinder+ \u00b6 Below is a description of the per-sample results from AMRFinder+ . Extension Description -genes.tsv A TSV file with AMRFinder+ results using nucleotide inputs -proteins.tsv A TSV file with AMRFinder+ results using protein inputs Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description amrfinderplus-dag.dot The Nextflow DAG visualisation amrfinderplus-report.html The Nextflow Execution Report amrfinderplus-timeline.html The Nextflow Timeline Report amrfinderplus-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis AMRFinder+ Parameters \u00b6 Parameter Description Default --amrfinder_db Path to your AMRFinder+ database as a tarball, if not given database will be built --force_update Force AMRFinder+ to rebuild the database False --ident_min Minimum proportion of identical amino acids in alignment for hit (0..1) -1 --coverage_min Minimum coverage of the reference protein (0..1) 0.5 --organism Taxonomy group to run additional screens against --translation_table NCBI genetic code for translated BLAST 11 --report_common Report proteins common to a taxonomy group False --report_all_equal Report all equally-scoring BLAST and HMM matches False --amrfinder_opts Extra AMRFinder+ options in quotes. Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and amrfinderplus in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AMRFinderPlus Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019)","title":"amrfinderplus"},{"location":"bactopia-tools/amrfinderplus/#bactopia-tool-amrfinderplus","text":"The amrfinderplus module uses AMRFinder+ to screen assemblies and proteins for antimicrobial resistance and virulence genes.","title":"Bactopia Tool - amrfinderplus"},{"location":"bactopia-tools/amrfinderplus/#example-usage","text":"bactopia --wf amrfinderplus \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/amrfinderplus/#output-overview","text":"Below is the default output structure for the amrfinderplus tool. Where possible the file descriptions below were modified from a tools description. amrfinderplus/ \u251c\u2500\u2500 SRX4563671 \u2502 \u251c\u2500\u2500 SRX4563671-genes.tsv \u2502 \u251c\u2500\u2500 SRX4563671-proteins.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 amrfinderplus \u2502 \u251c\u2500\u2500 nf-amrfinderplus.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 amrfinderplus \u2502 \u2502 \u251c\u2500\u2500 nf-amrfinderplus.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 amrfinderplus-dag.dot \u2502 \u251c\u2500\u2500 amrfinderplus-report.html \u2502 \u251c\u2500\u2500 amrfinderplus-timeline.html \u2502 \u2514\u2500\u2500 amrfinderplus-trace.txt \u251c\u2500\u2500 amrfinderdb.tar.gz \u251c\u2500\u2500 amrfinderplus-genes.tsv \u251c\u2500\u2500 amrfinderplus-proteins.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/amrfinderplus/#results","text":"","title":"Results"},{"location":"bactopia-tools/amrfinderplus/#top-level","text":"Below are results that are in the base directory. Filename Description amrfinderdb.tar.gz A tarball of the AMRFinder+ database used during analysis amrfinderplus-genes.tsv A merged TSV file with AMRFinder+ results using nucleotide inputs amrfinderplus-proteins.tsv A merged TSV file with AMRFinder+ results using protein inputs","title":"Top Level"},{"location":"bactopia-tools/amrfinderplus/#amrfinder","text":"Below is a description of the per-sample results from AMRFinder+ . Extension Description -genes.tsv A TSV file with AMRFinder+ results using nucleotide inputs -proteins.tsv A TSV file with AMRFinder+ results using protein inputs","title":"AMRFinder+"},{"location":"bactopia-tools/amrfinderplus/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/amrfinderplus/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/amrfinderplus/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description amrfinderplus-dag.dot The Nextflow DAG visualisation amrfinderplus-report.html The Nextflow Execution Report amrfinderplus-timeline.html The Nextflow Timeline Report amrfinderplus-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/amrfinderplus/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/amrfinderplus/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/amrfinderplus/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/amrfinderplus/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/amrfinderplus/#amrfinder-parameters","text":"Parameter Description Default --amrfinder_db Path to your AMRFinder+ database as a tarball, if not given database will be built --force_update Force AMRFinder+ to rebuild the database False --ident_min Minimum proportion of identical amino acids in alignment for hit (0..1) -1 --coverage_min Minimum coverage of the reference protein (0..1) 0.5 --organism Taxonomy group to run additional screens against --translation_table NCBI genetic code for translated BLAST 11 --report_common Report proteins common to a taxonomy group False --report_all_equal Report all equally-scoring BLAST and HMM matches False --amrfinder_opts Extra AMRFinder+ options in quotes.","title":"AMRFinder+ Parameters"},{"location":"bactopia-tools/amrfinderplus/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/amrfinderplus/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/amrfinderplus/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/amrfinderplus/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/amrfinderplus/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/amrfinderplus/#citations","text":"If you use Bactopia and amrfinderplus in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AMRFinderPlus Feldgarden M, Brover V, Haft DH, Prasad AB, Slotta DJ, Tolstoy I, Tyson GH, Zhao S, Hsu C-H, McDermott PF, Tadesse DA, Morales C, Simmons M, Tillman G, Wasilenko J, Folster JP, Klimke W Validating the NCBI AMRFinder Tool and Resistance Gene Database Using Antimicrobial Resistance Genotype-Phenotype Correlations in a Collection of NARMS Isolates . Antimicrob. Agents Chemother. (2019)","title":"Citations"},{"location":"bactopia-tools/ariba/","text":"Bactopia Tool - ariba \u00b6 The ariba module uses ARIBA to rapidly identify genes in a database by creating local assemblies. Example Usage \u00b6 bactopia --wf ariba \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the ariba tool. Where possible the file descriptions below were modified from a tools description. ariba/ \u251c\u2500\u2500 <DATABASE> \u2502 \u2514\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 card \u2502 \u2502 \u251c\u2500\u2500 assembled_genes.fa.gz \u2502 \u2502 \u251c\u2500\u2500 assembled_seqs.fa.gz \u2502 \u2502 \u251c\u2500\u2500 assemblies.fa.gz \u2502 \u2502 \u251c\u2500\u2500 debug.report.tsv \u2502 \u2502 \u251c\u2500\u2500 log.clusters.gz \u2502 \u2502 \u251c\u2500\u2500 report.tsv \u2502 \u2502 \u251c\u2500\u2500 summary.csv \u2502 \u2502 \u2514\u2500\u2500 version_info.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 nf-ariba.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ariba-dag.dot \u2502 \u251c\u2500\u2500 ariba-report.html \u2502 \u251c\u2500\u2500 ariba-timeline.html \u2502 \u2514\u2500\u2500 ariba-trace.txt \u251c\u2500\u2500 ariba-report.tsv \u251c\u2500\u2500 ariba-summary.csv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ariba is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ariba directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description ariba-report.tsv A merged TSV file with ARIBA results from all samples ariba-summary.csv A merged CSV file created with ariba summary ARIBA \u00b6 Below is a description of the per-sample results from ARIBA . Filename Description assembled_genes.fa.gz All the assembled genes assembled_seqs.fa.gz All the assembled sequences that match the reference assemblies.fa.gz All the raw local assembles debug.report.tsv Contains the results from report.tsv in addition to synonymous mutations log.clusters.gz A log of the ARIBA analysis report.tsv A report of the ARIBA analysis results summary.csv A summary of the report created using ariba summary version_info.txt Containes info on the versions of ARIBA and its dependencies Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ariba-dag.dot The Nextflow DAG visualisation ariba-report.html The Nextflow Execution Report ariba-timeline.html The Nextflow Timeline Report ariba-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Ariba GetRef Parameters \u00b6 Parameter Description Default --ariba_dir Path to save or retrieve Ariba databases --ariba_db A database to query, if unavailable it will be downloaded to the path given by --ariba_dir Ariba Run Parameters \u00b6 Parameter Description Default --nucmer_min_id Minimum alignment identity (delta-filter -i) 90 --nucmer_min_len Minimum alignment identity (delta-filter -i) 20 --nucmer_breaklen Value to use for -breaklen when running nucmer 200 --assembly_cov Target read coverage when sampling reads for assembly 50 --min_scaff_depth Minimum number of read pairs needed as evidence for scaffold link between two contigs 10 --spades_options Extra options to pass to Spades assembler --assembled_threshold If proportion of gene assembled (regardless of into how many contigs) is at least this value then the flag gene_assembled is set 0.95 --gene_nt_extend Max number of nucleotides to extend ends of gene matches to look for start/stop codons 30 --unique_threshold If proportion of bases in gene assembled more than once is <= this value, then the flag unique_contig is set 0.03 --ariba_no_clean Do not clean up intermediate files created by Ariba. Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ariba in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Ariba Hunt M, Mather AE, S\u00e1nchez-Bus\u00f3 L, Page AJ, Parkhill J, Keane JA, Harris SR ARIBA: rapid antimicrobial resistance genotyping directly from sequencing reads . Microb Genom 3, e000131 (2017)","title":"ariba"},{"location":"bactopia-tools/ariba/#bactopia-tool-ariba","text":"The ariba module uses ARIBA to rapidly identify genes in a database by creating local assemblies.","title":"Bactopia Tool - ariba"},{"location":"bactopia-tools/ariba/#example-usage","text":"bactopia --wf ariba \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ariba/#output-overview","text":"Below is the default output structure for the ariba tool. Where possible the file descriptions below were modified from a tools description. ariba/ \u251c\u2500\u2500 <DATABASE> \u2502 \u2514\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 card \u2502 \u2502 \u251c\u2500\u2500 assembled_genes.fa.gz \u2502 \u2502 \u251c\u2500\u2500 assembled_seqs.fa.gz \u2502 \u2502 \u251c\u2500\u2500 assemblies.fa.gz \u2502 \u2502 \u251c\u2500\u2500 debug.report.tsv \u2502 \u2502 \u251c\u2500\u2500 log.clusters.gz \u2502 \u2502 \u251c\u2500\u2500 report.tsv \u2502 \u2502 \u251c\u2500\u2500 summary.csv \u2502 \u2502 \u2514\u2500\u2500 version_info.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 nf-ariba.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ariba-dag.dot \u2502 \u251c\u2500\u2500 ariba-report.html \u2502 \u251c\u2500\u2500 ariba-timeline.html \u2502 \u2514\u2500\u2500 ariba-trace.txt \u251c\u2500\u2500 ariba-report.tsv \u251c\u2500\u2500 ariba-summary.csv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ariba is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ariba directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/ariba/#results","text":"","title":"Results"},{"location":"bactopia-tools/ariba/#top-level","text":"Below are results that are in the base directory. Filename Description ariba-report.tsv A merged TSV file with ARIBA results from all samples ariba-summary.csv A merged CSV file created with ariba summary","title":"Top Level"},{"location":"bactopia-tools/ariba/#ariba","text":"Below is a description of the per-sample results from ARIBA . Filename Description assembled_genes.fa.gz All the assembled genes assembled_seqs.fa.gz All the assembled sequences that match the reference assemblies.fa.gz All the raw local assembles debug.report.tsv Contains the results from report.tsv in addition to synonymous mutations log.clusters.gz A log of the ARIBA analysis report.tsv A report of the ARIBA analysis results summary.csv A summary of the report created using ariba summary version_info.txt Containes info on the versions of ARIBA and its dependencies","title":"ARIBA"},{"location":"bactopia-tools/ariba/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/ariba/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/ariba/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ariba-dag.dot The Nextflow DAG visualisation ariba-report.html The Nextflow Execution Report ariba-timeline.html The Nextflow Timeline Report ariba-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/ariba/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/ariba/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ariba/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ariba/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ariba/#ariba-getref-parameters","text":"Parameter Description Default --ariba_dir Path to save or retrieve Ariba databases --ariba_db A database to query, if unavailable it will be downloaded to the path given by --ariba_dir","title":"Ariba GetRef Parameters"},{"location":"bactopia-tools/ariba/#ariba-run-parameters","text":"Parameter Description Default --nucmer_min_id Minimum alignment identity (delta-filter -i) 90 --nucmer_min_len Minimum alignment identity (delta-filter -i) 20 --nucmer_breaklen Value to use for -breaklen when running nucmer 200 --assembly_cov Target read coverage when sampling reads for assembly 50 --min_scaff_depth Minimum number of read pairs needed as evidence for scaffold link between two contigs 10 --spades_options Extra options to pass to Spades assembler --assembled_threshold If proportion of gene assembled (regardless of into how many contigs) is at least this value then the flag gene_assembled is set 0.95 --gene_nt_extend Max number of nucleotides to extend ends of gene matches to look for start/stop codons 30 --unique_threshold If proportion of bases in gene assembled more than once is <= this value, then the flag unique_contig is set 0.03 --ariba_no_clean Do not clean up intermediate files created by Ariba.","title":"Ariba Run Parameters"},{"location":"bactopia-tools/ariba/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ariba/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ariba/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ariba/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ariba/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ariba/#citations","text":"If you use Bactopia and ariba in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Ariba Hunt M, Mather AE, S\u00e1nchez-Bus\u00f3 L, Page AJ, Parkhill J, Keane JA, Harris SR ARIBA: rapid antimicrobial resistance genotyping directly from sequencing reads . Microb Genom 3, e000131 (2017)","title":"Citations"},{"location":"bactopia-tools/bakta/","tags":["annotation","fasta","prokaryote"],"text":"Bactopia Tool - bakta \u00b6 The bakta module uses Bakta to rapidly annotate bacterial genomes and plasmids in a standardized fashion. Bakta makes use of a large database ( 40+ GB ) to provide extensive annotations including: tRNA, tmRNA, rRNA, ncRNA, CRISPR, CDS, and sORFs. Example Usage \u00b6 bactopia --wf bakta \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the bakta tool. Where possible the file descriptions below were modified from a tools description. bakta/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.embl \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.faa \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.ffn \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.fna \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gbff \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gff3 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.hypotheticals.faa \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.hypotheticals.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 bakta \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.log \u2502 \u251c\u2500\u2500 nf-bakta.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 bakta-dag.dot \u2502 \u251c\u2500\u2500 bakta-report.html \u2502 \u251c\u2500\u2500 bakta-timeline.html \u2502 \u2514\u2500\u2500 bakta-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Bakta \u00b6 Below is a description of the per-sample results from Bakta . Extension Description .embl Annotations & sequences in (multi) EMBL format .faa CDS/sORF amino acid sequences as FASTA .ffn Feature nucleotide sequences as FASTA .fna Replicon/contig DNA sequences as FASTA .gbff Annotations & sequences in (multi) GenBank format .gff3 Annotations & sequences in GFF3 format .hypotheticals.faa Hypothetical protein CDS amino acid sequences as FASTA .hypotheticals.tsv Further information on hypothetical protein CDS as simple human readble tab separated values .tsv Annotations as simple human readble tab separated values .txt Broad summary of Bakta annotations Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description bakta-dag.dot The Nextflow DAG visualisation bakta-report.html The Nextflow Execution Report bakta-timeline.html The Nextflow Timeline Report bakta-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Bakta Download Parameters \u00b6 Parameter Description Default --bakta_db Path to the Bakta database --download_bakta Download the Bakta database to the path given by --bakta_db False Bakta Parameters \u00b6 Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --replicons Replicon information table (tsv/csv) --min_contig_length Minimum contig size to annotate 1 --keep_contig_headers Keep original contig headers False --compliant Force Genbank/ENA/DDJB compliance False --skip_trna Skip tRNA detection & annotation False --skip_tmrna Skip tmRNA detection & annotation False --skip_rrna Skip rRNA detection & annotation False --skip_ncrna Skip ncRNA detection & annotation False --skip_ncrna_region Skip ncRNA region detection & annotation False --skip_crispr Skip CRISPR array detection & annotation False --skip_cds Skip CDS detection & annotation False --skip_sorf Skip sORF detection & annotation False --skip_gap Skip gap detection & annotation False --skip_ori Skip oriC/oriT detection & annotation False --bakta_opts Extra Backa options in quotes. Example: '--gram +' Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and bakta in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Bakta Schwengers O, Jelonek L, Dieckmann MA, Beyvers S, Blom J, Goesmann A Bakta - rapid and standardized annotation of bacterial genomes via alignment-free sequence identification. Microbial Genomics 7(11) (2021)","title":"bakta"},{"location":"bactopia-tools/bakta/#bactopia-tool-bakta","text":"The bakta module uses Bakta to rapidly annotate bacterial genomes and plasmids in a standardized fashion. Bakta makes use of a large database ( 40+ GB ) to provide extensive annotations including: tRNA, tmRNA, rRNA, ncRNA, CRISPR, CDS, and sORFs.","title":"Bactopia Tool - bakta"},{"location":"bactopia-tools/bakta/#example-usage","text":"bactopia --wf bakta \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/bakta/#output-overview","text":"Below is the default output structure for the bakta tool. Where possible the file descriptions below were modified from a tools description. bakta/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.embl \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.faa \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.ffn \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.fna \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gbff \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gff3 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.hypotheticals.faa \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.hypotheticals.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 bakta \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.log \u2502 \u251c\u2500\u2500 nf-bakta.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 bakta-dag.dot \u2502 \u251c\u2500\u2500 bakta-report.html \u2502 \u251c\u2500\u2500 bakta-timeline.html \u2502 \u2514\u2500\u2500 bakta-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/bakta/#results","text":"","title":"Results"},{"location":"bactopia-tools/bakta/#bakta","text":"Below is a description of the per-sample results from Bakta . Extension Description .embl Annotations & sequences in (multi) EMBL format .faa CDS/sORF amino acid sequences as FASTA .ffn Feature nucleotide sequences as FASTA .fna Replicon/contig DNA sequences as FASTA .gbff Annotations & sequences in (multi) GenBank format .gff3 Annotations & sequences in GFF3 format .hypotheticals.faa Hypothetical protein CDS amino acid sequences as FASTA .hypotheticals.tsv Further information on hypothetical protein CDS as simple human readble tab separated values .tsv Annotations as simple human readble tab separated values .txt Broad summary of Bakta annotations","title":"Bakta"},{"location":"bactopia-tools/bakta/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/bakta/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/bakta/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description bakta-dag.dot The Nextflow DAG visualisation bakta-report.html The Nextflow Execution Report bakta-timeline.html The Nextflow Timeline Report bakta-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/bakta/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/bakta/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/bakta/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/bakta/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/bakta/#bakta-download-parameters","text":"Parameter Description Default --bakta_db Path to the Bakta database --download_bakta Download the Bakta database to the path given by --bakta_db False","title":"Bakta Download Parameters"},{"location":"bactopia-tools/bakta/#bakta-parameters","text":"Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --replicons Replicon information table (tsv/csv) --min_contig_length Minimum contig size to annotate 1 --keep_contig_headers Keep original contig headers False --compliant Force Genbank/ENA/DDJB compliance False --skip_trna Skip tRNA detection & annotation False --skip_tmrna Skip tmRNA detection & annotation False --skip_rrna Skip rRNA detection & annotation False --skip_ncrna Skip ncRNA detection & annotation False --skip_ncrna_region Skip ncRNA region detection & annotation False --skip_crispr Skip CRISPR array detection & annotation False --skip_cds Skip CDS detection & annotation False --skip_sorf Skip sORF detection & annotation False --skip_gap Skip gap detection & annotation False --skip_ori Skip oriC/oriT detection & annotation False --bakta_opts Extra Backa options in quotes. Example: '--gram +'","title":"Bakta Parameters"},{"location":"bactopia-tools/bakta/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/bakta/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/bakta/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/bakta/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/bakta/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/bakta/#citations","text":"If you use Bactopia and bakta in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Bakta Schwengers O, Jelonek L, Dieckmann MA, Beyvers S, Blom J, Goesmann A Bakta - rapid and standardized annotation of bacterial genomes via alignment-free sequence identification. Microbial Genomics 7(11) (2021)","title":"Citations"},{"location":"bactopia-tools/checkm/","text":"Bactopia Tool - checkm \u00b6 The checkm module is used CheckM to assess the quality of microbial genomes recovered from isolates, single cells, and metagenomes. Example Usage \u00b6 bactopia --wf checkm \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the checkm tool. Where possible the file descriptions below were modified from a tools description. checkm/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 bins/ \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 checkm \u2502 \u2502 \u251c\u2500\u2500 nf-checkm.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u251c\u2500\u2500 checkm.log \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 storage/ \u2502 \u251c\u2500\u2500 lineage.ms \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-genes.aln \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-results.txt \u251c\u2500\u2500 checkm.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 checkm-dag.dot \u2502 \u251c\u2500\u2500 checkm-report.html \u2502 \u251c\u2500\u2500 checkm-timeline.html \u2502 \u2514\u2500\u2500 checkm-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 CheckM \u00b6 Below is a description of the per-sample results from CheckM . Filename Description bins/ A folder with inputs (e.g. proteins) for processing by CheckM storage/ A folder with intermediate results from CheckM processing lineage.ms Output file describing marker set for each bin <SAMPLE_NAME>-genes.aln Alignment of multi-copy genes and their AAI identity <SAMPLE_NAME>-results.txt Final results of CheckM's lineage_wf Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description checkm-dag.dot The Nextflow DAG visualisation checkm-report.html The Nextflow Execution Report checkm-timeline.html The Nextflow Timeline Report checkm-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis CheckM Parameters \u00b6 Parameter Description Default --checkm_unique Minimum number of unique phylogenetic markers required to use lineage-specific marker set. 10 --checkm_multi Maximum number of multi-copy phylogenetic markers before defaulting to domain-level marker set. 10 --aai_strain AAI threshold used to identify strain heterogeneity 0.9 --checkm_length Percent overlap between target and query 0.7 --full_tree Use the full tree (requires ~40GB of memory) for determining lineage of each bin. --skip_pseudogene_correction Skip identification and filtering of pseudogene --ignore_thresholds Ignore model-specific score thresholds --checkm_ali Generate HMMER alignment file for each bin --checkm_nt Generate nucleotide gene sequences for each bin --force_domain Use domain-level sets for all bins --no_refinement Do not perform lineage-specific marker set refinement --individual_markers Treat marker as independent --skip_adj_correction Do not exclude adjacent marker genes when estimating contamination Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and checkm in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) CheckM Parks DH, Imelfort M, Skennerton CT, Hugenholtz P, Tyson GW CheckM: assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. Genome Res 25, 1043\u20131055 (2015)","title":"checkm"},{"location":"bactopia-tools/checkm/#bactopia-tool-checkm","text":"The checkm module is used CheckM to assess the quality of microbial genomes recovered from isolates, single cells, and metagenomes.","title":"Bactopia Tool - checkm"},{"location":"bactopia-tools/checkm/#example-usage","text":"bactopia --wf checkm \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/checkm/#output-overview","text":"Below is the default output structure for the checkm tool. Where possible the file descriptions below were modified from a tools description. checkm/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 bins/ \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 checkm \u2502 \u2502 \u251c\u2500\u2500 nf-checkm.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u251c\u2500\u2500 checkm.log \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 storage/ \u2502 \u251c\u2500\u2500 lineage.ms \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-genes.aln \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-results.txt \u251c\u2500\u2500 checkm.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 checkm-dag.dot \u2502 \u251c\u2500\u2500 checkm-report.html \u2502 \u251c\u2500\u2500 checkm-timeline.html \u2502 \u2514\u2500\u2500 checkm-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/checkm/#results","text":"","title":"Results"},{"location":"bactopia-tools/checkm/#checkm","text":"Below is a description of the per-sample results from CheckM . Filename Description bins/ A folder with inputs (e.g. proteins) for processing by CheckM storage/ A folder with intermediate results from CheckM processing lineage.ms Output file describing marker set for each bin <SAMPLE_NAME>-genes.aln Alignment of multi-copy genes and their AAI identity <SAMPLE_NAME>-results.txt Final results of CheckM's lineage_wf","title":"CheckM"},{"location":"bactopia-tools/checkm/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/checkm/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/checkm/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description checkm-dag.dot The Nextflow DAG visualisation checkm-report.html The Nextflow Execution Report checkm-timeline.html The Nextflow Timeline Report checkm-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/checkm/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/checkm/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/checkm/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/checkm/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/checkm/#checkm-parameters","text":"Parameter Description Default --checkm_unique Minimum number of unique phylogenetic markers required to use lineage-specific marker set. 10 --checkm_multi Maximum number of multi-copy phylogenetic markers before defaulting to domain-level marker set. 10 --aai_strain AAI threshold used to identify strain heterogeneity 0.9 --checkm_length Percent overlap between target and query 0.7 --full_tree Use the full tree (requires ~40GB of memory) for determining lineage of each bin. --skip_pseudogene_correction Skip identification and filtering of pseudogene --ignore_thresholds Ignore model-specific score thresholds --checkm_ali Generate HMMER alignment file for each bin --checkm_nt Generate nucleotide gene sequences for each bin --force_domain Use domain-level sets for all bins --no_refinement Do not perform lineage-specific marker set refinement --individual_markers Treat marker as independent --skip_adj_correction Do not exclude adjacent marker genes when estimating contamination","title":"CheckM Parameters"},{"location":"bactopia-tools/checkm/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/checkm/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/checkm/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/checkm/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/checkm/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/checkm/#citations","text":"If you use Bactopia and checkm in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) CheckM Parks DH, Imelfort M, Skennerton CT, Hugenholtz P, Tyson GW CheckM: assessing the quality of microbial genomes recovered from isolates, single cells, and metagenomes. Genome Res 25, 1043\u20131055 (2015)","title":"Citations"},{"location":"bactopia-tools/clonalframeml/","tags":["alignment","recombination"],"text":"Bactopia Tool - clonalframeml \u00b6 The clonalframeml module uses ClonalFrameML to predict recombination in bacterial genomes. A starting tree is first created with IQ-TREE ( -fast mode) using the input alignment. Then the alignment and tree are provided ClonalFrameML which uses maximum likelihood to predict recombinant regions in the alignment. Finally, maskrc-svg is used to create and additional alignment with the recombinant regions masked. Example Usage \u00b6 bactopia --wf clonalframeml \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ClonalFrameML Parameters \u00b6 Parameter Description Default --emsim Number of simulations to estimate uncertainty in the EM results 100 --clonal_opts Extra ClonalFrameML options in quotes --skip_recombination Skip ClonalFrameML execution in subworkflows False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and clonalframeml in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ClonalFramML Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) maskrc-svg Kwong J maskrc-svg - Masks recombination as detected by ClonalFrameML or Gubbins and draws an SVG. (GitHub)","title":"Bactopia Tool - `clonalframeml`"},{"location":"bactopia-tools/clonalframeml/#bactopia-tool-clonalframeml","text":"The clonalframeml module uses ClonalFrameML to predict recombination in bacterial genomes. A starting tree is first created with IQ-TREE ( -fast mode) using the input alignment. Then the alignment and tree are provided ClonalFrameML which uses maximum likelihood to predict recombinant regions in the alignment. Finally, maskrc-svg is used to create and additional alignment with the recombinant regions masked.","title":"Bactopia Tool - clonalframeml"},{"location":"bactopia-tools/clonalframeml/#example-usage","text":"bactopia --wf clonalframeml \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/clonalframeml/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/clonalframeml/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/clonalframeml/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/clonalframeml/#clonalframeml-parameters","text":"Parameter Description Default --emsim Number of simulations to estimate uncertainty in the EM results 100 --clonal_opts Extra ClonalFrameML options in quotes --skip_recombination Skip ClonalFrameML execution in subworkflows False","title":"ClonalFrameML Parameters"},{"location":"bactopia-tools/clonalframeml/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/clonalframeml/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/clonalframeml/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/clonalframeml/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/clonalframeml/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/clonalframeml/#citations","text":"If you use Bactopia and clonalframeml in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ClonalFramML Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) maskrc-svg Kwong J maskrc-svg - Masks recombination as detected by ClonalFrameML or Gubbins and draws an SVG. (GitHub)","title":"Citations"},{"location":"bactopia-tools/ectyper/","tags":["Escherichia coli","fasta","serotype"],"text":"Bactopia Tool - ectyper \u00b6 The ectyper module used ECTyper to conduct in silico prediction of serotype for Escherichia coli genomes. It uses the genome assemblies tp provide basic species identification and the predicted E. coli serotype (e.g. O174:H21). Example Usage \u00b6 bactopia --wf ectyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the ectyper tool. Where possible the file descriptions below were modified from a tools description. ectyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 blast_output_alleles.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ectyper \u2502 \u251c\u2500\u2500 ectyper.log \u2502 \u251c\u2500\u2500 nf-ectyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ectyper-dag.dot \u2502 \u251c\u2500\u2500 ectyper-report.html \u2502 \u251c\u2500\u2500 ectyper-timeline.html \u2502 \u2514\u2500\u2500 ectyper-trace.txt \u251c\u2500\u2500 ectyper.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ectyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ectyper directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description ectyper.tsv A merged TSV file with ECTyper results from all samples ECTyper \u00b6 Below is a description of the per-sample results from ECTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ECTyper result, see ECTyper - Report format for details blast_output_alleles.txt Allele report generated from BLAST results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ectyper-dag.dot The Nextflow DAG visualisation ectyper-report.html The Nextflow Execution Report ectyper-timeline.html The Nextflow Timeline Report ectyper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ECTyper Parameters \u00b6 Parameter Description Default --opid Percent identity required for an O antigen allele match 90 --opcov Minumum percent coverage required for an O antigen allele match 90 --hpid Percent identity required for an H antigen allele match 95 --hpcov Minumum percent coverage required for an H antigen allele match 50 --verify Enable E. coli species verification False --print_alleles Prints the allele sequences if enabled as the final column False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ectyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ECTyper Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub)","title":"ectyper"},{"location":"bactopia-tools/ectyper/#bactopia-tool-ectyper","text":"The ectyper module used ECTyper to conduct in silico prediction of serotype for Escherichia coli genomes. It uses the genome assemblies tp provide basic species identification and the predicted E. coli serotype (e.g. O174:H21).","title":"Bactopia Tool - ectyper"},{"location":"bactopia-tools/ectyper/#example-usage","text":"bactopia --wf ectyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ectyper/#output-overview","text":"Below is the default output structure for the ectyper tool. Where possible the file descriptions below were modified from a tools description. ectyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 blast_output_alleles.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ectyper \u2502 \u251c\u2500\u2500 ectyper.log \u2502 \u251c\u2500\u2500 nf-ectyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ectyper-dag.dot \u2502 \u251c\u2500\u2500 ectyper-report.html \u2502 \u251c\u2500\u2500 ectyper-timeline.html \u2502 \u2514\u2500\u2500 ectyper-trace.txt \u251c\u2500\u2500 ectyper.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ectyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ectyper directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/ectyper/#results","text":"","title":"Results"},{"location":"bactopia-tools/ectyper/#top-level","text":"Below are results that are in the base directory. Filename Description ectyper.tsv A merged TSV file with ECTyper results from all samples","title":"Top Level"},{"location":"bactopia-tools/ectyper/#ectyper","text":"Below is a description of the per-sample results from ECTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ECTyper result, see ECTyper - Report format for details blast_output_alleles.txt Allele report generated from BLAST results","title":"ECTyper"},{"location":"bactopia-tools/ectyper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/ectyper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/ectyper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ectyper-dag.dot The Nextflow DAG visualisation ectyper-report.html The Nextflow Execution Report ectyper-timeline.html The Nextflow Timeline Report ectyper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/ectyper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/ectyper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ectyper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ectyper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ectyper/#ectyper-parameters","text":"Parameter Description Default --opid Percent identity required for an O antigen allele match 90 --opcov Minumum percent coverage required for an O antigen allele match 90 --hpid Percent identity required for an H antigen allele match 95 --hpcov Minumum percent coverage required for an H antigen allele match 50 --verify Enable E. coli species verification False --print_alleles Prints the allele sequences if enabled as the final column False","title":"ECTyper Parameters"},{"location":"bactopia-tools/ectyper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ectyper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ectyper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ectyper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ectyper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ectyper/#citations","text":"If you use Bactopia and ectyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ECTyper Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub)","title":"Citations"},{"location":"bactopia-tools/eggnog/","tags":["annotation","fasta","prokaryote"],"text":"Bactopia Tool - eggnog \u00b6 The eggnog module uses eggNOG-mapper to assign functional annotation to protein sequences. eggNOG-mapper uses orthologous groups and phylogenies from the eggNOG database to more precisely functionally annotate than traditional homology methods. Example Usage \u00b6 bactopia --wf eggnog \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the eggnog tool. Where possible the file descriptions below were modified from a tools description. eggnog/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.annotations \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.hits \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.seed_orthologs \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 eggnog \u2502 \u251c\u2500\u2500 nf-eggnog.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u2514\u2500\u2500 eggnog-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 eggNOG-mapper \u00b6 Below is a description of the per-sample results from eggNOG-mapper . For full details about each of the eggNOG output files, see eggNOG-mapper - Ouputs . Filename Description <SAMPLE_NAME>.emapper.annotations Results from the annotation phase <SAMPLE_NAME>.emapper.hits Results from the search phase, from HMMER, Diamond or MMseqs2 <SAMPLE_NAME>.emapper.seed_orthologs Results from parsing the hits <SAMPLE_NAME>.emapper.annotations.xlsx (Optional) Annotations in .xlsx format <SAMPLE_NAME>.emapper.orthologs (Optional) List of orthologs found for each query <SAMPLE_NAME>.emapper.genepred.fasta (Optional) Sequences of predicted CDS <SAMPLE_NAME>.emapper.gff (Optional) GFF of predicted CDS <SAMPLE_NAME>.emapper.no_annotations.fasta (Optional) Sequences without annotation <SAMPLE_NAME>.emapper.pfam (Optional) Positions of the PFAM domains identified Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description eggnog-dag.dot The Nextflow DAG visualisation eggnog-report.html The Nextflow Execution Report eggnog-timeline.html The Nextflow Timeline Report eggnog-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis eggNOG Downloader Parameters \u00b6 Parameter Description Default --eggnog Path to existing or destination for eggNOG databases --download_eggnog Required if downloading latest eggNOG database, will overwrite existing databases. False --skip_diamond Do not install the diamond database False --install_mmseq Install the MMseqs2 database False --install_pfam Install the Pfam database, required for de novo annotation or realignment False --install_hmm Install the HMMER database specified with --hmmer_taxid False --hmmer_taxid Tax ID of eggNOG HMM database to download 2 eggNOG Mapper Parameters \u00b6 Parameter Description Default --genepred Method to use for gene prediction search --mode Method to search against eggNOG sequences diamond --eggnog_opts Extra eggNOG Mapper options in quotes Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and eggnog in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) eggNOG 5.0 Database Huerta-Cepas J, Szklarczyk D, Heller D, Hern\u00e1ndez-Plaza A, Forslund SK, Cook H, Mende DR, Letunic I, Rattei T, Jensen LJ, von Mering C, Bork P eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated orthology resource based on 5090 organisms and 2502 viruses. Nucleic Acids Res. 47, D309\u2013D314 (2019) eggNOG-mapper Huerta-Cepas J, Forslund K, Coelho LP, Szklarczyk D, Jensen LJ, von Mering C, Bork P Fast Genome-Wide Functional Annotation through Orthology Assignment by eggNOG-Mapper. Mol. Biol. Evol. 34, 2115\u20132122 (2017)","title":"eggnog"},{"location":"bactopia-tools/eggnog/#bactopia-tool-eggnog","text":"The eggnog module uses eggNOG-mapper to assign functional annotation to protein sequences. eggNOG-mapper uses orthologous groups and phylogenies from the eggNOG database to more precisely functionally annotate than traditional homology methods.","title":"Bactopia Tool - eggnog"},{"location":"bactopia-tools/eggnog/#example-usage","text":"bactopia --wf eggnog \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/eggnog/#output-overview","text":"Below is the default output structure for the eggnog tool. Where possible the file descriptions below were modified from a tools description. eggnog/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.annotations \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.hits \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.emapper.seed_orthologs \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 eggnog \u2502 \u251c\u2500\u2500 nf-eggnog.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u2514\u2500\u2500 eggnog-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/eggnog/#results","text":"","title":"Results"},{"location":"bactopia-tools/eggnog/#eggnog-mapper","text":"Below is a description of the per-sample results from eggNOG-mapper . For full details about each of the eggNOG output files, see eggNOG-mapper - Ouputs . Filename Description <SAMPLE_NAME>.emapper.annotations Results from the annotation phase <SAMPLE_NAME>.emapper.hits Results from the search phase, from HMMER, Diamond or MMseqs2 <SAMPLE_NAME>.emapper.seed_orthologs Results from parsing the hits <SAMPLE_NAME>.emapper.annotations.xlsx (Optional) Annotations in .xlsx format <SAMPLE_NAME>.emapper.orthologs (Optional) List of orthologs found for each query <SAMPLE_NAME>.emapper.genepred.fasta (Optional) Sequences of predicted CDS <SAMPLE_NAME>.emapper.gff (Optional) GFF of predicted CDS <SAMPLE_NAME>.emapper.no_annotations.fasta (Optional) Sequences without annotation <SAMPLE_NAME>.emapper.pfam (Optional) Positions of the PFAM domains identified","title":"eggNOG-mapper"},{"location":"bactopia-tools/eggnog/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/eggnog/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/eggnog/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description eggnog-dag.dot The Nextflow DAG visualisation eggnog-report.html The Nextflow Execution Report eggnog-timeline.html The Nextflow Timeline Report eggnog-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/eggnog/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/eggnog/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/eggnog/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/eggnog/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/eggnog/#eggnog-downloader-parameters","text":"Parameter Description Default --eggnog Path to existing or destination for eggNOG databases --download_eggnog Required if downloading latest eggNOG database, will overwrite existing databases. False --skip_diamond Do not install the diamond database False --install_mmseq Install the MMseqs2 database False --install_pfam Install the Pfam database, required for de novo annotation or realignment False --install_hmm Install the HMMER database specified with --hmmer_taxid False --hmmer_taxid Tax ID of eggNOG HMM database to download 2","title":"eggNOG Downloader Parameters"},{"location":"bactopia-tools/eggnog/#eggnog-mapper-parameters","text":"Parameter Description Default --genepred Method to use for gene prediction search --mode Method to search against eggNOG sequences diamond --eggnog_opts Extra eggNOG Mapper options in quotes","title":"eggNOG Mapper Parameters"},{"location":"bactopia-tools/eggnog/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/eggnog/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/eggnog/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/eggnog/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/eggnog/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/eggnog/#citations","text":"If you use Bactopia and eggnog in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) eggNOG 5.0 Database Huerta-Cepas J, Szklarczyk D, Heller D, Hern\u00e1ndez-Plaza A, Forslund SK, Cook H, Mende DR, Letunic I, Rattei T, Jensen LJ, von Mering C, Bork P eggNOG 5.0: a hierarchical, functionally and phylogenetically annotated orthology resource based on 5090 organisms and 2502 viruses. Nucleic Acids Res. 47, D309\u2013D314 (2019) eggNOG-mapper Huerta-Cepas J, Forslund K, Coelho LP, Szklarczyk D, Jensen LJ, von Mering C, Bork P Fast Genome-Wide Functional Annotation through Orthology Assignment by eggNOG-Mapper. Mol. Biol. Evol. 34, 2115\u20132122 (2017)","title":"Citations"},{"location":"bactopia-tools/emmtyper/","tags":["fasta","Streptococcus pyogenes","typing"],"text":"Bactopia Tool - emmtyper \u00b6 The emmtyper module uses emmtyper for emm-typing of Streptococcus pyogenes using a de novo or complete assembly. Example Usage \u00b6 bactopia --wf emmtyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the emmtyper tool. Where possible the file descriptions below were modified from a tools description. emmtyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 emmtyper \u2502 \u251c\u2500\u2500 emmtyper.log \u2502 \u251c\u2500\u2500 nf-emmtyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 emmtyper.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 emmtyper-dag.dot \u2502 \u251c\u2500\u2500 emmtyper-report.html \u2502 \u251c\u2500\u2500 emmtyper-timeline.html \u2502 \u2514\u2500\u2500 emmtyper-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different emmtyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the emmtyper directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description emmtyper.tsv A merged TSV file with emmtyper results from all samples emmtyper \u00b6 Below is a description of the per-sample results from emmtyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with emmtyper result, see emmtyper - Result format for details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description emmtyper-dag.dot The Nextflow DAG visualisation emmtyper-report.html The Nextflow Execution Report emmtyper-timeline.html The Nextflow Timeline Report emmtyper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis emmtyper Parameters \u00b6 Parameter Description Default --emmtyper_wf Workflow for emmtyper to use. blast --cluster_distance Distance between cluster of matches to consider as different clusters 500 --percid Minimal percent identity of sequence 95 --culling_limit Total hits to return in a position 5 --mismatch Threshold for number of mismatch to allow in BLAST hit 5 --align_diff Threshold for difference between alignment length and subject length in BLAST 5 --gap Threshold gap to allow in BLAST hit 2 --min_perfect Minimum size of perfect match at 3 primer end 15 --min_good Minimum size where there must be 2 matches for each mismatch 15 --max_size Maximum size of PCR product 2000 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and emmtyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) emmtyper Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub)","title":"emmtyper"},{"location":"bactopia-tools/emmtyper/#bactopia-tool-emmtyper","text":"The emmtyper module uses emmtyper for emm-typing of Streptococcus pyogenes using a de novo or complete assembly.","title":"Bactopia Tool - emmtyper"},{"location":"bactopia-tools/emmtyper/#example-usage","text":"bactopia --wf emmtyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/emmtyper/#output-overview","text":"Below is the default output structure for the emmtyper tool. Where possible the file descriptions below were modified from a tools description. emmtyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 emmtyper \u2502 \u251c\u2500\u2500 emmtyper.log \u2502 \u251c\u2500\u2500 nf-emmtyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 emmtyper.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 emmtyper-dag.dot \u2502 \u251c\u2500\u2500 emmtyper-report.html \u2502 \u251c\u2500\u2500 emmtyper-timeline.html \u2502 \u2514\u2500\u2500 emmtyper-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different emmtyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the emmtyper directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/emmtyper/#results","text":"","title":"Results"},{"location":"bactopia-tools/emmtyper/#top-level","text":"Below are results that are in the base directory. Filename Description emmtyper.tsv A merged TSV file with emmtyper results from all samples","title":"Top Level"},{"location":"bactopia-tools/emmtyper/#emmtyper","text":"Below is a description of the per-sample results from emmtyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with emmtyper result, see emmtyper - Result format for details","title":"emmtyper"},{"location":"bactopia-tools/emmtyper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/emmtyper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/emmtyper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description emmtyper-dag.dot The Nextflow DAG visualisation emmtyper-report.html The Nextflow Execution Report emmtyper-timeline.html The Nextflow Timeline Report emmtyper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/emmtyper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/emmtyper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/emmtyper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/emmtyper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/emmtyper/#emmtyper-parameters","text":"Parameter Description Default --emmtyper_wf Workflow for emmtyper to use. blast --cluster_distance Distance between cluster of matches to consider as different clusters 500 --percid Minimal percent identity of sequence 95 --culling_limit Total hits to return in a position 5 --mismatch Threshold for number of mismatch to allow in BLAST hit 5 --align_diff Threshold for difference between alignment length and subject length in BLAST 5 --gap Threshold gap to allow in BLAST hit 2 --min_perfect Minimum size of perfect match at 3 primer end 15 --min_good Minimum size where there must be 2 matches for each mismatch 15 --max_size Maximum size of PCR product 2000","title":"emmtyper Parameters"},{"location":"bactopia-tools/emmtyper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/emmtyper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/emmtyper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/emmtyper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/emmtyper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/emmtyper/#citations","text":"If you use Bactopia and emmtyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) emmtyper Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub)","title":"Citations"},{"location":"bactopia-tools/fastani/","tags":["ani","fastani","simularity"],"text":"Bactopia Tool - fastani \u00b6 The fastani module uses FastANI to calculate the average nucleotide identity (ANI) between your samples. Although, sometimes you might be more interested in calculating the ANI of your samples against a reference genome. Fortunately, using ncbi-genome-download , the fastani module allows you specify either a specific NCBI Assembly RefSeq accession ( --accession ) or a species name ( --species ) for which to download all RefSeq genomes. Example Usage \u00b6 bactopia --wf fastani \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the fastani tool. Where possible the file descriptions below were modified from a tools description. fastani/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 fastani \u2502 \u251c\u2500\u2500 nf-fastani.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 fastani-dag.dot \u2502 \u251c\u2500\u2500 fastani-report.html \u2502 \u251c\u2500\u2500 fastani-timeline.html \u2502 \u2514\u2500\u2500 fastani-trace.txt \u251c\u2500\u2500 fastani.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description fastani.tsv A merged TSV file with FastANI results from all samples FastANI \u00b6 Below is a description of the per-sample results from FastANI . Filename Description <SAMPLE_NAME>.tsv FastANI results of all samples against a reference genome Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description fastani-dag.dot The Nextflow DAG visualisation fastani-report.html The Nextflow Execution Report fastani-timeline.html The Nextflow Timeline Report fastani-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis fastANI Parameters \u00b6 Parameter Description Default --kmer kmer size (<= 16) for ANI calculation 16 --min_fraction Minimum fraction of genome that must be shared for trusting ANI. 0.2 --frag_len fragment length 3000 --skip_pairwise Only use RefSeq or local assemblies for ANI calculations False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and fastani in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) FastANI Jain C, Rodriguez-R LM, Phillippy AM, Konstantinidis KT, Aluru S High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries. Nat. Commun. 9, 5114 (2018) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"fastani"},{"location":"bactopia-tools/fastani/#bactopia-tool-fastani","text":"The fastani module uses FastANI to calculate the average nucleotide identity (ANI) between your samples. Although, sometimes you might be more interested in calculating the ANI of your samples against a reference genome. Fortunately, using ncbi-genome-download , the fastani module allows you specify either a specific NCBI Assembly RefSeq accession ( --accession ) or a species name ( --species ) for which to download all RefSeq genomes.","title":"Bactopia Tool - fastani"},{"location":"bactopia-tools/fastani/#example-usage","text":"bactopia --wf fastani \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/fastani/#output-overview","text":"Below is the default output structure for the fastani tool. Where possible the file descriptions below were modified from a tools description. fastani/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 fastani \u2502 \u251c\u2500\u2500 nf-fastani.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 fastani-dag.dot \u2502 \u251c\u2500\u2500 fastani-report.html \u2502 \u251c\u2500\u2500 fastani-timeline.html \u2502 \u2514\u2500\u2500 fastani-trace.txt \u251c\u2500\u2500 fastani.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/fastani/#results","text":"","title":"Results"},{"location":"bactopia-tools/fastani/#top-level","text":"Below are results that are in the base directory. Filename Description fastani.tsv A merged TSV file with FastANI results from all samples","title":"Top Level"},{"location":"bactopia-tools/fastani/#fastani","text":"Below is a description of the per-sample results from FastANI . Filename Description <SAMPLE_NAME>.tsv FastANI results of all samples against a reference genome","title":"FastANI"},{"location":"bactopia-tools/fastani/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/fastani/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/fastani/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description fastani-dag.dot The Nextflow DAG visualisation fastani-report.html The Nextflow Execution Report fastani-timeline.html The Nextflow Timeline Report fastani-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/fastani/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/fastani/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/fastani/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/fastani/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/fastani/#fastani-parameters","text":"Parameter Description Default --kmer kmer size (<= 16) for ANI calculation 16 --min_fraction Minimum fraction of genome that must be shared for trusting ANI. 0.2 --frag_len fragment length 3000 --skip_pairwise Only use RefSeq or local assemblies for ANI calculations False","title":"fastANI Parameters"},{"location":"bactopia-tools/fastani/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/fastani/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/fastani/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/fastani/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/fastani/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/fastani/#citations","text":"If you use Bactopia and fastani in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) FastANI Jain C, Rodriguez-R LM, Phillippy AM, Konstantinidis KT, Aluru S High throughput ANI analysis of 90K prokaryotic genomes reveals clear species boundaries. Nat. Commun. 9, 5114 (2018) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"Citations"},{"location":"bactopia-tools/gamma/","tags":["antimicrobial resistance","fasta","virulence"],"text":"Bactopia Tool - gamma \u00b6 The gamma module uses GAMMA to identify, classify, and annotate translated gene matches from assemblies. Example Usage \u00b6 bactopia --wf gamma \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the gamma tool. Where possible the file descriptions below were modified from a tools description. gamma \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.fasta \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gamma \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gff \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.psl \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 gamma \u2502 \u251c\u2500\u2500 nf-gamma.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 gamma.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description gamma.tsv A merged TSV file with GAMMA results from all samples GAMMA \u00b6 Below is a description of the per-sample results from GAMMA . Extension Description .fasta Annotated gene sequences is FASTA format .gamma A TSV file with annotated gene matches .gff Annotated gene matches is GFF3 format .psl A PSL file with BLAT gene alignments Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description gamma-dag.dot The Nextflow DAG visualisation gamma-report.html The Nextflow Execution Report gamma-timeline.html The Nextflow Timeline Report gamma-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis GAMMA Parameters \u00b6 Parameter Description Default --gamma_db A gene database (FASTA) for GAMMA --percent_identity The minimum nucleotide sequence identiy % used by the Blat search 90 --all_matches Include all gene matches, even overlaps False --extended Writes out all protein mutations False --write_fasta Write FASTA of gene matches False --write_gff Write gene matches as GFF file False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and gamma in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) GAMMA Stanton RA, Vlachos N, Halpin AL GAMMA: a tool for the rapid identification, classification, and annotation of translated gene matches from sequencing data. Bioinformatics (2021)","title":"gamma"},{"location":"bactopia-tools/gamma/#bactopia-tool-gamma","text":"The gamma module uses GAMMA to identify, classify, and annotate translated gene matches from assemblies.","title":"Bactopia Tool - gamma"},{"location":"bactopia-tools/gamma/#example-usage","text":"bactopia --wf gamma \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/gamma/#output-overview","text":"Below is the default output structure for the gamma tool. Where possible the file descriptions below were modified from a tools description. gamma \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.fasta \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gamma \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gff \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.psl \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 gamma \u2502 \u251c\u2500\u2500 nf-gamma.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 gamma.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/gamma/#results","text":"","title":"Results"},{"location":"bactopia-tools/gamma/#top-level","text":"Below are results that are in the base directory. Filename Description gamma.tsv A merged TSV file with GAMMA results from all samples","title":"Top Level"},{"location":"bactopia-tools/gamma/#gamma","text":"Below is a description of the per-sample results from GAMMA . Extension Description .fasta Annotated gene sequences is FASTA format .gamma A TSV file with annotated gene matches .gff Annotated gene matches is GFF3 format .psl A PSL file with BLAT gene alignments","title":"GAMMA"},{"location":"bactopia-tools/gamma/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/gamma/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/gamma/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description gamma-dag.dot The Nextflow DAG visualisation gamma-report.html The Nextflow Execution Report gamma-timeline.html The Nextflow Timeline Report gamma-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/gamma/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/gamma/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/gamma/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/gamma/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/gamma/#gamma-parameters","text":"Parameter Description Default --gamma_db A gene database (FASTA) for GAMMA --percent_identity The minimum nucleotide sequence identiy % used by the Blat search 90 --all_matches Include all gene matches, even overlaps False --extended Writes out all protein mutations False --write_fasta Write FASTA of gene matches False --write_gff Write gene matches as GFF file False","title":"GAMMA Parameters"},{"location":"bactopia-tools/gamma/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/gamma/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/gamma/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/gamma/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/gamma/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/gamma/#citations","text":"If you use Bactopia and gamma in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) GAMMA Stanton RA, Vlachos N, Halpin AL GAMMA: a tool for the rapid identification, classification, and annotation of translated gene matches from sequencing data. Bioinformatics (2021)","title":"Citations"},{"location":"bactopia-tools/gtdb/","text":"Bactopia Tool - gtdb \u00b6 The gtdb tool uses GTDB-Tk's classify workflow to assign taxonomic classifications to your set of samples. This is done through the use of the Genome Taxonomy Database . If you are unsure of your sequences, gtdb is useful tool to help determine the taxonomy of your samples. Example Usage \u00b6 bactopia --wf gtdb \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the gtdb tool. Where possible the file descriptions below were modified from a tools description. gtdb/ \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 gtdb-report.html \u2502 \u251c\u2500\u2500 gtdb-timeline.html \u2502 \u2514\u2500\u2500 gtdb-trace.txt \u2514\u2500\u2500 classify \u251c\u2500\u2500 align \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).filtered.tsv \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).msa.fasta \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).user_msa.fasta \u2502 \u2514\u2500\u2500 intermediate_results \u2502 \u2514\u2500\u2500 gtdb.(ar122|bac120).marker_info.tsv \u251c\u2500\u2500 classify \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).classify.tree \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).summary.tsv \u2502 \u2514\u2500\u2500 intermediate_results \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).classification_pplacer.tsv \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).red_dictionary.tsv \u2502 \u2514\u2500\u2500 pplacer \u2502 \u251c\u2500\u2500 pplacer.(ar122|bac120).json \u2502 \u2514\u2500\u2500 pplacer.(ar122|bac120).out \u251c\u2500\u2500 gtdb.(ar122|bac120).classify.tree \u251c\u2500\u2500 gtdb.(ar122|bac120).filtered.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).markers_summary.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).msa.fasta \u251c\u2500\u2500 gtdb.(ar122|bac120).summary.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).user_msa.fasta \u251c\u2500\u2500 gtdb.translation_table_summary.tsv \u2514\u2500\u2500 identify \u2514\u2500\u2500 intermediate_results \u2514\u2500\u2500 marker_genes \u2514\u2500\u2500 <SAMPLE_NAME> \u251c\u2500\u2500 prodigal_translation_table.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_pfam_tophit.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_pfam.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_protein.{faa,fna,gff} \u251c\u2500\u2500 <SAMPLE_NAME>_tigrfam.out \u251c\u2500\u2500 <SAMPLE_NAME>_tigrfam_tophit.tsv \u2514\u2500\u2500 <SAMPLE_NAME>_tigrfam.tsv Results \u00b6 GTDB-Tk \u00b6 Below is a description of the per-sample results from GTDB-Tk . For full details about each of the GTDB output files, see GTDB-Tk Classify Workflow page. Filename Description gtdb.(ar122|bac120).classify.tree Reference tree in Newick format containing query genomes placed with pplacer gtdb.(ar122|bac120).filtered.tsv List of genomes with an insufficient number of amino acids in MSA gtdb.(ar122|bac120).markers_summary.tsv Markers used in generation of the concatenated MSA and the order in which they were applied gtdb.(ar122|bac120).msa.fasta FASTA file containing MSA of submitted and reference genomes gtdb.(ar122|bac120).summary.tsv A summary of classifications provided by GTDB-Tk, see classification summary for more details gtdb.(ar122|bac120).user_msa.fasta FASTA file containing MSA of the submitted genomes gtdb.translation_table_summary.tsv Summary of the tranlastlation table used for each genome gtdb.(ar122|bac120).classification_pplacer.tsv Classification of query genomes based only on their placement in the reference tree gtdb.(ar122|bac120).red_dictionary.tsv Median RED values for taxonomic ranks pplacer.(ar122|bac120).json Output information generated by pplacer in JSON format pplacer.(ar122|bac120).out Output information generated by pplacer gtdb.ar122.markers_summary.tsv Summary of unique, duplicated, and missing markers within the 122 archaeal marker set for each submitted genome gtdb.bac120.markers_summary.tsv Summary of unique, duplicated, and missing markers within the 120 bacterial marker set for each submitted genome gtdb.translation_table_summary.tsv The predicted translation table used for gene calling for each genome marker_genes/ Contains individual genome results for gene calling using Prodigal and gene identification based on TIGRFAM and Pfam HMMs Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description gtdb-dag.dot The Nextflow DAG visualisation gtdb-report.html The Nextflow Execution Report gtdb-timeline.html The Nextflow Timeline Report gtdb-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis GTDB Setup Parameters \u00b6 Parameter Description Default --gtdb Location of a GTDB database. If a database is not found, you must use '--download_gtdb' --download_gtdb Download the latest GTDB database, even it exists False --skip_check Do not check the installation of GTDB database False GTDB Classify Parameters \u00b6 Parameter Description Default --min_af Minimum alignment fraction to consider closest genome 0.65 --min_perc_aa Filter genomes with an insufficient percentage of AA in the MSA 10 --gtdb_tmp Specify alternative directory for temporary files /tmp --gtdb_use_scratch Reduce pplacer memory usage by writing to --gtdb_tmp location (slower) False --gtdb_debug Create intermediate files for debugging purposes False --force_gtdb Continue processing if an error occurs on a single genome False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and gtdb in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Genome Taxonomy Database Parks DH, Chuvochina M, Rinke C, Mussig AJ, Chaumeil P-A, Hugenholtz P GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy Nucleic Acids Research gkab776 (2021) GTDB-Tk Chaumeil PA, Mussig AJ, Hugenholtz P, Parks DH GTDB-Tk: a toolkit to classify genomes with the Genome Taxonomy Database. Bioinformatics (2019)","title":"gtdb"},{"location":"bactopia-tools/gtdb/#bactopia-tool-gtdb","text":"The gtdb tool uses GTDB-Tk's classify workflow to assign taxonomic classifications to your set of samples. This is done through the use of the Genome Taxonomy Database . If you are unsure of your sequences, gtdb is useful tool to help determine the taxonomy of your samples.","title":"Bactopia Tool - gtdb"},{"location":"bactopia-tools/gtdb/#example-usage","text":"bactopia --wf gtdb \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/gtdb/#output-overview","text":"Below is the default output structure for the gtdb tool. Where possible the file descriptions below were modified from a tools description. gtdb/ \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 gtdb-report.html \u2502 \u251c\u2500\u2500 gtdb-timeline.html \u2502 \u2514\u2500\u2500 gtdb-trace.txt \u2514\u2500\u2500 classify \u251c\u2500\u2500 align \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).filtered.tsv \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).msa.fasta \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).user_msa.fasta \u2502 \u2514\u2500\u2500 intermediate_results \u2502 \u2514\u2500\u2500 gtdb.(ar122|bac120).marker_info.tsv \u251c\u2500\u2500 classify \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).classify.tree \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).summary.tsv \u2502 \u2514\u2500\u2500 intermediate_results \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).classification_pplacer.tsv \u2502 \u251c\u2500\u2500 gtdb.(ar122|bac120).red_dictionary.tsv \u2502 \u2514\u2500\u2500 pplacer \u2502 \u251c\u2500\u2500 pplacer.(ar122|bac120).json \u2502 \u2514\u2500\u2500 pplacer.(ar122|bac120).out \u251c\u2500\u2500 gtdb.(ar122|bac120).classify.tree \u251c\u2500\u2500 gtdb.(ar122|bac120).filtered.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).markers_summary.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).msa.fasta \u251c\u2500\u2500 gtdb.(ar122|bac120).summary.tsv \u251c\u2500\u2500 gtdb.(ar122|bac120).user_msa.fasta \u251c\u2500\u2500 gtdb.translation_table_summary.tsv \u2514\u2500\u2500 identify \u2514\u2500\u2500 intermediate_results \u2514\u2500\u2500 marker_genes \u2514\u2500\u2500 <SAMPLE_NAME> \u251c\u2500\u2500 prodigal_translation_table.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_pfam_tophit.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_pfam.tsv \u251c\u2500\u2500 <SAMPLE_NAME>_protein.{faa,fna,gff} \u251c\u2500\u2500 <SAMPLE_NAME>_tigrfam.out \u251c\u2500\u2500 <SAMPLE_NAME>_tigrfam_tophit.tsv \u2514\u2500\u2500 <SAMPLE_NAME>_tigrfam.tsv","title":"Output Overview"},{"location":"bactopia-tools/gtdb/#results","text":"","title":"Results"},{"location":"bactopia-tools/gtdb/#gtdb-tk","text":"Below is a description of the per-sample results from GTDB-Tk . For full details about each of the GTDB output files, see GTDB-Tk Classify Workflow page. Filename Description gtdb.(ar122|bac120).classify.tree Reference tree in Newick format containing query genomes placed with pplacer gtdb.(ar122|bac120).filtered.tsv List of genomes with an insufficient number of amino acids in MSA gtdb.(ar122|bac120).markers_summary.tsv Markers used in generation of the concatenated MSA and the order in which they were applied gtdb.(ar122|bac120).msa.fasta FASTA file containing MSA of submitted and reference genomes gtdb.(ar122|bac120).summary.tsv A summary of classifications provided by GTDB-Tk, see classification summary for more details gtdb.(ar122|bac120).user_msa.fasta FASTA file containing MSA of the submitted genomes gtdb.translation_table_summary.tsv Summary of the tranlastlation table used for each genome gtdb.(ar122|bac120).classification_pplacer.tsv Classification of query genomes based only on their placement in the reference tree gtdb.(ar122|bac120).red_dictionary.tsv Median RED values for taxonomic ranks pplacer.(ar122|bac120).json Output information generated by pplacer in JSON format pplacer.(ar122|bac120).out Output information generated by pplacer gtdb.ar122.markers_summary.tsv Summary of unique, duplicated, and missing markers within the 122 archaeal marker set for each submitted genome gtdb.bac120.markers_summary.tsv Summary of unique, duplicated, and missing markers within the 120 bacterial marker set for each submitted genome gtdb.translation_table_summary.tsv The predicted translation table used for gene calling for each genome marker_genes/ Contains individual genome results for gene calling using Prodigal and gene identification based on TIGRFAM and Pfam HMMs","title":"GTDB-Tk"},{"location":"bactopia-tools/gtdb/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/gtdb/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/gtdb/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description gtdb-dag.dot The Nextflow DAG visualisation gtdb-report.html The Nextflow Execution Report gtdb-timeline.html The Nextflow Timeline Report gtdb-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/gtdb/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/gtdb/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/gtdb/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/gtdb/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/gtdb/#gtdb-setup-parameters","text":"Parameter Description Default --gtdb Location of a GTDB database. If a database is not found, you must use '--download_gtdb' --download_gtdb Download the latest GTDB database, even it exists False --skip_check Do not check the installation of GTDB database False","title":"GTDB Setup Parameters"},{"location":"bactopia-tools/gtdb/#gtdb-classify-parameters","text":"Parameter Description Default --min_af Minimum alignment fraction to consider closest genome 0.65 --min_perc_aa Filter genomes with an insufficient percentage of AA in the MSA 10 --gtdb_tmp Specify alternative directory for temporary files /tmp --gtdb_use_scratch Reduce pplacer memory usage by writing to --gtdb_tmp location (slower) False --gtdb_debug Create intermediate files for debugging purposes False --force_gtdb Continue processing if an error occurs on a single genome False","title":"GTDB Classify Parameters"},{"location":"bactopia-tools/gtdb/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/gtdb/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/gtdb/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/gtdb/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/gtdb/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/gtdb/#citations","text":"If you use Bactopia and gtdb in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Genome Taxonomy Database Parks DH, Chuvochina M, Rinke C, Mussig AJ, Chaumeil P-A, Hugenholtz P GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy Nucleic Acids Research gkab776 (2021) GTDB-Tk Chaumeil PA, Mussig AJ, Hugenholtz P, Parks DH GTDB-Tk: a toolkit to classify genomes with the Genome Taxonomy Database. Bioinformatics (2019)","title":"Citations"},{"location":"bactopia-tools/hicap/","tags":["capsule","Haemophilus influenzae","serotype"],"text":"Bactopia Tool - hicap \u00b6 The hicap module uses hicap allong wih an assembly for the in silico typing of the Haemophilus influenzae cap locus. Example Usage \u00b6 bactopia --wf hicap \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the hicap tool. Where possible the file descriptions below were modified from a tools description. hicap/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gbk \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.svg \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 hicap \u2502 \u251c\u2500\u2500 nf-hicap.{begin,err,log,out,run,sh,trace} \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 hicap-dag.dot \u2502 \u251c\u2500\u2500 hicap-report.html \u2502 \u251c\u2500\u2500 hicap-timeline.html \u2502 \u2514\u2500\u2500 hicap-trace.txt \u251c\u2500\u2500 hicap.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different hicap is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the hicap directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description hicap.tsv A merged TSV file with hicap results from all samples hicap \u00b6 Below is a description of the per-sample results from hicap . Filename Description <SAMPLE_NAME>.gbk GenBank file and cap locus annotations <SAMPLE_NAME>.svg Visualization of annotated cap locus <SAMPLE_NAME>.tsv A tab-delimited file with hicap results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description hicap-dag.dot The Nextflow DAG visualisation hicap-report.html The Nextflow Execution Report hicap-timeline.html The Nextflow Timeline Report hicap-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis hicap Parameters \u00b6 Parameter Description Default --database_dir Directory containing locus database --model_fp Path to prodigal model --full_sequence Write the full input sequence out to the genbank file rather than just the region surrounding and including the locus False --hicap_debug hicap will print debug messages False --gene_coverage Minimum percentage coverage to consider a single gene complete 0.8 --gene_identity Minimum percentage identity to consider a single gene complete 0.7 --broken_gene_length Minimum length to consider a broken gene 60 --broken_gene_identity Minimum percentage identity to consider a broken gene 0.8 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and hicap in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) hicap Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019)","title":"hicap"},{"location":"bactopia-tools/hicap/#bactopia-tool-hicap","text":"The hicap module uses hicap allong wih an assembly for the in silico typing of the Haemophilus influenzae cap locus.","title":"Bactopia Tool - hicap"},{"location":"bactopia-tools/hicap/#example-usage","text":"bactopia --wf hicap \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/hicap/#output-overview","text":"Below is the default output structure for the hicap tool. Where possible the file descriptions below were modified from a tools description. hicap/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.gbk \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.svg \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 hicap \u2502 \u251c\u2500\u2500 nf-hicap.{begin,err,log,out,run,sh,trace} \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 hicap-dag.dot \u2502 \u251c\u2500\u2500 hicap-report.html \u2502 \u251c\u2500\u2500 hicap-timeline.html \u2502 \u2514\u2500\u2500 hicap-trace.txt \u251c\u2500\u2500 hicap.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different hicap is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the hicap directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/hicap/#results","text":"","title":"Results"},{"location":"bactopia-tools/hicap/#top-level","text":"Below are results that are in the base directory. Filename Description hicap.tsv A merged TSV file with hicap results from all samples","title":"Top Level"},{"location":"bactopia-tools/hicap/#hicap","text":"Below is a description of the per-sample results from hicap . Filename Description <SAMPLE_NAME>.gbk GenBank file and cap locus annotations <SAMPLE_NAME>.svg Visualization of annotated cap locus <SAMPLE_NAME>.tsv A tab-delimited file with hicap results","title":"hicap"},{"location":"bactopia-tools/hicap/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/hicap/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/hicap/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description hicap-dag.dot The Nextflow DAG visualisation hicap-report.html The Nextflow Execution Report hicap-timeline.html The Nextflow Timeline Report hicap-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/hicap/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/hicap/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/hicap/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/hicap/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/hicap/#hicap-parameters","text":"Parameter Description Default --database_dir Directory containing locus database --model_fp Path to prodigal model --full_sequence Write the full input sequence out to the genbank file rather than just the region surrounding and including the locus False --hicap_debug hicap will print debug messages False --gene_coverage Minimum percentage coverage to consider a single gene complete 0.8 --gene_identity Minimum percentage identity to consider a single gene complete 0.7 --broken_gene_length Minimum length to consider a broken gene 60 --broken_gene_identity Minimum percentage identity to consider a broken gene 0.8","title":"hicap Parameters"},{"location":"bactopia-tools/hicap/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/hicap/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/hicap/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/hicap/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/hicap/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/hicap/#citations","text":"If you use Bactopia and hicap in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) hicap Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019)","title":"Citations"},{"location":"bactopia-tools/hpsuissero/","text":"Bactopia Tool - hpsuissero \u00b6 The hpsuissero module uses HpsuisSero to predict the serotype of Haemophilus parasuis assemblies. Example Usage \u00b6 bactopia --wf hpsuissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the hpsuissero tool. Where possible the file descriptions below were modified from a tools description. hpsuissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 hpsuissero \u2502 \u251c\u2500\u2500 nf-hpsuissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 hpsuissero-dag.dot \u2502 \u251c\u2500\u2500 hpsuissero-report.html \u2502 \u251c\u2500\u2500 hpsuissero-timeline.html \u2502 \u2514\u2500\u2500 hpsuissero-trace.txt \u251c\u2500\u2500 hpsuissero.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different hpsuissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the hpsuissero directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description hpsuissero.tsv A merged TSV file with HpsuisSero results from all samples HpsuisSero \u00b6 Below is a description of the per-sample results from HpsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with HpsuisSero result Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description hpsuissero-dag.dot The Nextflow DAG visualisation hpsuissero-report.html The Nextflow Execution Report hpsuissero-timeline.html The Nextflow Timeline Report hpsuissero-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis HpsuisSero Parameters \u00b6 Parameter Description Default Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and hpsuissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020)","title":"hpsuissero"},{"location":"bactopia-tools/hpsuissero/#bactopia-tool-hpsuissero","text":"The hpsuissero module uses HpsuisSero to predict the serotype of Haemophilus parasuis assemblies.","title":"Bactopia Tool - hpsuissero"},{"location":"bactopia-tools/hpsuissero/#example-usage","text":"bactopia --wf hpsuissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/hpsuissero/#output-overview","text":"Below is the default output structure for the hpsuissero tool. Where possible the file descriptions below were modified from a tools description. hpsuissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 hpsuissero \u2502 \u251c\u2500\u2500 nf-hpsuissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 hpsuissero-dag.dot \u2502 \u251c\u2500\u2500 hpsuissero-report.html \u2502 \u251c\u2500\u2500 hpsuissero-timeline.html \u2502 \u2514\u2500\u2500 hpsuissero-trace.txt \u251c\u2500\u2500 hpsuissero.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different hpsuissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the hpsuissero directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/hpsuissero/#results","text":"","title":"Results"},{"location":"bactopia-tools/hpsuissero/#top-level","text":"Below are results that are in the base directory. Filename Description hpsuissero.tsv A merged TSV file with HpsuisSero results from all samples","title":"Top Level"},{"location":"bactopia-tools/hpsuissero/#hpsuissero","text":"Below is a description of the per-sample results from HpsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with HpsuisSero result","title":"HpsuisSero"},{"location":"bactopia-tools/hpsuissero/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/hpsuissero/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/hpsuissero/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description hpsuissero-dag.dot The Nextflow DAG visualisation hpsuissero-report.html The Nextflow Execution Report hpsuissero-timeline.html The Nextflow Timeline Report hpsuissero-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/hpsuissero/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/hpsuissero/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/hpsuissero/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/hpsuissero/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/hpsuissero/#hpsuissero-parameters","text":"Parameter Description Default","title":"HpsuisSero Parameters"},{"location":"bactopia-tools/hpsuissero/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/hpsuissero/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/hpsuissero/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/hpsuissero/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/hpsuissero/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/hpsuissero/#citations","text":"If you use Bactopia and hpsuissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020)","title":"Citations"},{"location":"bactopia-tools/iqtree/","tags":["alignment","phylogeny"],"text":"Bactopia Tool - iqtree \u00b6 The iqtree module uses IQ-TREE to create phylogenetic trees based on a multiple sequence alignment. In most cases the iqtree module will be used in a subworkflow where an alignment is created. Example Usage \u00b6 bactopia --wf iqtree \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis IQ-TREE Parameters \u00b6 Parameter Description Default --m Substitution model name MFP --bb Ultrafast bootstrap replicates 1000 --alrt SH-like approximate likelihood ratio test replicates 1000 --asr Ancestral state reconstruction by empirical Bayes False --iqtree_opts Extra IQ-TREE options in quotes. --skip_phylogeny Skip IQ-TREE execution in subworkflows False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and iqtree in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018)","title":"Bactopia Tool - `iqtree`"},{"location":"bactopia-tools/iqtree/#bactopia-tool-iqtree","text":"The iqtree module uses IQ-TREE to create phylogenetic trees based on a multiple sequence alignment. In most cases the iqtree module will be used in a subworkflow where an alignment is created.","title":"Bactopia Tool - iqtree"},{"location":"bactopia-tools/iqtree/#example-usage","text":"bactopia --wf iqtree \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/iqtree/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/iqtree/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/iqtree/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/iqtree/#iq-tree-parameters","text":"Parameter Description Default --m Substitution model name MFP --bb Ultrafast bootstrap replicates 1000 --alrt SH-like approximate likelihood ratio test replicates 1000 --asr Ancestral state reconstruction by empirical Bayes False --iqtree_opts Extra IQ-TREE options in quotes. --skip_phylogeny Skip IQ-TREE execution in subworkflows False","title":"IQ-TREE Parameters"},{"location":"bactopia-tools/iqtree/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/iqtree/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/iqtree/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/iqtree/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/iqtree/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/iqtree/#citations","text":"If you use Bactopia and iqtree in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018)","title":"Citations"},{"location":"bactopia-tools/ismapper/","tags":["fastq","insertion sequences"],"text":"Bactopia Tool - ismapper \u00b6 The ismapper module uses ISMapper to search for insertion sites in your samples. Example Usage \u00b6 bactopia --wf ismapper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the ismapper tool. Where possible the file descriptions below were modified from a tools description. ismapper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <INSERTION_NAME> \u2502 \u2502 \u2514\u2500\u2500 <FASTA_ENTRY> \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_<FASTA_ENTRY>_{left_final,right_final}.fastq \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_closest.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_intersect.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_table.txt \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_finalcov.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_merged.sorted.bed \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_unpaired.bed \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ismapper \u2502 \u2514\u2500\u2500 <INSERTION_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.log \u2502 \u251c\u2500\u2500 nf-ismapper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ismapper-dag.dot \u2502 \u251c\u2500\u2500 ismapper-report.html \u2502 \u251c\u2500\u2500 ismapper-timeline.html \u2502 \u2514\u2500\u2500 ismapper-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 ISMapper \u00b6 Below is a description of the per-sample results from ISMapper . Extension Description _final.fastq Sequences (FASTQ format) that mapped to the flanking regions of the IS query _closest.bed Merged regions that are close but do not overlap _intersect.bed An intersection of merged regions from the left and right flanks. _table.txt A detailed description of the IS query results. _finalcov.bed Contains information about the coverage of the IS query _merged.sorted.bed Merged overlapping regions that passed coverage cutoffs _unpaired.bed All unpaired mappings to the IS query Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ismapper-dag.dot The Nextflow DAG visualisation ismapper-report.html The Nextflow Execution Report ismapper-timeline.html The Nextflow Timeline Report ismapper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ISMapper Parameters \u00b6 Parameter Description Default --reference Reference genome for typing against in GenBank format --insertions Multifasta file with insertion sequence(s) to be mapped to --min_clip Minimum size for softclipped region to be extracted from initial mapping 10 --max_clip Maximum size for softclipped regions to be included 30 --cutoff Minimum depth for mapped region to be kept in bed file 6 --novel_gap_size Distance in base pairs between left and right flanks to be called a novel hit 15 --min_range Minimum percent size of the gap to be called a known hit 0.9 --max_range Maximum percent size of the gap to be called a known hit 1.1 --merging Value for merging left and right hits in bed files together to simply calculation of closest and intersecting regions 100 --ismap_all Switch on all alignment reporting for bwa False --ismap_minqual Mapping quality score for bwa 30 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ismapper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ISMapper Hawkey J, Hamidian M, Wick RR, Edwards DJ, Billman-Jacobe H, Hall RM, Holt KE ISMapper: identifying transposase insertion sites in bacterial genomes from short read sequence data . BMC Genomics 16, 667 (2015)","title":"ismapper"},{"location":"bactopia-tools/ismapper/#bactopia-tool-ismapper","text":"The ismapper module uses ISMapper to search for insertion sites in your samples.","title":"Bactopia Tool - ismapper"},{"location":"bactopia-tools/ismapper/#example-usage","text":"bactopia --wf ismapper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ismapper/#output-overview","text":"Below is the default output structure for the ismapper tool. Where possible the file descriptions below were modified from a tools description. ismapper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <INSERTION_NAME> \u2502 \u2502 \u2514\u2500\u2500 <FASTA_ENTRY> \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_<FASTA_ENTRY>_{left_final,right_final}.fastq \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_closest.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_intersect.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>__<REFERENCE>_table.txt \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_finalcov.bed \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_merged.sorted.bed \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_{left,right}_<REFERENCE>_unpaired.bed \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ismapper \u2502 \u2514\u2500\u2500 <INSERTION_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.log \u2502 \u251c\u2500\u2500 nf-ismapper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ismapper-dag.dot \u2502 \u251c\u2500\u2500 ismapper-report.html \u2502 \u251c\u2500\u2500 ismapper-timeline.html \u2502 \u2514\u2500\u2500 ismapper-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/ismapper/#results","text":"","title":"Results"},{"location":"bactopia-tools/ismapper/#ismapper","text":"Below is a description of the per-sample results from ISMapper . Extension Description _final.fastq Sequences (FASTQ format) that mapped to the flanking regions of the IS query _closest.bed Merged regions that are close but do not overlap _intersect.bed An intersection of merged regions from the left and right flanks. _table.txt A detailed description of the IS query results. _finalcov.bed Contains information about the coverage of the IS query _merged.sorted.bed Merged overlapping regions that passed coverage cutoffs _unpaired.bed All unpaired mappings to the IS query","title":"ISMapper"},{"location":"bactopia-tools/ismapper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/ismapper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/ismapper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ismapper-dag.dot The Nextflow DAG visualisation ismapper-report.html The Nextflow Execution Report ismapper-timeline.html The Nextflow Timeline Report ismapper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/ismapper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/ismapper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ismapper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ismapper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ismapper/#ismapper-parameters","text":"Parameter Description Default --reference Reference genome for typing against in GenBank format --insertions Multifasta file with insertion sequence(s) to be mapped to --min_clip Minimum size for softclipped region to be extracted from initial mapping 10 --max_clip Maximum size for softclipped regions to be included 30 --cutoff Minimum depth for mapped region to be kept in bed file 6 --novel_gap_size Distance in base pairs between left and right flanks to be called a novel hit 15 --min_range Minimum percent size of the gap to be called a known hit 0.9 --max_range Maximum percent size of the gap to be called a known hit 1.1 --merging Value for merging left and right hits in bed files together to simply calculation of closest and intersecting regions 100 --ismap_all Switch on all alignment reporting for bwa False --ismap_minqual Mapping quality score for bwa 30","title":"ISMapper Parameters"},{"location":"bactopia-tools/ismapper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ismapper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ismapper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ismapper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ismapper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ismapper/#citations","text":"If you use Bactopia and ismapper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ISMapper Hawkey J, Hamidian M, Wick RR, Edwards DJ, Billman-Jacobe H, Hall RM, Holt KE ISMapper: identifying transposase insertion sites in bacterial genomes from short read sequence data . BMC Genomics 16, 667 (2015)","title":"Citations"},{"location":"bactopia-tools/kleborate/","tags":["enterics","fasta","klebsiella","serotype"],"text":"Bactopia Tool - kleborate \u00b6 The kleborate module uses Kleborate to screen genome assemblies of Klebsiella pneumoniae and the Klebsiella pneumoniae species complex (KpSC). Kleborate predicts: MLST, species, ICEKp associated virulence loci virulence plasmid associated loci antimicrobial resistance determinants, K (capsule) and O antigen (LPS) serotype prediction. Example Usage \u00b6 bactopia --wf kleborate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the kleborate tool. Where possible the file descriptions below were modified from a tools description. kleborate \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 kleborate \u2502 \u251c\u2500\u2500 nf-kleborate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 kleborate-dag.dot \u2502 \u251c\u2500\u2500 kleborate-report.html \u2502 \u251c\u2500\u2500 kleborate-timeline.html \u2502 \u2514\u2500\u2500 kleborate-trace.txt \u251c\u2500\u2500 kleborate.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different kleborate is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the kleborate directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description kleborate.tsv A merged TSV file with Kleborate results from all samples Kleborate \u00b6 Below is a description of the per-sample results from Kleborate . Filename Description <SAMPLE_NAME>.results.tsv A tab-delimited file with Kleborate result, see Kleborate - Example output for more details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description kleborate-dag.dot The Nextflow DAG visualisation kleborate-report.html The Nextflow Execution Report kleborate-timeline.html The Nextflow Timeline Report kleborate-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Kleborate Parameters \u00b6 Parameter Description Default --skip_resistance Turn off resistance genes screening False --skip_kaptive Turn off Kaptive screening of K and O loci False --min_identity Minimum alignment percent identity for main results 90.0 --kleborate_min_coverage Minimum alignment percent coverage for main results 80.0 --min_spurious_identity Minimum alignment percent identity for spurious results 80.0 --min_spurious_coverage Minimum alignment percent coverage for spurious results 40.0 --min_kaptive_confidence Minimum Kaptive confidence to call K/O loci - confidence levels below this will be reported as unknown Good --force_index Rebuild the BLAST index at the start of execution False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and kleborate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Kaptive Wyres KL, Wick RR, Gorrie C, Jenney A, Follador R, Thomson NR, Holt KE Identification of Klebsiella capsule synthesis loci from whole genome data. Microbial genomics 2(12) (2016) Kleborate Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021)","title":"kleborate"},{"location":"bactopia-tools/kleborate/#bactopia-tool-kleborate","text":"The kleborate module uses Kleborate to screen genome assemblies of Klebsiella pneumoniae and the Klebsiella pneumoniae species complex (KpSC). Kleborate predicts: MLST, species, ICEKp associated virulence loci virulence plasmid associated loci antimicrobial resistance determinants, K (capsule) and O antigen (LPS) serotype prediction.","title":"Bactopia Tool - kleborate"},{"location":"bactopia-tools/kleborate/#example-usage","text":"bactopia --wf kleborate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/kleborate/#output-overview","text":"Below is the default output structure for the kleborate tool. Where possible the file descriptions below were modified from a tools description. kleborate \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 kleborate \u2502 \u251c\u2500\u2500 nf-kleborate.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 kleborate-dag.dot \u2502 \u251c\u2500\u2500 kleborate-report.html \u2502 \u251c\u2500\u2500 kleborate-timeline.html \u2502 \u2514\u2500\u2500 kleborate-trace.txt \u251c\u2500\u2500 kleborate.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different kleborate is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the kleborate directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/kleborate/#results","text":"","title":"Results"},{"location":"bactopia-tools/kleborate/#top-level","text":"Below are results that are in the base directory. Filename Description kleborate.tsv A merged TSV file with Kleborate results from all samples","title":"Top Level"},{"location":"bactopia-tools/kleborate/#kleborate","text":"Below is a description of the per-sample results from Kleborate . Filename Description <SAMPLE_NAME>.results.tsv A tab-delimited file with Kleborate result, see Kleborate - Example output for more details","title":"Kleborate"},{"location":"bactopia-tools/kleborate/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/kleborate/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/kleborate/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description kleborate-dag.dot The Nextflow DAG visualisation kleborate-report.html The Nextflow Execution Report kleborate-timeline.html The Nextflow Timeline Report kleborate-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/kleborate/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/kleborate/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/kleborate/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/kleborate/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/kleborate/#kleborate-parameters","text":"Parameter Description Default --skip_resistance Turn off resistance genes screening False --skip_kaptive Turn off Kaptive screening of K and O loci False --min_identity Minimum alignment percent identity for main results 90.0 --kleborate_min_coverage Minimum alignment percent coverage for main results 80.0 --min_spurious_identity Minimum alignment percent identity for spurious results 80.0 --min_spurious_coverage Minimum alignment percent coverage for spurious results 40.0 --min_kaptive_confidence Minimum Kaptive confidence to call K/O loci - confidence levels below this will be reported as unknown Good --force_index Rebuild the BLAST index at the start of execution False","title":"Kleborate Parameters"},{"location":"bactopia-tools/kleborate/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/kleborate/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/kleborate/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/kleborate/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/kleborate/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/kleborate/#citations","text":"If you use Bactopia and kleborate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Kaptive Wyres KL, Wick RR, Gorrie C, Jenney A, Follador R, Thomson NR, Holt KE Identification of Klebsiella capsule synthesis loci from whole genome data. Microbial genomics 2(12) (2016) Kleborate Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021)","title":"Citations"},{"location":"bactopia-tools/kraken2/","text":"Bactopia Tool - kraken \u00b6 The kraken2 module uses Kraken2 to assign taxonomic classifications to your sequence reads. Example Usage \u00b6 bactopia --wf kraken \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the kraken tool. Where possible the file descriptions below were modified from a tools description. kraken2/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.classified{_1,_2}.fastq.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.kraken2.report.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.unclassified{_1,_2}.fastq.gz \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 kraken2 \u2502 \u251c\u2500\u2500 nf-kraken2.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 kraken2-dag.dot \u2502 \u251c\u2500\u2500 kraken2-report.html \u2502 \u251c\u2500\u2500 kraken2-timeline.html \u2502 \u2514\u2500\u2500 kraken2-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Kraken2 \u00b6 Below is a description of the per-sample results from Kraken2 . Filename Description <SAMPLE_NAME>.classified{_1,_2}.fastq.gz Reads classified to belong to any of the taxa on the Kraken2 database. <SAMPLE_NAME>.kraken2.report.txt Kraken2 report containing stats about classified and not classifed reads. See Kraken2 - Output Formats for more details <SAMPLE_NAME>.unclassified{_1,_2}.fastq.gz Reads not classified to belong to any of the taxa on the Kraken2 database. Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description kraken-dag.dot The Nextflow DAG visualisation kraken-report.html The Nextflow Execution Report kraken-timeline.html The Nextflow Timeline Report kraken-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Kraken2 Parameters \u00b6 Parameter Description Default --kraken2_db The path to a Kraken2 formatted database --quick_mode Quick operation (use first hit or hits) False --confidence Confidence score threshold between 0 and 1 0.0 --minimum_base_quality Minimum base quality used in classification 0 --use_mpa_style Format report output like Kraken 1's kraken-mpa-report False --report_zero_counts Report counts for ALL taxa, even if counts are zero False --report_minimizer_data Include minimizer and distinct minimizer count information in report False --use_names Print scientific names instead of just taxids False --memory_mapping Avoid loading database into RAM False --minimum_hit_groups Minimum number of hit groups needed to make a call 2 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and kraken in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Kraken2 Wood DE, Lu J, Langmead B Improved metagenomic analysis with Kraken 2. Genome Biology , 20(1), 257. (2019)","title":"kraken2"},{"location":"bactopia-tools/kraken2/#bactopia-tool-kraken","text":"The kraken2 module uses Kraken2 to assign taxonomic classifications to your sequence reads.","title":"Bactopia Tool - kraken"},{"location":"bactopia-tools/kraken2/#example-usage","text":"bactopia --wf kraken \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/kraken2/#output-overview","text":"Below is the default output structure for the kraken tool. Where possible the file descriptions below were modified from a tools description. kraken2/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.classified{_1,_2}.fastq.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.kraken2.report.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.unclassified{_1,_2}.fastq.gz \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 kraken2 \u2502 \u251c\u2500\u2500 nf-kraken2.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 kraken2-dag.dot \u2502 \u251c\u2500\u2500 kraken2-report.html \u2502 \u251c\u2500\u2500 kraken2-timeline.html \u2502 \u2514\u2500\u2500 kraken2-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/kraken2/#results","text":"","title":"Results"},{"location":"bactopia-tools/kraken2/#kraken2","text":"Below is a description of the per-sample results from Kraken2 . Filename Description <SAMPLE_NAME>.classified{_1,_2}.fastq.gz Reads classified to belong to any of the taxa on the Kraken2 database. <SAMPLE_NAME>.kraken2.report.txt Kraken2 report containing stats about classified and not classifed reads. See Kraken2 - Output Formats for more details <SAMPLE_NAME>.unclassified{_1,_2}.fastq.gz Reads not classified to belong to any of the taxa on the Kraken2 database.","title":"Kraken2"},{"location":"bactopia-tools/kraken2/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/kraken2/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/kraken2/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description kraken-dag.dot The Nextflow DAG visualisation kraken-report.html The Nextflow Execution Report kraken-timeline.html The Nextflow Timeline Report kraken-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/kraken2/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/kraken2/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/kraken2/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/kraken2/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/kraken2/#kraken2-parameters","text":"Parameter Description Default --kraken2_db The path to a Kraken2 formatted database --quick_mode Quick operation (use first hit or hits) False --confidence Confidence score threshold between 0 and 1 0.0 --minimum_base_quality Minimum base quality used in classification 0 --use_mpa_style Format report output like Kraken 1's kraken-mpa-report False --report_zero_counts Report counts for ALL taxa, even if counts are zero False --report_minimizer_data Include minimizer and distinct minimizer count information in report False --use_names Print scientific names instead of just taxids False --memory_mapping Avoid loading database into RAM False --minimum_hit_groups Minimum number of hit groups needed to make a call 2","title":"Kraken2 Parameters"},{"location":"bactopia-tools/kraken2/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/kraken2/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/kraken2/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/kraken2/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/kraken2/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/kraken2/#citations","text":"If you use Bactopia and kraken in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Kraken2 Wood DE, Lu J, Langmead B Improved metagenomic analysis with Kraken 2. Genome Biology , 20(1), 257. (2019)","title":"Citations"},{"location":"bactopia-tools/legsta/","text":"Bactopia Tool - legsta \u00b6 The legsta module uses legsta for in silico Legionella pneumophila Sequence Based Typing (SBT). Example Usage \u00b6 bactopia --wf legsta \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the legsta tool. Where possible the file descriptions below were modified from a tools description. legsta/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 legsta \u2502 \u251c\u2500\u2500 nf-legsta.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 legsta-dag.dot \u2502 \u251c\u2500\u2500 legsta-report.html \u2502 \u251c\u2500\u2500 legsta-timeline.html \u2502 \u2514\u2500\u2500 legsta-trace.txt \u251c\u2500\u2500 legsta.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different legsta is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the legsta directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description legsta.tsv A merged TSV file with legsta results from all samples legsta \u00b6 Below is a description of the per-sample results from legsta . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with legsta result, see legsta - Output for more details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description legsta-dag.dot The Nextflow DAG visualisation legsta-report.html The Nextflow Execution Report legsta-timeline.html The Nextflow Timeline Report legsta-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis legsta Parameters \u00b6 Parameter Description Default --noheader Don't print header row False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and legsta in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) legsta Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub)","title":"legsta"},{"location":"bactopia-tools/legsta/#bactopia-tool-legsta","text":"The legsta module uses legsta for in silico Legionella pneumophila Sequence Based Typing (SBT).","title":"Bactopia Tool - legsta"},{"location":"bactopia-tools/legsta/#example-usage","text":"bactopia --wf legsta \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/legsta/#output-overview","text":"Below is the default output structure for the legsta tool. Where possible the file descriptions below were modified from a tools description. legsta/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 legsta \u2502 \u251c\u2500\u2500 nf-legsta.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 legsta-dag.dot \u2502 \u251c\u2500\u2500 legsta-report.html \u2502 \u251c\u2500\u2500 legsta-timeline.html \u2502 \u2514\u2500\u2500 legsta-trace.txt \u251c\u2500\u2500 legsta.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different legsta is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the legsta directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/legsta/#results","text":"","title":"Results"},{"location":"bactopia-tools/legsta/#top-level","text":"Below are results that are in the base directory. Filename Description legsta.tsv A merged TSV file with legsta results from all samples","title":"Top Level"},{"location":"bactopia-tools/legsta/#legsta","text":"Below is a description of the per-sample results from legsta . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with legsta result, see legsta - Output for more details","title":"legsta"},{"location":"bactopia-tools/legsta/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/legsta/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/legsta/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description legsta-dag.dot The Nextflow DAG visualisation legsta-report.html The Nextflow Execution Report legsta-timeline.html The Nextflow Timeline Report legsta-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/legsta/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/legsta/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/legsta/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/legsta/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/legsta/#legsta-parameters","text":"Parameter Description Default --noheader Don't print header row False","title":"legsta Parameters"},{"location":"bactopia-tools/legsta/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/legsta/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/legsta/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/legsta/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/legsta/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/legsta/#citations","text":"If you use Bactopia and legsta in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) legsta Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub)","title":"Citations"},{"location":"bactopia-tools/lissero/","tags":["fasta","Listeria monocytogenes","serotype"],"text":"Bactopia Tool - lissero \u00b6 The lissero module uses LisSero for in silico serotype prediction for Listeria monocytogenes assemblies. Example Usage \u00b6 bactopia --wf lissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the lissero tool. Where possible the file descriptions below were modified from a tools description. lissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 lissero \u2502 \u251c\u2500\u2500 nf-lissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 lissero-dag.dot \u2502 \u251c\u2500\u2500 lissero-report.html \u2502 \u251c\u2500\u2500 lissero-timeline.html \u2502 \u2514\u2500\u2500 lissero-trace.txt \u251c\u2500\u2500 lissero.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different lissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the lissero directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description lissero.tsv A merged TSV file with LisSero results from all samples LisSero \u00b6 Below is a description of the per-sample results from LisSero . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with LisSero results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description lissero-dag.dot The Nextflow DAG visualisation lissero-report.html The Nextflow Execution Report lissero-timeline.html The Nextflow Timeline Report lissero-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis LisSero Parameters \u00b6 Parameter Description Default --min_id Minimum percent identity to accept a match 95.0 --min_cov Minimum coverage of the gene to accept a match 95.0 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and lissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) LisSero Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub)","title":"lissero"},{"location":"bactopia-tools/lissero/#bactopia-tool-lissero","text":"The lissero module uses LisSero for in silico serotype prediction for Listeria monocytogenes assemblies.","title":"Bactopia Tool - lissero"},{"location":"bactopia-tools/lissero/#example-usage","text":"bactopia --wf lissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/lissero/#output-overview","text":"Below is the default output structure for the lissero tool. Where possible the file descriptions below were modified from a tools description. lissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 lissero \u2502 \u251c\u2500\u2500 nf-lissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 lissero-dag.dot \u2502 \u251c\u2500\u2500 lissero-report.html \u2502 \u251c\u2500\u2500 lissero-timeline.html \u2502 \u2514\u2500\u2500 lissero-trace.txt \u251c\u2500\u2500 lissero.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different lissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the lissero directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/lissero/#results","text":"","title":"Results"},{"location":"bactopia-tools/lissero/#top-level","text":"Below are results that are in the base directory. Filename Description lissero.tsv A merged TSV file with LisSero results from all samples","title":"Top Level"},{"location":"bactopia-tools/lissero/#lissero","text":"Below is a description of the per-sample results from LisSero . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with LisSero results","title":"LisSero"},{"location":"bactopia-tools/lissero/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/lissero/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/lissero/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description lissero-dag.dot The Nextflow DAG visualisation lissero-report.html The Nextflow Execution Report lissero-timeline.html The Nextflow Timeline Report lissero-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/lissero/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/lissero/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/lissero/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/lissero/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/lissero/#lissero-parameters","text":"Parameter Description Default --min_id Minimum percent identity to accept a match 95.0 --min_cov Minimum coverage of the gene to accept a match 95.0","title":"LisSero Parameters"},{"location":"bactopia-tools/lissero/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/lissero/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/lissero/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/lissero/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/lissero/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/lissero/#citations","text":"If you use Bactopia and lissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) LisSero Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub)","title":"Citations"},{"location":"bactopia-tools/mashdist/","text":"Bactopia Tool - mashdist \u00b6 The mashdist module uses Mash to determine the Mash distance from a given reference genome(s). Example Usage \u00b6 bactopia --wf mashdist \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the mashdist tool. Where possible the file descriptions below were modified from a tools description. mashdist/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-dist.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 mashdist \u2502 \u251c\u2500\u2500 nf-mashdist{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mashdist-dag.dot \u2502 \u251c\u2500\u2500 mashdist-report.html \u2502 \u251c\u2500\u2500 mashdist-timeline.html \u2502 \u2514\u2500\u2500 mashdist-trace.txt \u251c\u2500\u2500 mashdist.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description mashdist.tsv A merged TSV file with Mash distances against a reference from all samples Mash \u00b6 Below is a description of the per-sample results from Mash . Filename Description <SAMPLE_NAME>-dist.txt A tab-delimited file with mash dist results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mashdist-dag.dot The Nextflow DAG visualisation mashdist-report.html The Nextflow Execution Report mashdist-timeline.html The Nextflow Timeline Report mashdist-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis mashdist Parameters \u00b6 Parameter Description Default --mash_sketch The reference sequence as a Mash Sketch (.msh file) --mash_seed Seed to provide to the hash function 42 --mash_table Table output (fields will be blank if they do not meet the p-value threshold) False --mash_m Minimum copies of each k-mer required to pass noise filter for reads 1 --mash_w Probability threshold for warning about low k-mer size. 0.01 --max_p Maximum p-value to report. 1.0 --max_dist Maximum distance to report. 1.0 --merlin_dist Maximum distance to report when using Merlin . 0.1 --full_merlin Go full Merlin and run all species-specific tools, no matter the Mash distance False --use_fastqs Query with FASTQs instead of the assemblies False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and mashdist in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016)","title":"mashdist"},{"location":"bactopia-tools/mashdist/#bactopia-tool-mashdist","text":"The mashdist module uses Mash to determine the Mash distance from a given reference genome(s).","title":"Bactopia Tool - mashdist"},{"location":"bactopia-tools/mashdist/#example-usage","text":"bactopia --wf mashdist \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/mashdist/#output-overview","text":"Below is the default output structure for the mashdist tool. Where possible the file descriptions below were modified from a tools description. mashdist/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-dist.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 mashdist \u2502 \u251c\u2500\u2500 nf-mashdist{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mashdist-dag.dot \u2502 \u251c\u2500\u2500 mashdist-report.html \u2502 \u251c\u2500\u2500 mashdist-timeline.html \u2502 \u2514\u2500\u2500 mashdist-trace.txt \u251c\u2500\u2500 mashdist.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/mashdist/#results","text":"","title":"Results"},{"location":"bactopia-tools/mashdist/#top-level","text":"Below are results that are in the base directory. Filename Description mashdist.tsv A merged TSV file with Mash distances against a reference from all samples","title":"Top Level"},{"location":"bactopia-tools/mashdist/#mash","text":"Below is a description of the per-sample results from Mash . Filename Description <SAMPLE_NAME>-dist.txt A tab-delimited file with mash dist results","title":"Mash"},{"location":"bactopia-tools/mashdist/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/mashdist/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/mashdist/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mashdist-dag.dot The Nextflow DAG visualisation mashdist-report.html The Nextflow Execution Report mashdist-timeline.html The Nextflow Timeline Report mashdist-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/mashdist/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/mashdist/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/mashdist/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/mashdist/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/mashdist/#mashdist-parameters","text":"Parameter Description Default --mash_sketch The reference sequence as a Mash Sketch (.msh file) --mash_seed Seed to provide to the hash function 42 --mash_table Table output (fields will be blank if they do not meet the p-value threshold) False --mash_m Minimum copies of each k-mer required to pass noise filter for reads 1 --mash_w Probability threshold for warning about low k-mer size. 0.01 --max_p Maximum p-value to report. 1.0 --max_dist Maximum distance to report. 1.0 --merlin_dist Maximum distance to report when using Merlin . 0.1 --full_merlin Go full Merlin and run all species-specific tools, no matter the Mash distance False --use_fastqs Query with FASTQs instead of the assemblies False","title":"mashdist Parameters"},{"location":"bactopia-tools/mashdist/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/mashdist/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/mashdist/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/mashdist/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/mashdist/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/mashdist/#citations","text":"If you use Bactopia and mashdist in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016)","title":"Citations"},{"location":"bactopia-tools/mashtree/","tags":["fasta","mash","tree"],"text":"Bactopia Tool - mashtree \u00b6 The mashtree module uses Mashtree to create a tree of your samples using Mash distance. You can also use --species or -accessions to see how your samples compare to completed genomes. If used, ncbi-genome-download will download available completed genomes available from RefSeq and they will be included in your tree. Example Usage \u00b6 bactopia --wf mashtree \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the mashtree tool. Where possible the file descriptions below were modified from a tools description. mashtree/ \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 mashtree \u2502 \u251c\u2500\u2500 nf-mashtree.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mashtree-dag.dot \u2502 \u251c\u2500\u2500 mashtree-report.html \u2502 \u251c\u2500\u2500 mashtree-timeline.html \u2502 \u2514\u2500\u2500 mashtree-trace.txt \u251c\u2500\u2500 mashtree.dnd \u251c\u2500\u2500 mashtree.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description mashtree.dnd A Newick formatted tree file mashtree.tsv A TSV matrix of pair-wise Mash distances Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mashtree-dag.dot The Nextflow DAG visualisation mashtree-report.html The Nextflow Execution Report mashtree-timeline.html The Nextflow Timeline Report mashtree-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Mashtree Parameters \u00b6 Parameter Description Default --trunclength How many characters to keep in a filename 250 --sortorder For neighbor-joining, the sort order can make a difference. ABC --genomesize Genome size of the input samples 5000000 --mindepth If mindepth is zero, then it will be chosen in a smart but slower method, to discard lower-abundance kmers. 5 --kmerlength Hashes will be based on strings of this many nucleotides 21 --sketchsize Each sketch will have at most this many non-redundant min-hashes 10000 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and mashtree in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) Mashtree Katz LS, Griswold T, Morrison S, Caravas J, Zhang S, den Bakker HC, Deng X, Carleton HA Mashtree: a rapid comparison of whole genome sequence files. Journal of Open Source Software , 4(44), 1762 (2019) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"mashtree"},{"location":"bactopia-tools/mashtree/#bactopia-tool-mashtree","text":"The mashtree module uses Mashtree to create a tree of your samples using Mash distance. You can also use --species or -accessions to see how your samples compare to completed genomes. If used, ncbi-genome-download will download available completed genomes available from RefSeq and they will be included in your tree.","title":"Bactopia Tool - mashtree"},{"location":"bactopia-tools/mashtree/#example-usage","text":"bactopia --wf mashtree \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/mashtree/#output-overview","text":"Below is the default output structure for the mashtree tool. Where possible the file descriptions below were modified from a tools description. mashtree/ \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 mashtree \u2502 \u251c\u2500\u2500 nf-mashtree.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mashtree-dag.dot \u2502 \u251c\u2500\u2500 mashtree-report.html \u2502 \u251c\u2500\u2500 mashtree-timeline.html \u2502 \u2514\u2500\u2500 mashtree-trace.txt \u251c\u2500\u2500 mashtree.dnd \u251c\u2500\u2500 mashtree.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/mashtree/#results","text":"","title":"Results"},{"location":"bactopia-tools/mashtree/#top-level","text":"Below are results that are in the base directory. Filename Description mashtree.dnd A Newick formatted tree file mashtree.tsv A TSV matrix of pair-wise Mash distances","title":"Top Level"},{"location":"bactopia-tools/mashtree/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/mashtree/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/mashtree/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mashtree-dag.dot The Nextflow DAG visualisation mashtree-report.html The Nextflow Execution Report mashtree-timeline.html The Nextflow Timeline Report mashtree-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/mashtree/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/mashtree/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/mashtree/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/mashtree/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/mashtree/#mashtree-parameters","text":"Parameter Description Default --trunclength How many characters to keep in a filename 250 --sortorder For neighbor-joining, the sort order can make a difference. ABC --genomesize Genome size of the input samples 5000000 --mindepth If mindepth is zero, then it will be chosen in a smart but slower method, to discard lower-abundance kmers. 5 --kmerlength Hashes will be based on strings of this many nucleotides 21 --sketchsize Each sketch will have at most this many non-redundant min-hashes 10000","title":"Mashtree Parameters"},{"location":"bactopia-tools/mashtree/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/mashtree/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/mashtree/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/mashtree/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/mashtree/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/mashtree/#citations","text":"If you use Bactopia and mashtree in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) Mashtree Katz LS, Griswold T, Morrison S, Caravas J, Zhang S, den Bakker HC, Deng X, Carleton HA Mashtree: a rapid comparison of whole genome sequence files. Journal of Open Source Software , 4(44), 1762 (2019) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"Citations"},{"location":"bactopia-tools/meningotype/","tags":["fasta","Neisseria meningitidis","serotype"],"text":"Bactopia Tool - meningotype \u00b6 The meningotype module uses meningotype for in silico typing of Neisseria meningitidis genomes. It uses the contigs from assemblies to determine the serotype, MLST, finetyping ( porA , fetA , porB ), and Bexsero antigen sequence typing (BAST) ( fHbp , NHBA , NadA , PorA ). Example Usage \u00b6 bactopia --wf meningotype \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the meningotype tool. Where possible the file descriptions below were modified from a tools description. meningotype/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 meningotype \u2502 \u251c\u2500\u2500 nf-meningotype.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 meningotype-dag.dot \u2502 \u251c\u2500\u2500 meningotype-report.html \u2502 \u251c\u2500\u2500 meningotype-timeline.html \u2502 \u2514\u2500\u2500 meningotype-trace.txt \u251c\u2500\u2500 meningotype.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different meningotype is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the meningotype directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description meningotype.tsv A merged TSV file with meningotype results from all samples meningotype \u00b6 Below is a description of the per-sample results from meningotype . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with meningotype result Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description meningotype-dag.dot The Nextflow DAG visualisation meningotype-report.html The Nextflow Execution Report meningotype-timeline.html The Nextflow Timeline Report meningotype-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis meningotype Parameters \u00b6 You can use these parameters to fine-tune your meningotype analysis Parameter Description Default --finetype perform porA and fetA fine typing False --porB perform porB sequence typing (NEIS2020) False --bast perform Bexsero antigen sequence typing (BAST) False --mlst perform MLST False --all perform MLST, porA, fetA, porB, BAST typing False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and meningotype in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) meningotype Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub)","title":"meningotype"},{"location":"bactopia-tools/meningotype/#bactopia-tool-meningotype","text":"The meningotype module uses meningotype for in silico typing of Neisseria meningitidis genomes. It uses the contigs from assemblies to determine the serotype, MLST, finetyping ( porA , fetA , porB ), and Bexsero antigen sequence typing (BAST) ( fHbp , NHBA , NadA , PorA ).","title":"Bactopia Tool - meningotype"},{"location":"bactopia-tools/meningotype/#example-usage","text":"bactopia --wf meningotype \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/meningotype/#output-overview","text":"Below is the default output structure for the meningotype tool. Where possible the file descriptions below were modified from a tools description. meningotype/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 meningotype \u2502 \u251c\u2500\u2500 nf-meningotype.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 meningotype-dag.dot \u2502 \u251c\u2500\u2500 meningotype-report.html \u2502 \u251c\u2500\u2500 meningotype-timeline.html \u2502 \u2514\u2500\u2500 meningotype-trace.txt \u251c\u2500\u2500 meningotype.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different meningotype is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the meningotype directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/meningotype/#results","text":"","title":"Results"},{"location":"bactopia-tools/meningotype/#top-level","text":"Below are results that are in the base directory. Filename Description meningotype.tsv A merged TSV file with meningotype results from all samples","title":"Top Level"},{"location":"bactopia-tools/meningotype/#meningotype","text":"Below is a description of the per-sample results from meningotype . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with meningotype result","title":"meningotype"},{"location":"bactopia-tools/meningotype/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/meningotype/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/meningotype/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description meningotype-dag.dot The Nextflow DAG visualisation meningotype-report.html The Nextflow Execution Report meningotype-timeline.html The Nextflow Timeline Report meningotype-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/meningotype/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/meningotype/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/meningotype/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/meningotype/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/meningotype/#meningotype-parameters","text":"You can use these parameters to fine-tune your meningotype analysis Parameter Description Default --finetype perform porA and fetA fine typing False --porB perform porB sequence typing (NEIS2020) False --bast perform Bexsero antigen sequence typing (BAST) False --mlst perform MLST False --all perform MLST, porA, fetA, porB, BAST typing False","title":"meningotype Parameters"},{"location":"bactopia-tools/meningotype/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/meningotype/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/meningotype/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/meningotype/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/meningotype/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/meningotype/#citations","text":"If you use Bactopia and meningotype in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) meningotype Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub)","title":"Citations"},{"location":"bactopia-tools/merlin/","text":"Bactopia Tool - merlin \u00b6 MinmER assisted species-specific bactopia tool seLectIoN , or Merlin, uses distances based on the RefSeq sketch downloaded by bactopia datasets to automatically run species-specific tools. Currently Merlin knows 16 spells for which cover the following: Genus/Species Tools Escherichia ECTyper Haemophilus hicap , HpsuisSero Klebsiella Kleborate Legionella legsta Listeria LisSero Mycobacterium TBProfiler Neisseria meningotype , ngmaster Salmonella SeqSero2 , SISTR Staphylococcus AgrVATE , spaTyper , staphopia-sccmec Streptococcus emmtyper , SsuisSero Merlin is avialable as an independent Bactopia Tool, or in the Bactopia with the --ask_merlin parameter. Even better, if you want to force Merlin to execute all species-specific tools (no matter the distance), you can use --full_merlin . Then all the spells will be unleashed! Example Usage \u00b6 bactopia --wf merlin \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the merlin tool. Where possible the file descriptions below were modified from a tools description. merlin/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u251c\u2500\u2500 ectyper \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2502 \u2514\u2500\u2500 blast_output_alleles.txt \u2502 \u251c\u2500\u2500 emmtyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 hicap \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 hpsuissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u251c\u2500\u2500 kleborate \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 legsta \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 lissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 <BACTOPIA_TOOL> \u2502 \u2502 \u251c\u2500\u2500 nf-<BACTOPIA_TOOL>.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 mashdist \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-dist.txt \u2502 \u251c\u2500\u2500 meningotype \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 ngmaster \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 seqsero2 \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_log.txt \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.tsv \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_result.txt \u2502 \u251c\u2500\u2500 sistr \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.fasta.gz \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.json.gz \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-cgmlst.csv \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 ssuissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u251c\u2500\u2500 staphopiasccmec \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 tbprofiler \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 bam \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.bam \u2502 \u2514\u2500\u2500 vcf \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.targets.csq.vcf.gz \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u2514\u2500\u2500 <BACTOPIA_TOOL> \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 merlin-dag.dot \u2502 \u251c\u2500\u2500 merlin-report.html \u2502 \u251c\u2500\u2500 merlin-timeline.html \u2502 \u2514\u2500\u2500 merlin-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 ectyper.tsv \u251c\u2500\u2500 emmtyper.tsv \u251c\u2500\u2500 hicap.tsv \u251c\u2500\u2500 hpsuissero.tsv \u251c\u2500\u2500 kleborate.tsv \u251c\u2500\u2500 legsta.tsv \u251c\u2500\u2500 lissero.tsv \u251c\u2500\u2500 meningotype.tsv \u251c\u2500\u2500 ngmaster.tsv \u251c\u2500\u2500 seqsero2.tsv \u251c\u2500\u2500 sistr.tsv \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u251c\u2500\u2500 spatyper.tsv \u251c\u2500\u2500 ssuissero.tsv \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different merlin is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the merlin directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples ectyper.tsv A merged TSV file with ECTyper results from all samples emmtyper.tsv A merged TSV file with emmtyper results from all samples hicap.tsv A merged TSV file with hicap results from all samples hpsuissero.tsv A merged TSV file with HpsuisSero results from all samples kleborate.tsv A merged TSV file with Kleborate results from all samples legsta.tsv A merged TSV file with legsta results from all samples lissero.tsv A merged TSV file with LisSero results from all samples meningotype.tsv A merged TSV file with meningotype results from all samples ngmaster.tsv A merged TSV file with ngmaster results from all samples seqsero2.tsv A merged TSV file with seqsero2 results from all samples sistr.tsv A merged TSV file with SISTR results from all samples spatyper.tsv A merged TSV file with spaTyper results from all samples ssuissero.tsv A merged TSV file with SsuisSero results from all samples staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples AgrVATE \u00b6 Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing ECTyper \u00b6 Below is a description of the per-sample results from ECTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ECTyper result, see ECTyper - Report format for details blast_output_alleles.txt Allele report generated from BLAST results emmtyper \u00b6 Below is a description of the per-sample results from emmtyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with emmtyper result, see emmtyper - Result format for details hicap \u00b6 Below is a description of the per-sample results from hicap . Filename Description <SAMPLE_NAME>.gbk GenBank file and cap locus annotations <SAMPLE_NAME>.svg Visualization of annotated cap locus <SAMPLE_NAME>.tsv A tab-delimited file with hicap results HpsuisSero \u00b6 Below is a description of the per-sample results from HpsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with HpsuisSero result Kleborate \u00b6 Below is a description of the per-sample results from Kleborate . Filename Description <SAMPLE_NAME>.results.tsv A tab-delimited file with Kleborate result, see Kleborate - Example output for more details legsta \u00b6 Below is a description of the per-sample results from legsta . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with legsta result, see legsta - Output for more details LisSero \u00b6 Below is a description of the per-sample results from LisSero . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with LisSero results Mash \u00b6 Below is a description of the per-sample results from Mash . Filename Description <SAMPLE_NAME>-dist.txt A tab-delimited file with mash dist results meningotype \u00b6 Below is a description of the per-sample results from meningotype . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with meningotype result ngmaster \u00b6 Below is a description of the per-sample results from ngmaster . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ngmaster results SeqSero2 \u00b6 Below is a description of the per-sample results from SeqSero2 . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with SeqSero2 results <SAMPLE_NAME>.txt A text file with key-value pairs of SeqSero2 results SISTR \u00b6 Below is a description of the per-sample results from SISTR . Filename Description <SAMPLE_NAME>-allele.fasta.gz A FASTA file of the cgMLST allele search results <SAMPLE_NAME>-allele.json.gz JSON formated cgMLST allele search results, see SISTR - cgMLST search results for more details <SAMPLE_NAME>-cgmlst.csv A comma-delimited summary of the cgMLST allele search results <SAMPLE_NAME>.tsv A tab-delimited file with SISTR results, see SISTR - Primary results for more details spaTyper \u00b6 Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results SsuisSero \u00b6 Below is a description of the per-sample results from SsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with SsuisSero results staphopia-sccmec \u00b6 Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results TBProfiler \u00b6 Below is a description of the per-sample results from TBProfiler . Filename Description <SAMPLE_NAME>.results.csv A CSV formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.json A JSON formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.txt A text file with TBProfiler results <SAMPLE_NAME>.bam BAM file with alignment details <SAMPLE_NAME>.targets.csq.vcf.gz VCF with variant info again refernce genomes Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description merlin-dag.dot The Nextflow DAG visualisation merlin-report.html The Nextflow Execution Report merlin-timeline.html The Nextflow Timeline Report merlin-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis mashdist Parameters \u00b6 Parameter Description Default --mash_sketch The reference sequence as a Mash Sketch (.msh file) --mash_seed Seed to provide to the hash function 42 --mash_table Table output (fields will be blank if they do not meet the p-value threshold) False --mash_m Minimum copies of each k-mer required to pass noise filter for reads 1 --mash_w Probability threshold for warning about low k-mer size. 0.01 --max_p Maximum p-value to report. 1.0 --max_dist Maximum distance to report. 1.0 --merlin_dist Maximum distance to report when using Merlin . 0.1 --full_merlin Go full Merlin and run all species-specific tools, no matter the Mash distance False --use_fastqs Query with FASTQs instead of the assemblies False AgrVATE Parameters \u00b6 Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False ECTyper Parameters \u00b6 Parameter Description Default --opid Percent identity required for an O antigen allele match 90 --opcov Minumum percent coverage required for an O antigen allele match 90 --hpid Percent identity required for an H antigen allele match 95 --hpcov Minumum percent coverage required for an H antigen allele match 50 --verify Enable E. coli species verification False --print_alleles Prints the allele sequences if enabled as the final column False emmtyper Parameters \u00b6 Parameter Description Default --emmtyper_wf Workflow for emmtyper to use. blast --cluster_distance Distance between cluster of matches to consider as different clusters 500 --percid Minimal percent identity of sequence 95 --culling_limit Total hits to return in a position 5 --mismatch Threshold for number of mismatch to allow in BLAST hit 5 --align_diff Threshold for difference between alignment length and subject length in BLAST 5 --gap Threshold gap to allow in BLAST hit 2 --min_perfect Minimum size of perfect match at 3 primer end 15 --min_good Minimum size where there must be 2 matches for each mismatch 15 --max_size Maximum size of PCR product 2000 hicap Parameters \u00b6 Parameter Description Default --database_dir Directory containing locus database --model_fp Path to prodigal model --full_sequence Write the full input sequence out to the genbank file rather than just the region surrounding and including the locus False --hicap_debug hicap will print debug messages False --gene_coverage Minimum percentage coverage to consider a single gene complete 0.8 --gene_identity Minimum percentage identity to consider a single gene complete 0.7 --broken_gene_length Minimum length to consider a broken gene 60 --broken_gene_identity Minimum percentage identity to consider a broken gene 0.8 HpsuisSero Parameters \u00b6 Parameter Description Default Kleborate Parameters \u00b6 Parameter Description Default --skip_resistance Turn off resistance genes screening False --skip_kaptive Turn off Kaptive screening of K and O loci False --min_identity Minimum alignment percent identity for main results 90.0 --kleborate_min_coverage Minimum alignment percent coverage for main results 80.0 --min_spurious_identity Minimum alignment percent identity for spurious results 80.0 --min_spurious_coverage Minimum alignment percent coverage for spurious results 40.0 --min_kaptive_confidence Minimum Kaptive confidence to call K/O loci - confidence levels below this will be reported as unknown Good --force_index Rebuild the BLAST index at the start of execution False legsta Parameters \u00b6 Parameter Description Default --noheader Don't print header row False LisSero Parameters \u00b6 Parameter Description Default --min_id Minimum percent identity to accept a match 95.0 --min_cov Minimum coverage of the gene to accept a match 95.0 meningotype Parameters \u00b6 You can use these parameters to fine-tune your meningotype analysis Parameter Description Default --finetype perform porA and fetA fine typing False --porB perform porB sequence typing (NEIS2020) False --bast perform Bexsero antigen sequence typing (BAST) False --mlst perform MLST False --all perform MLST, porA, fetA, porB, BAST typing False ngmaster Parameters \u00b6 Parameter Description Default --csv output comma-separated format (CSV) rather than tab-separated False SeqSero2 Parameters \u00b6 Parameter Description Default --run_mode Workflow to run. 'a' allele mode, or 'k' k-mer mode k --input_type Input format to analyze. 'assembly' or 'fastq' assembly --bwa_mode Algorithms for bwa mapping for allele mode mem SISTR Parameters \u00b6 Parameter Description Default --full_cgmlst Use the full set of cgMLST alleles which can include highly similar alleles False spaTyper Parameters \u00b6 Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False staphopia-sccmec Parameters \u00b6 Parameter Description Default --hamming Report the results as hamming distances False SsuisSero Parameters \u00b6 Parameter Description Default TBProfiler Parameters \u00b6 Parameter Description Default --call_whole_genome Call whole genome False --mapper Mapping tool to use. If you are using nanopore data it will default to minimap2 bwa --caller Variant calling tool to use freebayes --calling_params Extra variant caller options in quotes --tb_min_depth Minimum depth required to call variant 10 --tb_af Minimum allele frequency to call variants 0.1 --tb_reporting_af Minimum allele frequency to use variants for prediction 0.1 --coverage_fraction_threshold Cutoff used to calculate fraction of region covered by <= this value 0 --suspect Use the suspect suite of tools to add ML predictions False --no_flagstat Don't collect flagstats False --no_delly Don't run delly False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and merlin in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) ECTyper Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub) emmtyper Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub) hicap Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019) HpsuisSero Lui J HpsuisSero: Rapid Haemophilus parasuis serotyping (GitHub) Kleborate Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021) legsta Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub) LisSero Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) meningotype Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub) ngmaster Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub) SeqSero2 Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019) SISTR Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) SsuisSero Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018) TBProfiler Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019)","title":"merlin"},{"location":"bactopia-tools/merlin/#bactopia-tool-merlin","text":"MinmER assisted species-specific bactopia tool seLectIoN , or Merlin, uses distances based on the RefSeq sketch downloaded by bactopia datasets to automatically run species-specific tools. Currently Merlin knows 16 spells for which cover the following: Genus/Species Tools Escherichia ECTyper Haemophilus hicap , HpsuisSero Klebsiella Kleborate Legionella legsta Listeria LisSero Mycobacterium TBProfiler Neisseria meningotype , ngmaster Salmonella SeqSero2 , SISTR Staphylococcus AgrVATE , spaTyper , staphopia-sccmec Streptococcus emmtyper , SsuisSero Merlin is avialable as an independent Bactopia Tool, or in the Bactopia with the --ask_merlin parameter. Even better, if you want to force Merlin to execute all species-specific tools (no matter the distance), you can use --full_merlin . Then all the spells will be unleashed!","title":"Bactopia Tool - merlin"},{"location":"bactopia-tools/merlin/#example-usage","text":"bactopia --wf merlin \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/merlin/#output-overview","text":"Below is the default output structure for the merlin tool. Where possible the file descriptions below were modified from a tools description. merlin/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u251c\u2500\u2500 ectyper \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2502 \u2514\u2500\u2500 blast_output_alleles.txt \u2502 \u251c\u2500\u2500 emmtyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 hicap \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 hpsuissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u251c\u2500\u2500 kleborate \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 legsta \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 lissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 <BACTOPIA_TOOL> \u2502 \u2502 \u251c\u2500\u2500 nf-<BACTOPIA_TOOL>.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 mashdist \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-dist.txt \u2502 \u251c\u2500\u2500 meningotype \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 ngmaster \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 seqsero2 \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_log.txt \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.tsv \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_result.txt \u2502 \u251c\u2500\u2500 sistr \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.fasta.gz \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.json.gz \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-cgmlst.csv \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u251c\u2500\u2500 ssuissero \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u251c\u2500\u2500 staphopiasccmec \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 tbprofiler \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 bam \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.bam \u2502 \u2514\u2500\u2500 vcf \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.targets.csq.vcf.gz \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u2514\u2500\u2500 <BACTOPIA_TOOL> \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 merlin-dag.dot \u2502 \u251c\u2500\u2500 merlin-report.html \u2502 \u251c\u2500\u2500 merlin-timeline.html \u2502 \u2514\u2500\u2500 merlin-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 ectyper.tsv \u251c\u2500\u2500 emmtyper.tsv \u251c\u2500\u2500 hicap.tsv \u251c\u2500\u2500 hpsuissero.tsv \u251c\u2500\u2500 kleborate.tsv \u251c\u2500\u2500 legsta.tsv \u251c\u2500\u2500 lissero.tsv \u251c\u2500\u2500 meningotype.tsv \u251c\u2500\u2500 ngmaster.tsv \u251c\u2500\u2500 seqsero2.tsv \u251c\u2500\u2500 sistr.tsv \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u251c\u2500\u2500 spatyper.tsv \u251c\u2500\u2500 ssuissero.tsv \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different merlin is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the merlin directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/merlin/#results","text":"","title":"Results"},{"location":"bactopia-tools/merlin/#top-level","text":"Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples ectyper.tsv A merged TSV file with ECTyper results from all samples emmtyper.tsv A merged TSV file with emmtyper results from all samples hicap.tsv A merged TSV file with hicap results from all samples hpsuissero.tsv A merged TSV file with HpsuisSero results from all samples kleborate.tsv A merged TSV file with Kleborate results from all samples legsta.tsv A merged TSV file with legsta results from all samples lissero.tsv A merged TSV file with LisSero results from all samples meningotype.tsv A merged TSV file with meningotype results from all samples ngmaster.tsv A merged TSV file with ngmaster results from all samples seqsero2.tsv A merged TSV file with seqsero2 results from all samples sistr.tsv A merged TSV file with SISTR results from all samples spatyper.tsv A merged TSV file with spaTyper results from all samples ssuissero.tsv A merged TSV file with SsuisSero results from all samples staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples","title":"Top Level"},{"location":"bactopia-tools/merlin/#agrvate","text":"Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing","title":"AgrVATE"},{"location":"bactopia-tools/merlin/#ectyper","text":"Below is a description of the per-sample results from ECTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ECTyper result, see ECTyper - Report format for details blast_output_alleles.txt Allele report generated from BLAST results","title":"ECTyper"},{"location":"bactopia-tools/merlin/#emmtyper","text":"Below is a description of the per-sample results from emmtyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with emmtyper result, see emmtyper - Result format for details","title":"emmtyper"},{"location":"bactopia-tools/merlin/#hicap","text":"Below is a description of the per-sample results from hicap . Filename Description <SAMPLE_NAME>.gbk GenBank file and cap locus annotations <SAMPLE_NAME>.svg Visualization of annotated cap locus <SAMPLE_NAME>.tsv A tab-delimited file with hicap results","title":"hicap"},{"location":"bactopia-tools/merlin/#hpsuissero","text":"Below is a description of the per-sample results from HpsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with HpsuisSero result","title":"HpsuisSero"},{"location":"bactopia-tools/merlin/#kleborate","text":"Below is a description of the per-sample results from Kleborate . Filename Description <SAMPLE_NAME>.results.tsv A tab-delimited file with Kleborate result, see Kleborate - Example output for more details","title":"Kleborate"},{"location":"bactopia-tools/merlin/#legsta","text":"Below is a description of the per-sample results from legsta . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with legsta result, see legsta - Output for more details","title":"legsta"},{"location":"bactopia-tools/merlin/#lissero","text":"Below is a description of the per-sample results from LisSero . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with LisSero results","title":"LisSero"},{"location":"bactopia-tools/merlin/#mash","text":"Below is a description of the per-sample results from Mash . Filename Description <SAMPLE_NAME>-dist.txt A tab-delimited file with mash dist results","title":"Mash"},{"location":"bactopia-tools/merlin/#meningotype","text":"Below is a description of the per-sample results from meningotype . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with meningotype result","title":"meningotype"},{"location":"bactopia-tools/merlin/#ngmaster","text":"Below is a description of the per-sample results from ngmaster . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ngmaster results","title":"ngmaster"},{"location":"bactopia-tools/merlin/#seqsero2","text":"Below is a description of the per-sample results from SeqSero2 . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with SeqSero2 results <SAMPLE_NAME>.txt A text file with key-value pairs of SeqSero2 results","title":"SeqSero2"},{"location":"bactopia-tools/merlin/#sistr","text":"Below is a description of the per-sample results from SISTR . Filename Description <SAMPLE_NAME>-allele.fasta.gz A FASTA file of the cgMLST allele search results <SAMPLE_NAME>-allele.json.gz JSON formated cgMLST allele search results, see SISTR - cgMLST search results for more details <SAMPLE_NAME>-cgmlst.csv A comma-delimited summary of the cgMLST allele search results <SAMPLE_NAME>.tsv A tab-delimited file with SISTR results, see SISTR - Primary results for more details","title":"SISTR"},{"location":"bactopia-tools/merlin/#spatyper","text":"Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results","title":"spaTyper"},{"location":"bactopia-tools/merlin/#ssuissero","text":"Below is a description of the per-sample results from SsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with SsuisSero results","title":"SsuisSero"},{"location":"bactopia-tools/merlin/#staphopia-sccmec","text":"Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results","title":"staphopia-sccmec"},{"location":"bactopia-tools/merlin/#tbprofiler","text":"Below is a description of the per-sample results from TBProfiler . Filename Description <SAMPLE_NAME>.results.csv A CSV formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.json A JSON formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.txt A text file with TBProfiler results <SAMPLE_NAME>.bam BAM file with alignment details <SAMPLE_NAME>.targets.csq.vcf.gz VCF with variant info again refernce genomes","title":"TBProfiler"},{"location":"bactopia-tools/merlin/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/merlin/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/merlin/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description merlin-dag.dot The Nextflow DAG visualisation merlin-report.html The Nextflow Execution Report merlin-timeline.html The Nextflow Timeline Report merlin-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/merlin/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/merlin/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/merlin/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/merlin/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/merlin/#mashdist-parameters","text":"Parameter Description Default --mash_sketch The reference sequence as a Mash Sketch (.msh file) --mash_seed Seed to provide to the hash function 42 --mash_table Table output (fields will be blank if they do not meet the p-value threshold) False --mash_m Minimum copies of each k-mer required to pass noise filter for reads 1 --mash_w Probability threshold for warning about low k-mer size. 0.01 --max_p Maximum p-value to report. 1.0 --max_dist Maximum distance to report. 1.0 --merlin_dist Maximum distance to report when using Merlin . 0.1 --full_merlin Go full Merlin and run all species-specific tools, no matter the Mash distance False --use_fastqs Query with FASTQs instead of the assemblies False","title":"mashdist Parameters"},{"location":"bactopia-tools/merlin/#agrvate-parameters","text":"Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False","title":"AgrVATE Parameters"},{"location":"bactopia-tools/merlin/#ectyper-parameters","text":"Parameter Description Default --opid Percent identity required for an O antigen allele match 90 --opcov Minumum percent coverage required for an O antigen allele match 90 --hpid Percent identity required for an H antigen allele match 95 --hpcov Minumum percent coverage required for an H antigen allele match 50 --verify Enable E. coli species verification False --print_alleles Prints the allele sequences if enabled as the final column False","title":"ECTyper Parameters"},{"location":"bactopia-tools/merlin/#emmtyper-parameters","text":"Parameter Description Default --emmtyper_wf Workflow for emmtyper to use. blast --cluster_distance Distance between cluster of matches to consider as different clusters 500 --percid Minimal percent identity of sequence 95 --culling_limit Total hits to return in a position 5 --mismatch Threshold for number of mismatch to allow in BLAST hit 5 --align_diff Threshold for difference between alignment length and subject length in BLAST 5 --gap Threshold gap to allow in BLAST hit 2 --min_perfect Minimum size of perfect match at 3 primer end 15 --min_good Minimum size where there must be 2 matches for each mismatch 15 --max_size Maximum size of PCR product 2000","title":"emmtyper Parameters"},{"location":"bactopia-tools/merlin/#hicap-parameters","text":"Parameter Description Default --database_dir Directory containing locus database --model_fp Path to prodigal model --full_sequence Write the full input sequence out to the genbank file rather than just the region surrounding and including the locus False --hicap_debug hicap will print debug messages False --gene_coverage Minimum percentage coverage to consider a single gene complete 0.8 --gene_identity Minimum percentage identity to consider a single gene complete 0.7 --broken_gene_length Minimum length to consider a broken gene 60 --broken_gene_identity Minimum percentage identity to consider a broken gene 0.8","title":"hicap Parameters"},{"location":"bactopia-tools/merlin/#hpsuissero-parameters","text":"Parameter Description Default","title":"HpsuisSero Parameters"},{"location":"bactopia-tools/merlin/#kleborate-parameters","text":"Parameter Description Default --skip_resistance Turn off resistance genes screening False --skip_kaptive Turn off Kaptive screening of K and O loci False --min_identity Minimum alignment percent identity for main results 90.0 --kleborate_min_coverage Minimum alignment percent coverage for main results 80.0 --min_spurious_identity Minimum alignment percent identity for spurious results 80.0 --min_spurious_coverage Minimum alignment percent coverage for spurious results 40.0 --min_kaptive_confidence Minimum Kaptive confidence to call K/O loci - confidence levels below this will be reported as unknown Good --force_index Rebuild the BLAST index at the start of execution False","title":"Kleborate Parameters"},{"location":"bactopia-tools/merlin/#legsta-parameters","text":"Parameter Description Default --noheader Don't print header row False","title":"legsta Parameters"},{"location":"bactopia-tools/merlin/#lissero-parameters","text":"Parameter Description Default --min_id Minimum percent identity to accept a match 95.0 --min_cov Minimum coverage of the gene to accept a match 95.0","title":"LisSero Parameters"},{"location":"bactopia-tools/merlin/#meningotype-parameters","text":"You can use these parameters to fine-tune your meningotype analysis Parameter Description Default --finetype perform porA and fetA fine typing False --porB perform porB sequence typing (NEIS2020) False --bast perform Bexsero antigen sequence typing (BAST) False --mlst perform MLST False --all perform MLST, porA, fetA, porB, BAST typing False","title":"meningotype Parameters"},{"location":"bactopia-tools/merlin/#ngmaster-parameters","text":"Parameter Description Default --csv output comma-separated format (CSV) rather than tab-separated False","title":"ngmaster Parameters"},{"location":"bactopia-tools/merlin/#seqsero2-parameters","text":"Parameter Description Default --run_mode Workflow to run. 'a' allele mode, or 'k' k-mer mode k --input_type Input format to analyze. 'assembly' or 'fastq' assembly --bwa_mode Algorithms for bwa mapping for allele mode mem","title":"SeqSero2 Parameters"},{"location":"bactopia-tools/merlin/#sistr-parameters","text":"Parameter Description Default --full_cgmlst Use the full set of cgMLST alleles which can include highly similar alleles False","title":"SISTR Parameters"},{"location":"bactopia-tools/merlin/#spatyper-parameters","text":"Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False","title":"spaTyper Parameters"},{"location":"bactopia-tools/merlin/#staphopia-sccmec-parameters","text":"Parameter Description Default --hamming Report the results as hamming distances False","title":"staphopia-sccmec Parameters"},{"location":"bactopia-tools/merlin/#ssuissero-parameters","text":"Parameter Description Default","title":"SsuisSero Parameters"},{"location":"bactopia-tools/merlin/#tbprofiler-parameters","text":"Parameter Description Default --call_whole_genome Call whole genome False --mapper Mapping tool to use. If you are using nanopore data it will default to minimap2 bwa --caller Variant calling tool to use freebayes --calling_params Extra variant caller options in quotes --tb_min_depth Minimum depth required to call variant 10 --tb_af Minimum allele frequency to call variants 0.1 --tb_reporting_af Minimum allele frequency to use variants for prediction 0.1 --coverage_fraction_threshold Cutoff used to calculate fraction of region covered by <= this value 0 --suspect Use the suspect suite of tools to add ML predictions False --no_flagstat Don't collect flagstats False --no_delly Don't run delly False","title":"TBProfiler Parameters"},{"location":"bactopia-tools/merlin/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/merlin/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/merlin/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/merlin/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/merlin/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/merlin/#citations","text":"If you use Bactopia and merlin in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) ECTyper Laing C, Bessonov K, Sung S, La Rose C ECTyper - In silico prediction of Escherichia coli serotype (GitHub) emmtyper Tan A, Seemann T, Lacey D, Davies M, Mcintyre L, Frost H, Williamson D, Gon\u00e7alves da Silva A emmtyper - emm Automatic Isolate Labeller (GitHub) hicap Watts SC, Holt KE hicap: in silico serotyping of the Haemophilus influenzae capsule locus. Journal of Clinical Microbiology JCM.00190-19 (2019) HpsuisSero Lui J HpsuisSero: Rapid Haemophilus parasuis serotyping (GitHub) Kleborate Lam MMC, Wick RR, Watts, SC, Cerdeira LT, Wyres KL, Holt KE A genomic surveillance framework and genotyping tool for Klebsiella pneumoniae and its related species complex. Nat Commun 12, 4188 (2021) legsta Seemann T legsta: In silico Legionella pneumophila Sequence Based Typing (GitHub) LisSero Kwong J, Zhang J, Seeman T, Horan, K, Gon\u00e7alves da Silva A LisSero - In silico serotype prediction for Listeria monocytogenes (GitHub) Mash Ondov BD, Treangen TJ, Melsted P, Mallonee AB, Bergman NH, Koren S, Phillippy AM Mash: fast genome and metagenome distance estimation using MinHash . Genome Biol 17, 132 (2016) meningotype Kwong JC, Gon\u00e7alves da Silva A, Stinear TP, Howden BP, & Seemann T meningotype: in silico typing for Neisseria meningitidis . (GitHub) ngmaster Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub) SeqSero2 Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019) SISTR Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) SsuisSero Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018) TBProfiler Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019)","title":"Citations"},{"location":"bactopia-tools/mlst/","text":"Bactopia Tool - mlst \u00b6 The mlst module uses mlst scan assemblies and determine the sequence type. It makes use of PubMLST schemes and by default automatically scans each schema. To specify a specific scheme to scan, you can provide it with --scheme . Example Usage \u00b6 bactopia --wf mlst \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the mlst tool. Where possible the file descriptions below were modified from a tools description. mlst/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 mlst \u2502 \u251c\u2500\u2500 nf-mlst.begin \u2502 \u251c\u2500\u2500 nf-mlst.err \u2502 \u251c\u2500\u2500 nf-mlst.log \u2502 \u251c\u2500\u2500 nf-mlst.out \u2502 \u251c\u2500\u2500 nf-mlst.run \u2502 \u251c\u2500\u2500 nf-mlst.sh \u2502 \u251c\u2500\u2500 nf-mlst.trace \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mlst-dag.dot \u2502 \u251c\u2500\u2500 mlst-report.html \u2502 \u251c\u2500\u2500 mlst-timeline.html \u2502 \u2514\u2500\u2500 mlst-trace.txt \u251c\u2500\u2500 mlst.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description mlst.tsv A merged TSV file with mlst results from all samples mlst \u00b6 Below is a description of the per-sample results from mlst . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with mlst result, see mlst - Usage for more details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mlst-dag.dot The Nextflow DAG visualisation mlst-report.html The Nextflow Execution Report mlst-timeline.html The Nextflow Timeline Report mlst-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis MLST Parameters \u00b6 Parameter Description Default --scheme Don't autodetect, force this scheme on all inputs --minid Minimum DNA percent identity of full allelle to consider 'similar' 95 --mincov Minimum DNA percent coverage to report partial allele at all 10 --minscore Minumum score out of 100 to match a scheme 50 --nopath Strip filename paths from FILE column False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and mlst in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) mlst Seemann T mlst: scan contig files against PubMLST typing schemes (GitHub) PubMLST.org Jolley KA, Bray JE, Maiden MCJ Open-access bacterial population genomics: BIGSdb software, the PubMLST.org website and their applications. Wellcome Open Res 3, 124 (2018)","title":"mlst"},{"location":"bactopia-tools/mlst/#bactopia-tool-mlst","text":"The mlst module uses mlst scan assemblies and determine the sequence type. It makes use of PubMLST schemes and by default automatically scans each schema. To specify a specific scheme to scan, you can provide it with --scheme .","title":"Bactopia Tool - mlst"},{"location":"bactopia-tools/mlst/#example-usage","text":"bactopia --wf mlst \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/mlst/#output-overview","text":"Below is the default output structure for the mlst tool. Where possible the file descriptions below were modified from a tools description. mlst/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 mlst \u2502 \u251c\u2500\u2500 nf-mlst.begin \u2502 \u251c\u2500\u2500 nf-mlst.err \u2502 \u251c\u2500\u2500 nf-mlst.log \u2502 \u251c\u2500\u2500 nf-mlst.out \u2502 \u251c\u2500\u2500 nf-mlst.run \u2502 \u251c\u2500\u2500 nf-mlst.sh \u2502 \u251c\u2500\u2500 nf-mlst.trace \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mlst-dag.dot \u2502 \u251c\u2500\u2500 mlst-report.html \u2502 \u251c\u2500\u2500 mlst-timeline.html \u2502 \u2514\u2500\u2500 mlst-trace.txt \u251c\u2500\u2500 mlst.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/mlst/#results","text":"","title":"Results"},{"location":"bactopia-tools/mlst/#top-level","text":"Below are results that are in the base directory. Filename Description mlst.tsv A merged TSV file with mlst results from all samples","title":"Top Level"},{"location":"bactopia-tools/mlst/#mlst","text":"Below is a description of the per-sample results from mlst . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with mlst result, see mlst - Usage for more details","title":"mlst"},{"location":"bactopia-tools/mlst/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/mlst/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/mlst/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mlst-dag.dot The Nextflow DAG visualisation mlst-report.html The Nextflow Execution Report mlst-timeline.html The Nextflow Timeline Report mlst-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/mlst/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/mlst/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/mlst/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/mlst/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/mlst/#mlst-parameters","text":"Parameter Description Default --scheme Don't autodetect, force this scheme on all inputs --minid Minimum DNA percent identity of full allelle to consider 'similar' 95 --mincov Minimum DNA percent coverage to report partial allele at all 10 --minscore Minumum score out of 100 to match a scheme 50 --nopath Strip filename paths from FILE column False","title":"MLST Parameters"},{"location":"bactopia-tools/mlst/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/mlst/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/mlst/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/mlst/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/mlst/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/mlst/#citations","text":"If you use Bactopia and mlst in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) mlst Seemann T mlst: scan contig files against PubMLST typing schemes (GitHub) PubMLST.org Jolley KA, Bray JE, Maiden MCJ Open-access bacterial population genomics: BIGSdb software, the PubMLST.org website and their applications. Wellcome Open Res 3, 124 (2018)","title":"Citations"},{"location":"bactopia-tools/mobsuite/","text":"Bactopia Tool - mobsuite \u00b6 The mobsuite module uses MOB-suite to reconstruct and annotate plasmids in draft assemblies. Example Usage \u00b6 bactopia --wf mobsuite \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the mobsuite tool. Where possible the file descriptions below were modified from a tools description. mobsuite/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-mobtyper.txt \u2502 \u251c\u2500\u2500 chromosome.fasta \u2502 \u251c\u2500\u2500 contig_report.txt \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 mobsuite \u2502 \u2502 \u251c\u2500\u2500 nf-mobsuite.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 plasmid_<PLASMID_NAME>.fasta \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mobsuite-dag.dot \u2502 \u251c\u2500\u2500 mobsuite-report.html \u2502 \u251c\u2500\u2500 mobsuite-timeline.html \u2502 \u2514\u2500\u2500 mobsuite-trace.txt \u251c\u2500\u2500 mobsuite.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description mobsuite.tsv A merged TSV file with mobsuite results from all samples legsta \u00b6 Below is a description of the per-sample results from MOB-suite . Filename Description <SAMPLE_NAME>-mobtyper.txt Aggregate MOB-typer report files for all identified plasmid, see MOB-typer - report file for more details chromosome.fasta FASTA file of all contigs found to belong to the chromosome contig_report.txt Assignment of the contig to chromosome or a particular plasmid grouping, see MOB-recon - contig report for more details plasmid_<PLASMID_NAME>.fasta Each plasmid group is written to an individual FASTA Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mobsuite-dag.dot The Nextflow DAG visualisation mobsuite-report.html The Nextflow Execution Report mobsuite-timeline.html The Nextflow Timeline Report mobsuite-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis MOB-suite Recon Parameters \u00b6 Parameter Description Default --mb_max_contig_size Maximum size of a contig to be considered a plasmid 310000 --mb_min_contig_size Minimum length of contigs to classify 1000 --mb_max_plasmid_size Maximum size of a reconstructed plasmid 350000 --mobsuite_opts Extra MOB-suite options in quotes. Example: '--min_mob_evalue 0.001' Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and mobsuite in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) MOB-suite Robertson J, Nash JHE MOB-suite: software tools for clustering, reconstruction and typing of plasmids from draft assemblies. Microbial Genomics 4(8). (2018) MOB-suite Database Robertson J, Bessonov K, Schonfeld J, Nash JHE. Universal whole-sequence-based plasmid typing and its utility to prediction of host range and epidemiological surveillance. Microbial Genomics , 6(10)(2020)","title":"mobsuite"},{"location":"bactopia-tools/mobsuite/#bactopia-tool-mobsuite","text":"The mobsuite module uses MOB-suite to reconstruct and annotate plasmids in draft assemblies.","title":"Bactopia Tool - mobsuite"},{"location":"bactopia-tools/mobsuite/#example-usage","text":"bactopia --wf mobsuite \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/mobsuite/#output-overview","text":"Below is the default output structure for the mobsuite tool. Where possible the file descriptions below were modified from a tools description. mobsuite/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-mobtyper.txt \u2502 \u251c\u2500\u2500 chromosome.fasta \u2502 \u251c\u2500\u2500 contig_report.txt \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 mobsuite \u2502 \u2502 \u251c\u2500\u2500 nf-mobsuite.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 plasmid_<PLASMID_NAME>.fasta \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 mobsuite-dag.dot \u2502 \u251c\u2500\u2500 mobsuite-report.html \u2502 \u251c\u2500\u2500 mobsuite-timeline.html \u2502 \u2514\u2500\u2500 mobsuite-trace.txt \u251c\u2500\u2500 mobsuite.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/mobsuite/#results","text":"","title":"Results"},{"location":"bactopia-tools/mobsuite/#top-level","text":"Below are results that are in the base directory. Filename Description mobsuite.tsv A merged TSV file with mobsuite results from all samples","title":"Top Level"},{"location":"bactopia-tools/mobsuite/#legsta","text":"Below is a description of the per-sample results from MOB-suite . Filename Description <SAMPLE_NAME>-mobtyper.txt Aggregate MOB-typer report files for all identified plasmid, see MOB-typer - report file for more details chromosome.fasta FASTA file of all contigs found to belong to the chromosome contig_report.txt Assignment of the contig to chromosome or a particular plasmid grouping, see MOB-recon - contig report for more details plasmid_<PLASMID_NAME>.fasta Each plasmid group is written to an individual FASTA","title":"legsta"},{"location":"bactopia-tools/mobsuite/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/mobsuite/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/mobsuite/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description mobsuite-dag.dot The Nextflow DAG visualisation mobsuite-report.html The Nextflow Execution Report mobsuite-timeline.html The Nextflow Timeline Report mobsuite-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/mobsuite/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/mobsuite/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/mobsuite/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/mobsuite/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/mobsuite/#mob-suite-recon-parameters","text":"Parameter Description Default --mb_max_contig_size Maximum size of a contig to be considered a plasmid 310000 --mb_min_contig_size Minimum length of contigs to classify 1000 --mb_max_plasmid_size Maximum size of a reconstructed plasmid 350000 --mobsuite_opts Extra MOB-suite options in quotes. Example: '--min_mob_evalue 0.001'","title":"MOB-suite Recon Parameters"},{"location":"bactopia-tools/mobsuite/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/mobsuite/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/mobsuite/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/mobsuite/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/mobsuite/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/mobsuite/#citations","text":"If you use Bactopia and mobsuite in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) MOB-suite Robertson J, Nash JHE MOB-suite: software tools for clustering, reconstruction and typing of plasmids from draft assemblies. Microbial Genomics 4(8). (2018) MOB-suite Database Robertson J, Bessonov K, Schonfeld J, Nash JHE. Universal whole-sequence-based plasmid typing and its utility to prediction of host range and epidemiological surveillance. Microbial Genomics , 6(10)(2020)","title":"Citations"},{"location":"bactopia-tools/ncbigenomedownload/","tags":["assembly","download","fasta"],"text":"Bactopia Tool - ncbigenomedownload \u00b6 The ncbi-genome-download module uses ncbi-genome-download to download genomes from NCBI Assembly database. This allows you to easily supplement your analyses with publicly available genomes. Example Usage \u00b6 bactopia --wf ncbigenomedownload \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis NCBI Genome Download Parameters \u00b6 Parameter Description Default --species Name of the species to download assemblies --accession An NCBI Assembly accession to be downloaded --accessions An file of NCBI Assembly accessions (one per line) to be downloaded --format Comma separated list of formats to download fasta --section NCBI section to download refseq --assembly_level Comma separated list of assembly levels to download complete --kingdom Comma separated list of formats to download bacteria --limit Limit the number of assemblies to download Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ncbigenomedownload in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"Bactopia Tool - `ncbigenomedownload`"},{"location":"bactopia-tools/ncbigenomedownload/#bactopia-tool-ncbigenomedownload","text":"The ncbi-genome-download module uses ncbi-genome-download to download genomes from NCBI Assembly database. This allows you to easily supplement your analyses with publicly available genomes.","title":"Bactopia Tool - ncbigenomedownload"},{"location":"bactopia-tools/ncbigenomedownload/#example-usage","text":"bactopia --wf ncbigenomedownload \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ncbigenomedownload/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#ncbi-genome-download-parameters","text":"Parameter Description Default --species Name of the species to download assemblies --accession An NCBI Assembly accession to be downloaded --accessions An file of NCBI Assembly accessions (one per line) to be downloaded --format Comma separated list of formats to download fasta --section NCBI section to download refseq --assembly_level Comma separated list of assembly levels to download complete --kingdom Comma separated list of formats to download bacteria --limit Limit the number of assemblies to download","title":"NCBI Genome Download Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ncbigenomedownload/#citations","text":"If you use Bactopia and ncbigenomedownload in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub)","title":"Citations"},{"location":"bactopia-tools/ngmaster/","tags":["fasta","Neisseria gonorrhoeae","serotype"],"text":"Bactopia Tool - ngmaster \u00b6 The ngmaster module uses ngmaster for in silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST). Example Usage \u00b6 bactopia --wf ngmaster \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the ngmaster tool. Where possible the file descriptions below were modified from a tools description. ngmaster/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ngmaster \u2502 \u251c\u2500\u2500 nf-ngmaster.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ngmaster-dag.dot \u2502 \u251c\u2500\u2500 ngmaster-report.html \u2502 \u251c\u2500\u2500 ngmaster-timeline.html \u2502 \u2514\u2500\u2500 ngmaster-trace.txt \u251c\u2500\u2500 ngmaster.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ngmaster is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ngmaster directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description ngmaster.tsv A merged TSV file with ngmaster results from all samples ngmaster \u00b6 Below is a description of the per-sample results from ngmaster . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ngmaster results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ngmaster-dag.dot The Nextflow DAG visualisation ngmaster-report.html The Nextflow Execution Report ngmaster-timeline.html The Nextflow Timeline Report ngmaster-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ngmaster Parameters \u00b6 Parameter Description Default --csv output comma-separated format (CSV) rather than tab-separated False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ngmaster in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ngmaster Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub)","title":"ngmaster"},{"location":"bactopia-tools/ngmaster/#bactopia-tool-ngmaster","text":"The ngmaster module uses ngmaster for in silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST).","title":"Bactopia Tool - ngmaster"},{"location":"bactopia-tools/ngmaster/#example-usage","text":"bactopia --wf ngmaster \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ngmaster/#output-overview","text":"Below is the default output structure for the ngmaster tool. Where possible the file descriptions below were modified from a tools description. ngmaster/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ngmaster \u2502 \u251c\u2500\u2500 nf-ngmaster.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ngmaster-dag.dot \u2502 \u251c\u2500\u2500 ngmaster-report.html \u2502 \u251c\u2500\u2500 ngmaster-timeline.html \u2502 \u2514\u2500\u2500 ngmaster-trace.txt \u251c\u2500\u2500 ngmaster.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different ngmaster is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ngmaster directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/ngmaster/#results","text":"","title":"Results"},{"location":"bactopia-tools/ngmaster/#top-level","text":"Below are results that are in the base directory. Filename Description ngmaster.tsv A merged TSV file with ngmaster results from all samples","title":"Top Level"},{"location":"bactopia-tools/ngmaster/#ngmaster","text":"Below is a description of the per-sample results from ngmaster . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with ngmaster results","title":"ngmaster"},{"location":"bactopia-tools/ngmaster/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/ngmaster/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/ngmaster/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ngmaster-dag.dot The Nextflow DAG visualisation ngmaster-report.html The Nextflow Execution Report ngmaster-timeline.html The Nextflow Timeline Report ngmaster-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/ngmaster/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/ngmaster/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ngmaster/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ngmaster/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ngmaster/#ngmaster-parameters","text":"Parameter Description Default --csv output comma-separated format (CSV) rather than tab-separated False","title":"ngmaster Parameters"},{"location":"bactopia-tools/ngmaster/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ngmaster/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ngmaster/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ngmaster/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ngmaster/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ngmaster/#citations","text":"If you use Bactopia and ngmaster in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ngmaster Kwong J, Gon\u00e7alves da Silva A, Schultz M, Seeman T ngmaster - In silico multi-antigen sequence typing for Neisseria gonorrhoeae (NG-MAST) (GitHub)","title":"Citations"},{"location":"bactopia-tools/pangenome/","text":"Bactopia Tool - pangenome \u00b6 The pangenome subworkflow allows you to create a pan-genome with PIRATE (or Roary ) of your samples. You can further supplement your pan-genome by including completed genomes. This is possible using the --species or --accessions parameters. If used, ncbi-genome-download will download available completed genomes available from RefSeq. Any downloaded genomes will be annotated with Prokka to create compatible GFF3 files. A phylogeny, based on the core-genome alignment, will be created by IQ-Tree . Optionally a recombination-masked core-genome alignment can be created with ClonalFrameML and maskrc-svg . Finally, the core genome pair-wise SNP distance for each sample is also calculated with snp-dists and additional pan-genome wide association studies can be conducted using Scoary . Example Usage \u00b6 bactopia --wf pangenome \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the pangenome tool. Where possible the file descriptions below were modified from a tools description. pangenome/ \u251c\u2500\u2500 clonalframeml \u2502 \u251c\u2500\u2500 core-genome.ML_sequence.fasta \u2502 \u251c\u2500\u2500 core-genome.em.txt \u2502 \u251c\u2500\u2500 core-genome.emsim.txt \u2502 \u251c\u2500\u2500 core-genome.importation_status.txt \u2502 \u251c\u2500\u2500 core-genome.labelled_tree.newick \u2502 \u2514\u2500\u2500 core-genome.position_cross_reference.txt \u251c\u2500\u2500 {iqtree,iqtree-fast} \u2502 \u251c\u2500\u2500 core-genome.alninfo \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.bionj \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.ckp.gz \u2502 \u251c\u2500\u2500 core-genome.contree \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.mldist \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.model.gz \u2502 \u251c\u2500\u2500 core-genome.splits.nex \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.treefile \u2502 \u2514\u2500\u2500 core-genome.ufboot \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 clonalframeml \u2502 \u2502 \u251c\u2500\u2500 nf-clonalframeml.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 {iqtree,iqtree-fast} \u2502 \u2502 \u251c\u2500\u2500 core-genome.log \u2502 \u2502 \u251c\u2500\u2500 nf-iqtree.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 pirate \u2502 \u2502 \u251c\u2500\u2500 nf-pirate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 roary \u2502 \u2502 \u251c\u2500\u2500 nf-roary.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 snpdists \u2502 \u251c\u2500\u2500 nf-snpdists.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 pangenome-dag.dot \u2502 \u251c\u2500\u2500 pangenome-report.html \u2502 \u251c\u2500\u2500 pangenome-timeline.html \u2502 \u2514\u2500\u2500 pangenome-trace.txt \u251c\u2500\u2500 pirate \u2502 \u251c\u2500\u2500 PIRATE.gene_families.ordered.tsv \u2502 \u251c\u2500\u2500 PIRATE.gene_families.tsv \u2502 \u251c\u2500\u2500 PIRATE.genomes_per_allele.tsv \u2502 \u251c\u2500\u2500 PIRATE.pangenome_summary.txt \u2502 \u251c\u2500\u2500 PIRATE.unique_alleles.tsv \u2502 \u251c\u2500\u2500 binary_presence_absence.fasta.gz \u2502 \u251c\u2500\u2500 binary_presence_absence.nwk \u2502 \u251c\u2500\u2500 cluster_alleles.tab \u2502 \u251c\u2500\u2500 co-ords \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.co-ords.tab \u2502 \u251c\u2500\u2500 core_alignment.fasta.gz \u2502 \u251c\u2500\u2500 core_alignment.gff \u2502 \u251c\u2500\u2500 feature_sequences \u2502 \u2502 \u2514\u2500\u2500 <GENE_FAMILY>.{aa|nucleotide|.fasta \u2502 \u251c\u2500\u2500 gene_presence_absence.csv \u2502 \u251c\u2500\u2500 genome2loci.tab \u2502 \u251c\u2500\u2500 genome_list.txt \u2502 \u251c\u2500\u2500 loci_list.tab \u2502 \u251c\u2500\u2500 loci_paralog_categories.tab \u2502 \u251c\u2500\u2500 modified_gffs \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.gff \u2502 \u251c\u2500\u2500 pan_sequences.fasta.gz \u2502 \u251c\u2500\u2500 pangenome.connected_blocks.tsv \u2502 \u251c\u2500\u2500 pangenome.edges \u2502 \u251c\u2500\u2500 pangenome.gfa \u2502 \u251c\u2500\u2500 pangenome.order.tsv \u2502 \u251c\u2500\u2500 pangenome.reversed.tsv \u2502 \u251c\u2500\u2500 pangenome.syntenic_blocks.tsv \u2502 \u251c\u2500\u2500 pangenome.temp \u2502 \u251c\u2500\u2500 pangenome_alignment.fasta.gz \u2502 \u251c\u2500\u2500 pangenome_alignment.gff \u2502 \u251c\u2500\u2500 pangenome_iterations \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.{50|60|70|80|90|95|98}.reclustered.reinflated \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.blast.output \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.cdhit_clusters \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.core_clusters.tab \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.mcl_log.txt \u2502 \u2502 \u2514\u2500\u2500 pan_sequences.representative.fasta \u2502 \u251c\u2500\u2500 paralog_clusters.tab \u2502 \u251c\u2500\u2500 representative_sequences.faa \u2502 \u2514\u2500\u2500 representative_sequences.ffn \u251c\u2500\u2500 roary \u2502 \u251c\u2500\u2500 accessory.header.embl \u2502 \u251c\u2500\u2500 accessory.tab \u2502 \u251c\u2500\u2500 accessory_binary_genes.fa.gz \u2502 \u251c\u2500\u2500 accessory_binary_genes.fa.newick \u2502 \u251c\u2500\u2500 accessory_graph.dot \u2502 \u251c\u2500\u2500 blast_identity_frequency.Rtab \u2502 \u251c\u2500\u2500 clustered_proteins \u2502 \u251c\u2500\u2500 core_accessory.header.embl \u2502 \u251c\u2500\u2500 core_accessory.tab \u2502 \u251c\u2500\u2500 core_accessory_graph.dot \u2502 \u251c\u2500\u2500 core_alignment_header.embl \u2502 \u251c\u2500\u2500 gene_presence_absence.Rtab \u2502 \u251c\u2500\u2500 gene_presence_absence.csv \u2502 \u251c\u2500\u2500 number_of_conserved_genes.Rtab \u2502 \u251c\u2500\u2500 number_of_genes_in_pan_genome.Rtab \u2502 \u251c\u2500\u2500 number_of_new_genes.Rtab \u2502 \u251c\u2500\u2500 number_of_unique_genes.Rtab \u2502 \u251c\u2500\u2500 pan_genome_reference.fa.gz \u2502 \u2514\u2500\u2500 summary_statistics.txt \u251c\u2500\u2500 core-genome.aln.gz \u251c\u2500\u2500 core-genome.distance.tsv \u251c\u2500\u2500 core-genome.iqtree \u251c\u2500\u2500 core-genome.masked.aln.gz \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description core-genome.aln.gz A multiple sequence alignment FASTA of the core genome core-genome.distance.tsv Core genome Pair-wise SNP distance for each sample core-genome.iqtree Full result of the IQ-TREE core genome phylogeny core-genome.masked.aln.gz A core-genome alignment with the recomination masked ClonalFrameML \u00b6 Below is a description of the ClonalFrameML results. For more details about ClonalFrameML outputs see ClonalFrameML - Outputs . Filename Description core-genome.ML_sequence.fasta The sequence reconstructed by maximum likelihood for all internal nodes of the phylogeny, as well as for all missing data in the input sequences core-genome.em.txt The point estimates for R/theta, nu, delta and the branch lengths core-genome.emsim.txt The bootstrapped values for the three parameters R/theta, nu and delta core-genome.importation_status.txt The list of reconstructed recombination events core-genome.labelled_tree.newick The output tree with all nodes labelled so that they can be referred to in other files core-genome.position_cross_reference.txt A vector of comma-separated values indicating for each location in the input sequence file the corresponding position in the sequences in the output ML_sequence.fasta file IQ-TREE \u00b6 Below is a description of the IQ-TREE results. If ClonalFrameML is executed, a fast tree is created and given the prefix start-tree , the final tree has the prefix core-genome . For more details about IQ-TREE outputs see IQ-TREE - Outputs . Filename Description core-genome.alninfo Alignment site statistics {core-genome,start-tree}.bionj A neighbor joining tree produced by BIONJ {core-genome,start-tree}.ckp.gz IQ-TREE writes a checkpoint file core-genome.contree Consensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected {core-genome,start-tree}.mldist Contains the likelihood distances {core-genome,start-tree}.model.gz Information about all models tested core-genome.splits.nex Support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees {core-genome,start-tree}.treefile Maximum likelihood tree in NEWICK format, can be visualized with treeviewer programs core-genome.ufboot Trees created during the bootstrap steps PIRATE \u00b6 Below is a description of the PIRATE results. For more details about Roary outputs see PIRATE - Output files . Available by default By default PIRATE is used to create the pan-genome. If --use_roary is given, pirate outputs will not be available only the roary outputs. Filename Description PIRATE.gene_families.ordered.tsv Tabular summary of all gene families ordered on syntenic regions in the pangenome graph PIRATE.gene_families.tsv Tabular summary of all gene families PIRATE.genomes_per_allele.tsv A list of genomes associated with each allele PIRATE.pangenome_summary.txt Short summary of the number and frequency of genes in the pangenome PIRATE.unique_alleles.tsv Tabular summary of all unique alleles of each gene family binary_presence_absence.{fasta.gz,nwk} A tree (.nwk) generated by fasttree from binary gene_family presence-absence data and the fasta file used to create it cluster_alleles.tab List of alleles in paralogous clusters co-ords/${SAMPLE_NAME}.co-ords.tab Gene feature co-ordinates for each sample core_alignment.fasta.gz Gene-by-gene nucleotide alignments of the core genome created using MAFFT core_alignment.gff Annotation containing the position of the gene family within the core genome alignment feature_sequences/${GENE_FAMILY}.{aa|nucleotide}.fasta Amino acid and nucleotide sequences for each gene family gene_presence_absence.csv Lists each gene and which samples it is present in genome2loci.tab List of loci for each genome genome_list.txt List of genomes in the analysis loci_list.tab List of loci and their associated genomes loci_paralog_categories.tab Concatenation of classified paralogs modified_gffs/${SAMPLE_NAME}.gff GFF3 files which have been standardised for PIRATE pan_sequences.fasta.gz All representative sequences in the pangenome pangenome.connected_blocks.tsv List of connected blocks in the pangenome graph pangenome.edges List of classified edges in the pangenome graph pangenome.gfa GFA network file representing all unique connections between gene families pangenome.order.tsv Sorted list gene_families file on pangenome graph pangenome.reversed.tsv List of reversed blocks in the pangenome graph pangenome.syntenic_blocks.tsv List of syntenic blocks in the pangenome graph pangenome_alignment.fasta.gz Gene-by-gene nucleotide alignments of the full pangenome created using MAFFT pangenome_alignment.gff Annotation containing the position of the gene family within the pangenome alignment pangenome_iterations/pan_sequences.{50|60|70|80|90|95|98}.reclustered.reinflated List of clusters for each reinflation threshold pangenome_iterations/pan_sequences.blast.output BLAST output of sequences against representatives and self hits. pangenome_iterations/pan_sequences.cdhit_clusters A list of CDHIT representative clusters pangenome_iterations/pan_sequences.core_clusters.tab A list of core clusters. pangenome_iterations/pan_sequences.mcl_log.txt A log file from mcxdeblast and mcl pangenome_iterations/pan_sequences.representative.fasta FASTA file with sequences for each representative cluster paralog_clusters.tab List of paralogous clusters representative_sequences.faa Representative protein sequences for each gene family representative_sequences.ffn Representative gene sequences for each gene family Roary \u00b6 Below is a description of the Roary results. For more details about Roary outputs see Roary Documentation . Only available when --use_roary is given By default PIRATE is used to create the pan-genome, unless --use_roary is given. So, you will either have a roary folder or a pirate folder. Filename Description accessory.header.embl Tab/EMBL formatted file of accessory genes accessory.tab Tab/EMBL formatted file of accessory genes accessory_binary_genes.fa A FASTA file with binary presence and absence of accessory genes accessory_binary_genes.fa.newick A tree created using the binary presence and absence of accessory genes accessory_graph.dot A graph in DOT format of how genes are linked together at the contig level in the accessory genome blast_identity_frequency.Rtab Blast results for percentage idenity graph clustered_proteins Groups file where each line lists the sequences in a cluster core_accessory.header.embl Tab/EMBL formatted file of core genes core_accessory.tab Tab/EMBL formatted file of core genes core_accessory_graph.dot A graph in DOT format of how genes are linked together at the contig level in the pan genome core_alignment_header.embl Tab/EMBL formatted file of core genome alignment gene_presence_absence.csv Lists each gene and which samples it is present in gene_presence_absence.Rtab Tab delimited binary matrix with the presence and absence of each gene in each sample number_of_conserved_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_genes_in_pan_genome.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_new_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_unique_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) pan_genome_reference.f.gz FASTA file which contains a single representative nucleotide sequence from each of the clusters in the pan genome (core and accessory) summary_statistics.txt Number of genes in the core and accessory Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description pangenome-dag.dot The Nextflow DAG visualisation pangenome-report.html The Nextflow Execution Report pangenome-timeline.html The Nextflow Timeline Report pangenome-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ClonalFrameML Parameters \u00b6 Parameter Description Default --emsim Number of simulations to estimate uncertainty in the EM results 100 --clonal_opts Extra ClonalFrameML options in quotes --skip_recombination Skip ClonalFrameML execution in subworkflows False IQ-TREE Parameters \u00b6 Parameter Description Default --m Substitution model name MFP --bb Ultrafast bootstrap replicates 1000 --alrt SH-like approximate likelihood ratio test replicates 1000 --asr Ancestral state reconstruction by empirical Bayes False --iqtree_opts Extra IQ-TREE options in quotes. --skip_phylogeny Skip IQ-TREE execution in subworkflows False NCBI Genome Download Parameters \u00b6 Parameter Description Default --species Name of the species to download assemblies --accession An NCBI Assembly accession to be downloaded --accessions An file of NCBI Assembly accessions (one per line) to be downloaded --format Comma separated list of formats to download fasta --section NCBI section to download refseq --assembly_level Comma separated list of assembly levels to download complete --kingdom Comma separated list of formats to download bacteria --limit Limit the number of assemblies to download PIRATE Parameters \u00b6 Parameter Description Default --steps Percent identity thresholds to use for pangenome construction 50,60,70,80,90,95,98 --features Comma-delimited features to use for pangenome construction CDS --para_off Switch off paralog identification False --z Retain all PIRATE intermediate files False --pan_opt Additional arguments to pass to pangenome contruction. Prokka Parameters \u00b6 Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --compliant Force Genbank/ENA/DDJB compliance False --centre Sequencing centre ID Bactopia --prokka_coverage Minimum coverage on query protein 80 --prokka_evalue Similarity e-value cut-off 1e-09 --prokka_opts Extra Prokka options in quotes. Roary Parameters \u00b6 Parameter Description Default --use_prank Use PRANK instead of MAFFT for core gene False --use_roary Use Roary instead of PIRATE in the 'pangenome' subworkflow False --i Minimum percentage identity for blastp 95 --cd Percentage of isolates a gene must be in to be core 99 --g Maximum number of clusters 50000 --s Do not split paralogs False --ap Allow paralogs in core alignment False --iv MCL inflation value 1.5 Scoary Parameters \u00b6 Parameter Description Default --traits Input trait table (CSV) to test for associations --p_value_cutoff For statistical tests, genes with higher p-values will not be reported 0.05 --correction Apply the indicated filtration measure. I --permute Perform N number of permutations of the significant results post-analysis 0 --start_col On which column in the gene presence/absence file do individual strain info start 15 SNP-Dists Parameters \u00b6 Parameter Description Default --a Count all differences not just [AGTC] False --b Keep top left corner cell False --csv Output CSV instead of TSV False --k Keep case, don't uppercase all letters False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and pangenome in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ClonalFramML Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub) PIRATE Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019) Prokka Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014) Roary Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015) Scoary Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016) snp-dists Seemann T snp-dists - Pairwise SNP distance matrix from a FASTA sequence alignment. (GitHub)","title":"pangenome"},{"location":"bactopia-tools/pangenome/#bactopia-tool-pangenome","text":"The pangenome subworkflow allows you to create a pan-genome with PIRATE (or Roary ) of your samples. You can further supplement your pan-genome by including completed genomes. This is possible using the --species or --accessions parameters. If used, ncbi-genome-download will download available completed genomes available from RefSeq. Any downloaded genomes will be annotated with Prokka to create compatible GFF3 files. A phylogeny, based on the core-genome alignment, will be created by IQ-Tree . Optionally a recombination-masked core-genome alignment can be created with ClonalFrameML and maskrc-svg . Finally, the core genome pair-wise SNP distance for each sample is also calculated with snp-dists and additional pan-genome wide association studies can be conducted using Scoary .","title":"Bactopia Tool - pangenome"},{"location":"bactopia-tools/pangenome/#example-usage","text":"bactopia --wf pangenome \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/pangenome/#output-overview","text":"Below is the default output structure for the pangenome tool. Where possible the file descriptions below were modified from a tools description. pangenome/ \u251c\u2500\u2500 clonalframeml \u2502 \u251c\u2500\u2500 core-genome.ML_sequence.fasta \u2502 \u251c\u2500\u2500 core-genome.em.txt \u2502 \u251c\u2500\u2500 core-genome.emsim.txt \u2502 \u251c\u2500\u2500 core-genome.importation_status.txt \u2502 \u251c\u2500\u2500 core-genome.labelled_tree.newick \u2502 \u2514\u2500\u2500 core-genome.position_cross_reference.txt \u251c\u2500\u2500 {iqtree,iqtree-fast} \u2502 \u251c\u2500\u2500 core-genome.alninfo \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.bionj \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.ckp.gz \u2502 \u251c\u2500\u2500 core-genome.contree \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.mldist \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.model.gz \u2502 \u251c\u2500\u2500 core-genome.splits.nex \u2502 \u251c\u2500\u2500 {core-genome,start-tree}.treefile \u2502 \u2514\u2500\u2500 core-genome.ufboot \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 clonalframeml \u2502 \u2502 \u251c\u2500\u2500 nf-clonalframeml.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 {iqtree,iqtree-fast} \u2502 \u2502 \u251c\u2500\u2500 core-genome.log \u2502 \u2502 \u251c\u2500\u2500 nf-iqtree.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 pirate \u2502 \u2502 \u251c\u2500\u2500 nf-pirate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 roary \u2502 \u2502 \u251c\u2500\u2500 nf-roary.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 snpdists \u2502 \u251c\u2500\u2500 nf-snpdists.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 pangenome-dag.dot \u2502 \u251c\u2500\u2500 pangenome-report.html \u2502 \u251c\u2500\u2500 pangenome-timeline.html \u2502 \u2514\u2500\u2500 pangenome-trace.txt \u251c\u2500\u2500 pirate \u2502 \u251c\u2500\u2500 PIRATE.gene_families.ordered.tsv \u2502 \u251c\u2500\u2500 PIRATE.gene_families.tsv \u2502 \u251c\u2500\u2500 PIRATE.genomes_per_allele.tsv \u2502 \u251c\u2500\u2500 PIRATE.pangenome_summary.txt \u2502 \u251c\u2500\u2500 PIRATE.unique_alleles.tsv \u2502 \u251c\u2500\u2500 binary_presence_absence.fasta.gz \u2502 \u251c\u2500\u2500 binary_presence_absence.nwk \u2502 \u251c\u2500\u2500 cluster_alleles.tab \u2502 \u251c\u2500\u2500 co-ords \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.co-ords.tab \u2502 \u251c\u2500\u2500 core_alignment.fasta.gz \u2502 \u251c\u2500\u2500 core_alignment.gff \u2502 \u251c\u2500\u2500 feature_sequences \u2502 \u2502 \u2514\u2500\u2500 <GENE_FAMILY>.{aa|nucleotide|.fasta \u2502 \u251c\u2500\u2500 gene_presence_absence.csv \u2502 \u251c\u2500\u2500 genome2loci.tab \u2502 \u251c\u2500\u2500 genome_list.txt \u2502 \u251c\u2500\u2500 loci_list.tab \u2502 \u251c\u2500\u2500 loci_paralog_categories.tab \u2502 \u251c\u2500\u2500 modified_gffs \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.gff \u2502 \u251c\u2500\u2500 pan_sequences.fasta.gz \u2502 \u251c\u2500\u2500 pangenome.connected_blocks.tsv \u2502 \u251c\u2500\u2500 pangenome.edges \u2502 \u251c\u2500\u2500 pangenome.gfa \u2502 \u251c\u2500\u2500 pangenome.order.tsv \u2502 \u251c\u2500\u2500 pangenome.reversed.tsv \u2502 \u251c\u2500\u2500 pangenome.syntenic_blocks.tsv \u2502 \u251c\u2500\u2500 pangenome.temp \u2502 \u251c\u2500\u2500 pangenome_alignment.fasta.gz \u2502 \u251c\u2500\u2500 pangenome_alignment.gff \u2502 \u251c\u2500\u2500 pangenome_iterations \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.{50|60|70|80|90|95|98}.reclustered.reinflated \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.blast.output \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.cdhit_clusters \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.core_clusters.tab \u2502 \u2502 \u251c\u2500\u2500 pan_sequences.mcl_log.txt \u2502 \u2502 \u2514\u2500\u2500 pan_sequences.representative.fasta \u2502 \u251c\u2500\u2500 paralog_clusters.tab \u2502 \u251c\u2500\u2500 representative_sequences.faa \u2502 \u2514\u2500\u2500 representative_sequences.ffn \u251c\u2500\u2500 roary \u2502 \u251c\u2500\u2500 accessory.header.embl \u2502 \u251c\u2500\u2500 accessory.tab \u2502 \u251c\u2500\u2500 accessory_binary_genes.fa.gz \u2502 \u251c\u2500\u2500 accessory_binary_genes.fa.newick \u2502 \u251c\u2500\u2500 accessory_graph.dot \u2502 \u251c\u2500\u2500 blast_identity_frequency.Rtab \u2502 \u251c\u2500\u2500 clustered_proteins \u2502 \u251c\u2500\u2500 core_accessory.header.embl \u2502 \u251c\u2500\u2500 core_accessory.tab \u2502 \u251c\u2500\u2500 core_accessory_graph.dot \u2502 \u251c\u2500\u2500 core_alignment_header.embl \u2502 \u251c\u2500\u2500 gene_presence_absence.Rtab \u2502 \u251c\u2500\u2500 gene_presence_absence.csv \u2502 \u251c\u2500\u2500 number_of_conserved_genes.Rtab \u2502 \u251c\u2500\u2500 number_of_genes_in_pan_genome.Rtab \u2502 \u251c\u2500\u2500 number_of_new_genes.Rtab \u2502 \u251c\u2500\u2500 number_of_unique_genes.Rtab \u2502 \u251c\u2500\u2500 pan_genome_reference.fa.gz \u2502 \u2514\u2500\u2500 summary_statistics.txt \u251c\u2500\u2500 core-genome.aln.gz \u251c\u2500\u2500 core-genome.distance.tsv \u251c\u2500\u2500 core-genome.iqtree \u251c\u2500\u2500 core-genome.masked.aln.gz \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/pangenome/#results","text":"","title":"Results"},{"location":"bactopia-tools/pangenome/#top-level","text":"Below are results that are in the base directory. Filename Description core-genome.aln.gz A multiple sequence alignment FASTA of the core genome core-genome.distance.tsv Core genome Pair-wise SNP distance for each sample core-genome.iqtree Full result of the IQ-TREE core genome phylogeny core-genome.masked.aln.gz A core-genome alignment with the recomination masked","title":"Top Level"},{"location":"bactopia-tools/pangenome/#clonalframeml","text":"Below is a description of the ClonalFrameML results. For more details about ClonalFrameML outputs see ClonalFrameML - Outputs . Filename Description core-genome.ML_sequence.fasta The sequence reconstructed by maximum likelihood for all internal nodes of the phylogeny, as well as for all missing data in the input sequences core-genome.em.txt The point estimates for R/theta, nu, delta and the branch lengths core-genome.emsim.txt The bootstrapped values for the three parameters R/theta, nu and delta core-genome.importation_status.txt The list of reconstructed recombination events core-genome.labelled_tree.newick The output tree with all nodes labelled so that they can be referred to in other files core-genome.position_cross_reference.txt A vector of comma-separated values indicating for each location in the input sequence file the corresponding position in the sequences in the output ML_sequence.fasta file","title":"ClonalFrameML"},{"location":"bactopia-tools/pangenome/#iq-tree","text":"Below is a description of the IQ-TREE results. If ClonalFrameML is executed, a fast tree is created and given the prefix start-tree , the final tree has the prefix core-genome . For more details about IQ-TREE outputs see IQ-TREE - Outputs . Filename Description core-genome.alninfo Alignment site statistics {core-genome,start-tree}.bionj A neighbor joining tree produced by BIONJ {core-genome,start-tree}.ckp.gz IQ-TREE writes a checkpoint file core-genome.contree Consensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected {core-genome,start-tree}.mldist Contains the likelihood distances {core-genome,start-tree}.model.gz Information about all models tested core-genome.splits.nex Support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees {core-genome,start-tree}.treefile Maximum likelihood tree in NEWICK format, can be visualized with treeviewer programs core-genome.ufboot Trees created during the bootstrap steps","title":"IQ-TREE"},{"location":"bactopia-tools/pangenome/#pirate","text":"Below is a description of the PIRATE results. For more details about Roary outputs see PIRATE - Output files . Available by default By default PIRATE is used to create the pan-genome. If --use_roary is given, pirate outputs will not be available only the roary outputs. Filename Description PIRATE.gene_families.ordered.tsv Tabular summary of all gene families ordered on syntenic regions in the pangenome graph PIRATE.gene_families.tsv Tabular summary of all gene families PIRATE.genomes_per_allele.tsv A list of genomes associated with each allele PIRATE.pangenome_summary.txt Short summary of the number and frequency of genes in the pangenome PIRATE.unique_alleles.tsv Tabular summary of all unique alleles of each gene family binary_presence_absence.{fasta.gz,nwk} A tree (.nwk) generated by fasttree from binary gene_family presence-absence data and the fasta file used to create it cluster_alleles.tab List of alleles in paralogous clusters co-ords/${SAMPLE_NAME}.co-ords.tab Gene feature co-ordinates for each sample core_alignment.fasta.gz Gene-by-gene nucleotide alignments of the core genome created using MAFFT core_alignment.gff Annotation containing the position of the gene family within the core genome alignment feature_sequences/${GENE_FAMILY}.{aa|nucleotide}.fasta Amino acid and nucleotide sequences for each gene family gene_presence_absence.csv Lists each gene and which samples it is present in genome2loci.tab List of loci for each genome genome_list.txt List of genomes in the analysis loci_list.tab List of loci and their associated genomes loci_paralog_categories.tab Concatenation of classified paralogs modified_gffs/${SAMPLE_NAME}.gff GFF3 files which have been standardised for PIRATE pan_sequences.fasta.gz All representative sequences in the pangenome pangenome.connected_blocks.tsv List of connected blocks in the pangenome graph pangenome.edges List of classified edges in the pangenome graph pangenome.gfa GFA network file representing all unique connections between gene families pangenome.order.tsv Sorted list gene_families file on pangenome graph pangenome.reversed.tsv List of reversed blocks in the pangenome graph pangenome.syntenic_blocks.tsv List of syntenic blocks in the pangenome graph pangenome_alignment.fasta.gz Gene-by-gene nucleotide alignments of the full pangenome created using MAFFT pangenome_alignment.gff Annotation containing the position of the gene family within the pangenome alignment pangenome_iterations/pan_sequences.{50|60|70|80|90|95|98}.reclustered.reinflated List of clusters for each reinflation threshold pangenome_iterations/pan_sequences.blast.output BLAST output of sequences against representatives and self hits. pangenome_iterations/pan_sequences.cdhit_clusters A list of CDHIT representative clusters pangenome_iterations/pan_sequences.core_clusters.tab A list of core clusters. pangenome_iterations/pan_sequences.mcl_log.txt A log file from mcxdeblast and mcl pangenome_iterations/pan_sequences.representative.fasta FASTA file with sequences for each representative cluster paralog_clusters.tab List of paralogous clusters representative_sequences.faa Representative protein sequences for each gene family representative_sequences.ffn Representative gene sequences for each gene family","title":"PIRATE"},{"location":"bactopia-tools/pangenome/#roary","text":"Below is a description of the Roary results. For more details about Roary outputs see Roary Documentation . Only available when --use_roary is given By default PIRATE is used to create the pan-genome, unless --use_roary is given. So, you will either have a roary folder or a pirate folder. Filename Description accessory.header.embl Tab/EMBL formatted file of accessory genes accessory.tab Tab/EMBL formatted file of accessory genes accessory_binary_genes.fa A FASTA file with binary presence and absence of accessory genes accessory_binary_genes.fa.newick A tree created using the binary presence and absence of accessory genes accessory_graph.dot A graph in DOT format of how genes are linked together at the contig level in the accessory genome blast_identity_frequency.Rtab Blast results for percentage idenity graph clustered_proteins Groups file where each line lists the sequences in a cluster core_accessory.header.embl Tab/EMBL formatted file of core genes core_accessory.tab Tab/EMBL formatted file of core genes core_accessory_graph.dot A graph in DOT format of how genes are linked together at the contig level in the pan genome core_alignment_header.embl Tab/EMBL formatted file of core genome alignment gene_presence_absence.csv Lists each gene and which samples it is present in gene_presence_absence.Rtab Tab delimited binary matrix with the presence and absence of each gene in each sample number_of_conserved_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_genes_in_pan_genome.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_new_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) number_of_unique_genes.Rtab Graphs on how the pan genome varies as genomes are added (in random orders) pan_genome_reference.f.gz FASTA file which contains a single representative nucleotide sequence from each of the clusters in the pan genome (core and accessory) summary_statistics.txt Number of genes in the core and accessory","title":"Roary"},{"location":"bactopia-tools/pangenome/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/pangenome/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/pangenome/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description pangenome-dag.dot The Nextflow DAG visualisation pangenome-report.html The Nextflow Execution Report pangenome-timeline.html The Nextflow Timeline Report pangenome-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/pangenome/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/pangenome/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/pangenome/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/pangenome/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/pangenome/#clonalframeml-parameters","text":"Parameter Description Default --emsim Number of simulations to estimate uncertainty in the EM results 100 --clonal_opts Extra ClonalFrameML options in quotes --skip_recombination Skip ClonalFrameML execution in subworkflows False","title":"ClonalFrameML Parameters"},{"location":"bactopia-tools/pangenome/#iq-tree-parameters","text":"Parameter Description Default --m Substitution model name MFP --bb Ultrafast bootstrap replicates 1000 --alrt SH-like approximate likelihood ratio test replicates 1000 --asr Ancestral state reconstruction by empirical Bayes False --iqtree_opts Extra IQ-TREE options in quotes. --skip_phylogeny Skip IQ-TREE execution in subworkflows False","title":"IQ-TREE Parameters"},{"location":"bactopia-tools/pangenome/#ncbi-genome-download-parameters","text":"Parameter Description Default --species Name of the species to download assemblies --accession An NCBI Assembly accession to be downloaded --accessions An file of NCBI Assembly accessions (one per line) to be downloaded --format Comma separated list of formats to download fasta --section NCBI section to download refseq --assembly_level Comma separated list of assembly levels to download complete --kingdom Comma separated list of formats to download bacteria --limit Limit the number of assemblies to download","title":"NCBI Genome Download Parameters"},{"location":"bactopia-tools/pangenome/#pirate-parameters","text":"Parameter Description Default --steps Percent identity thresholds to use for pangenome construction 50,60,70,80,90,95,98 --features Comma-delimited features to use for pangenome construction CDS --para_off Switch off paralog identification False --z Retain all PIRATE intermediate files False --pan_opt Additional arguments to pass to pangenome contruction.","title":"PIRATE Parameters"},{"location":"bactopia-tools/pangenome/#prokka-parameters","text":"Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --compliant Force Genbank/ENA/DDJB compliance False --centre Sequencing centre ID Bactopia --prokka_coverage Minimum coverage on query protein 80 --prokka_evalue Similarity e-value cut-off 1e-09 --prokka_opts Extra Prokka options in quotes.","title":"Prokka Parameters"},{"location":"bactopia-tools/pangenome/#roary-parameters","text":"Parameter Description Default --use_prank Use PRANK instead of MAFFT for core gene False --use_roary Use Roary instead of PIRATE in the 'pangenome' subworkflow False --i Minimum percentage identity for blastp 95 --cd Percentage of isolates a gene must be in to be core 99 --g Maximum number of clusters 50000 --s Do not split paralogs False --ap Allow paralogs in core alignment False --iv MCL inflation value 1.5","title":"Roary Parameters"},{"location":"bactopia-tools/pangenome/#scoary-parameters","text":"Parameter Description Default --traits Input trait table (CSV) to test for associations --p_value_cutoff For statistical tests, genes with higher p-values will not be reported 0.05 --correction Apply the indicated filtration measure. I --permute Perform N number of permutations of the significant results post-analysis 0 --start_col On which column in the gene presence/absence file do individual strain info start 15","title":"Scoary Parameters"},{"location":"bactopia-tools/pangenome/#snp-dists-parameters","text":"Parameter Description Default --a Count all differences not just [AGTC] False --b Keep top left corner cell False --csv Output CSV instead of TSV False --k Keep case, don't uppercase all letters False","title":"SNP-Dists Parameters"},{"location":"bactopia-tools/pangenome/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/pangenome/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/pangenome/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/pangenome/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/pangenome/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/pangenome/#citations","text":"If you use Bactopia and pangenome in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ClonalFramML Didelot X, Wilson DJ ClonalFrameML: Efficient Inference of Recombination in Whole Bacterial Genomes. PLoS Comput Biol 11(2) e1004041 (2015) IQ-TREE Nguyen L-T, Schmidt HA, von Haeseler A, Minh BQ IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol. 32:268-274 (2015) ModelFinder Kalyaanamoorthy S, Minh BQ, Wong TKF, von Haeseler A, Jermiin LS ModelFinder - Fast model selection for accurate phylogenetic estimates. Nat. Methods 14:587-589 (2017) UFBoot2 Hoang DT, Chernomor O, von Haeseler A, Minh BQ, Vinh LS UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol. 35:518\u2013522 (2018) ncbi-genome-download Blin K ncbi-genome-download: Scripts to download genomes from the NCBI FTP servers (GitHub) PIRATE Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019) Prokka Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014) Roary Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015) Scoary Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016) snp-dists Seemann T snp-dists - Pairwise SNP distance matrix from a FASTA sequence alignment. (GitHub)","title":"Citations"},{"location":"bactopia-tools/phyloflash/","text":"Bactopia Tools - phyloflash \u00b6 The phyloflash tool uses phyloFlash to resconstruct 16S rRNA genes from your input samples. Optionally these reconstructed genes can then be aligned to one another with MAFFT and a phylogenetic representation created using IQ-TREE Example \u00b6 The following command will reconstruct the 16S rRNA gene for each sample except those listed in the exclude file. bactopia tools phyloflash \\ --bactopia ~/bactopia-tutorial/bactopia \\ --phyloflash ~/bactopia-tutorial/bactopia-datasets/16s/138 \\ --exclude ~/bactopia-tutorial/bactopia-tools/summary/bactopia-exclude.txt Output Overview \u00b6 Below is the default output structure for the phyloflash tool. Where possible the file descriptions below were modified from a tools description. bactopia-tools/ \u2514\u2500\u2500 phyloflash/ \u2514\u2500\u2500 ${PREFIX} \u251c\u2500\u2500 alignment \u2502 \u251c\u2500\u2500 phyloflash-alignment.fasta \u2502 \u2514\u2500\u2500 phyloflash-matches.txt \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 phyloflash-report.html \u2502 \u251c\u2500\u2500 phyloflash-timeline.html \u2502 \u2514\u2500\u2500 phyloflash-trace.txt \u251c\u2500\u2500 iqtree \u2502 \u251c\u2500\u2500 16s.alninfo \u2502 \u251c\u2500\u2500 16s.bionj \u2502 \u251c\u2500\u2500 16s.ckp.gz \u2502 \u251c\u2500\u2500 16s.iqtree \u2502 \u251c\u2500\u2500 16s.log \u2502 \u251c\u2500\u2500 16s.mldist \u2502 \u251c\u2500\u2500 16s.model.gz \u2502 \u251c\u2500\u2500 16s.treefile \u2502 \u2514\u2500\u2500 16s.uniqueseq.phy \u251c\u2500\u2500 phyloflash.iqtree \u251c\u2500\u2500 phyloflash-summary.txt \u2514\u2500\u2500 samples \u2514\u2500\u2500 ${SAMPLE_NAME} \u251c\u2500\u2500 ${SAMPLE_NAME}.all.dbhits.NR97.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.phyloFlash.dbhits.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.phyloFlash.notmatched.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.vsearch.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.assemratio.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.assemratio.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.bbmap.out \u251c\u2500\u2500 ${SAMPLE_NAME}.bbmap.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.hitstats \u251c\u2500\u2500 ${SAMPLE_NAME}.idhistogram \u251c\u2500\u2500 ${SAMPLE_NAME}.idhistogram.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.inserthistogram \u251c\u2500\u2500 ${SAMPLE_NAME}.inserthistogram.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.mapratio.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.mapratio.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.extractedSSUclassifications.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.html \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.json \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUfull_abundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.report.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.unassembled.NTUabundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.remap_spades.bbmap.out \u251c\u2500\u2500 ${SAMPLE_NAME}.spades.out \u251c\u2500\u2500 ${SAMPLE_NAME}.spades_rRNAs.final.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.1.fq \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.2.fq \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU_spades.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.alignment.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta.tree \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta.tree.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.toalign.fasta \u2514\u2500\u2500 ${SAMPLE_NAME}-unprocessed.txt Filename Description phyloflash.iqtree Full result of the run, this is the main report file (a copy of iqtree/16s.iqtree ) phyloflash-summary.txt The aggregated phyloFlash results of all samples Directory Description \u00b6 alignment \u00b6 Filename Description phyloflash-alignment.fasta The multiple sequence alignment produced by MAFFT. phyloflash-matches.txt A list of reconstructed 16S genes and their match bactopia-info \u00b6 Filename Description phyloflash-report.html The Nextflow Execution Report phyloflash-timeline.html The Nextflow Timeline Report phyloflash-trace.txt The Nextflow Trace report iqtree \u00b6 Where possible descriptions were taken from IQ-TREE's Command Reference page, Web Server Tutorial page, and the Tutorial page. Filename Description 16s.alninfo Alignment site statistics 16s.bionj A neighbor joining tree produced by BIONJ 16s.ckp.gz IQ-TREE writes a checkpoint file 16s.contree Consensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected 16s.iqtree Full result of the run, this is the main report file 16s.log Run log 16s.mldist Contains the likelihood distances 16s.model.gz Information about all models tested 16s.splits.nex Support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees 16s.treefile Maximum likelihood tree in NEWICK format, can be visualized with treeviewer programs 16s.ufboot Trees created during the bootstrap steps 16s.uniqueseq.phy Unique sequences indentified by IQ-TREE samples \u00b6 Where possible descriptions were taken from phyloFlash's Output Summary and the phyloFlash source PhyloFlash.pm Filename Description ${SAMPLE_NAME}.all.dbhits.NR97.fa Reference sequences from database with hits from the supplied reads, clustered at 97% identity ${SAMPLE_NAME}.all.final.fasta All assembled and reconstructed sequences from SPAdes in a single file ${SAMPLE_NAME}.all.final.phyloFlash.dbhits.fa FASTA file of all sequences in database with hits to reconstructed sequences ${SAMPLE_NAME}.all.final.phyloFlash.notmatched.fa FASTA file of full-length sequences without any database hits ${SAMPLE_NAME}.all.vsearch.csv CSV file of Vsearch output ${SAMPLE_NAME}.assemratio.csv CSV file of ratio assembled to unassembled ${SAMPLE_NAME}.assemratio.csv.svg A SVG image of the above ratios ${SAMPLE_NAME}.bbmap.out The bbmap log ${SAMPLE_NAME}.bbmap.sam The alignment of reads against 16S genes ${SAMPLE_NAME}.hitstats A SVG image of the above ratios ${SAMPLE_NAME}.idhistogram Histogram of the % identity of reads vs. reference database sequences, in tab-separated format ${SAMPLE_NAME}.idhistogram.svg A SVG image of the histogram above ${SAMPLE_NAME}.inserthistogram Histogram of detected insert sizes in tab-separated format, if paired-end reads were input ${SAMPLE_NAME}.inserthistogram.svg A SVG image of the above histogram ${SAMPLE_NAME}.mapratio.csv Ratios of mapped vs unmapped to report ${SAMPLE_NAME}.mapratio.csv.svg A SVG image of the above ratio ${SAMPLE_NAME}.phyloFlash Plain text file version of the HTML report ${SAMPLE_NAME}.phyloFlash.extractedSSUclassifications.csv Taxonomic classification of full-length sequences, in CSV format ${SAMPLE_NAME}.phyloFlash.html phyloFlash report file in HTML format, with a report on the taxonomic composition of SSU rRNA reads, quality metrics for the library, and affiliation of the reconstructed/assembled full-length sequences ${SAMPLE_NAME}.phyloFlash.json JSON version of ${SAMPLE_NAME}.phyloFlash ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv The list of uniqe higher level taxa (e.g. orders for bacteria) in the order of their appearance ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv.svg A SVG image depicting the NTU abundances ${SAMPLE_NAME}.phyloFlash.NTUfull_abundance.csv NTU abundances (untruncated) from initial mapping, in CSV format ${SAMPLE_NAME}.phyloFlash.report.csv phyloFlash report in CSV format ${SAMPLE_NAME}.phyloFlash.unassembled.NTUabundance.csv Taxonomic composition of unassembled SSU reads in CSV format ${SAMPLE_NAME}.remap_spades.bbmap.out SAM file of re-mapping extracted reads to SPAdes full-length sequences ${SAMPLE_NAME}.spades.out The SPAdes log ${SAMPLE_NAME}.spades_rRNAs.final.fasta Assembled OTUs from SPAdes with phyloFlash simplified headers \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.1.fq The filtered SSU reads and their paired read, forward read file \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.2.fq The filtered SSU reads and their paired read, reverse read file \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.sam SAM file of initial read mapping to SSU rRNA database \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU_spades.sam SAM file of re-mapping extracted reads to SPAdes full-length sequences ${SAMPLE_NAME}.SSU.collection.alignment.fasta An aligned multifasta of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta A multifasta of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta.tree An NJ tree of the MAFFT alignment of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta.tree.svg An SVG image of the tree above ${SAMPLE_NAME}.toalign.fasta Sequences from the sample that were used in the MAFFT alignment ${SAMPLE_NAME}-unprocessed.txt Text file with reason for not processing sample Usage \u00b6 Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. --phyloflash STR Directory containing a pre-built phyloFlash database. Optional Parameters: --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --prefix DIR Prefix to use for final output files Default: phyloflash --outdir DIR Directory to write results to Default: ./ --max_time INT The maximum number of minutes a job should run before being halted. Default: 1440 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 4 phyloFlash Related Parameters: --download_phyloflash Download the latest phyloFlash database, even it exists. --yes You acknowledge SILVAs license. --taxlevel INT Level in the taxonomy string to summarize read counts per taxon. Numeric and 1-based (i.e. \"1\" corresponds to \"Domain\"). Default: 6 --phyloflash_opts STR Extra phyloFlash options in quotes. Default: '' --allow_multiple_16s Include samples with multiple reconstructed 16S genes. Due to high sequence similarity in true multi-copy 16S genes, it is unlikely each copy will be reconstructed, instead only one. In order to get more than one reconstructed 16S gene there must be a significant difference in the sequence identity. As a consequence, any samples that have multiple 16S genes reconstructed contain multiple different species within their sequencing. Default: Exclude samples with multiple 16S genes MAFFT Related Parameters: --align_all Include reconstructed 16S genes as well as the corresponding reference 16S genes in the alignment. --mafft_opts STR MAFFT options to include (in quotes). Default: '' IQ-TREE Related Parameters: --skip_phylogeny Skip the creation a core-genome based phylogeny --m STR Substitution model name Default: MFP --bb INT Ultrafast bootstrap replicates Default: 1000 --alrt INT SH-like approximate likelihood ratio test replicates Default: 1000 --asr Ancestral state reconstruction by empirical Bayes Default: false --iqtree_opts STR Extra IQ-TREE options in quotes. Default: '' Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: false --conatainerPath Path to Singularity containers to be used by the 'slurm' profile. Default: /opt/bactopia/singularity --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds Useful Parameters: --version Print workflow version information --help Show this message and exit Conda Environment \u00b6 Below is the command that was used to create the Conda environment. conda create -y -n bactopia-phyloflash -c conda-forge -c bioconda \\ phyloflash \\ mafft \\ iqtree \\ pigz References \u00b6 Barrnap Seemann, T. Barrnap: Bacterial ribosomal RNA predictor . BBTools Bushnell, B. BBMap short read aligner, and other bioinformatic tools. Bedtools Quinlan, A. R. & Hall, I. M. BEDTools: a flexible suite of utilities for comparing genomic features . Bioinformatics 26, 841\u2013842 (2010). IQ-TREE L.-T. Nguyen, H.A. Schmidt, A. von Haeseler, B.Q. Minh (2015) IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol., 32:268-274. S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, L.S. Jermiin (2017) ModelFinder: Fast model selection for accurate phylogenetic estimates. Nat. Methods, 14:587-589. D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, L.S. Vinh (2018) UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35:518\u2013522. MAFFT Katoh, K. & Standley, D. M. MAFFT multiple sequence alignment software version 7: improvements in performance and usability. Mol. Biol. Evol. 30, 772\u2013780 (2013) nhmmer Wheeler, T. J. & Eddy, S. R. nhmmer: DNA homology search with profile HMMs. Bioinformatics 29, 2487\u20132489 (2013) phyloFlash H. R. Gruber-Vodicka, B.KB. Seah, E. Pruesse. phyloFlash \u2014 Rapid SSU rRNA profiling and targeted assembly from metagenomes. bioRxiv 521922 SILVA rRNA Database Quast, C. et al. The SILVA ribosomal RNA gene database project: improved data processing and web-based tools. Nucleic Acids Res. 41, D590\u20136 (2013) SPAdes Bankevich, A., et al. SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing. Journal of computational biology 19.5 (2012): 455-477. VSEARCH Rognes, T., Flouri, T., Nichols, B., Quince, C. & Mah\u00e9, F. VSEARCH: a versatile open source tool for metagenomics. PeerJ 4, e2584 (2016)","title":"Bactopia Tools - *phyloflash*"},{"location":"bactopia-tools/phyloflash/#bactopia-tools-phyloflash","text":"The phyloflash tool uses phyloFlash to resconstruct 16S rRNA genes from your input samples. Optionally these reconstructed genes can then be aligned to one another with MAFFT and a phylogenetic representation created using IQ-TREE","title":"Bactopia Tools - phyloflash"},{"location":"bactopia-tools/phyloflash/#example","text":"The following command will reconstruct the 16S rRNA gene for each sample except those listed in the exclude file. bactopia tools phyloflash \\ --bactopia ~/bactopia-tutorial/bactopia \\ --phyloflash ~/bactopia-tutorial/bactopia-datasets/16s/138 \\ --exclude ~/bactopia-tutorial/bactopia-tools/summary/bactopia-exclude.txt","title":"Example"},{"location":"bactopia-tools/phyloflash/#output-overview","text":"Below is the default output structure for the phyloflash tool. Where possible the file descriptions below were modified from a tools description. bactopia-tools/ \u2514\u2500\u2500 phyloflash/ \u2514\u2500\u2500 ${PREFIX} \u251c\u2500\u2500 alignment \u2502 \u251c\u2500\u2500 phyloflash-alignment.fasta \u2502 \u2514\u2500\u2500 phyloflash-matches.txt \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 phyloflash-report.html \u2502 \u251c\u2500\u2500 phyloflash-timeline.html \u2502 \u2514\u2500\u2500 phyloflash-trace.txt \u251c\u2500\u2500 iqtree \u2502 \u251c\u2500\u2500 16s.alninfo \u2502 \u251c\u2500\u2500 16s.bionj \u2502 \u251c\u2500\u2500 16s.ckp.gz \u2502 \u251c\u2500\u2500 16s.iqtree \u2502 \u251c\u2500\u2500 16s.log \u2502 \u251c\u2500\u2500 16s.mldist \u2502 \u251c\u2500\u2500 16s.model.gz \u2502 \u251c\u2500\u2500 16s.treefile \u2502 \u2514\u2500\u2500 16s.uniqueseq.phy \u251c\u2500\u2500 phyloflash.iqtree \u251c\u2500\u2500 phyloflash-summary.txt \u2514\u2500\u2500 samples \u2514\u2500\u2500 ${SAMPLE_NAME} \u251c\u2500\u2500 ${SAMPLE_NAME}.all.dbhits.NR97.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.phyloFlash.dbhits.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.final.phyloFlash.notmatched.fa \u251c\u2500\u2500 ${SAMPLE_NAME}.all.vsearch.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.assemratio.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.assemratio.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.bbmap.out \u251c\u2500\u2500 ${SAMPLE_NAME}.bbmap.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.hitstats \u251c\u2500\u2500 ${SAMPLE_NAME}.idhistogram \u251c\u2500\u2500 ${SAMPLE_NAME}.idhistogram.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.inserthistogram \u251c\u2500\u2500 ${SAMPLE_NAME}.inserthistogram.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.mapratio.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.mapratio.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.extractedSSUclassifications.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.html \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.json \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.NTUfull_abundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.report.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.phyloFlash.unassembled.NTUabundance.csv \u251c\u2500\u2500 ${SAMPLE_NAME}.remap_spades.bbmap.out \u251c\u2500\u2500 ${SAMPLE_NAME}.spades.out \u251c\u2500\u2500 ${SAMPLE_NAME}.spades_rRNAs.final.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.1.fq \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.2.fq \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.${SAMPLE_NAME}_R1.fastq.gz.SSU_spades.sam \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.alignment.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta.tree \u251c\u2500\u2500 ${SAMPLE_NAME}.SSU.collection.fasta.tree.svg \u251c\u2500\u2500 ${SAMPLE_NAME}.toalign.fasta \u2514\u2500\u2500 ${SAMPLE_NAME}-unprocessed.txt Filename Description phyloflash.iqtree Full result of the run, this is the main report file (a copy of iqtree/16s.iqtree ) phyloflash-summary.txt The aggregated phyloFlash results of all samples","title":"Output Overview"},{"location":"bactopia-tools/phyloflash/#directory-description","text":"","title":"Directory Description"},{"location":"bactopia-tools/phyloflash/#alignment","text":"Filename Description phyloflash-alignment.fasta The multiple sequence alignment produced by MAFFT. phyloflash-matches.txt A list of reconstructed 16S genes and their match","title":"alignment"},{"location":"bactopia-tools/phyloflash/#bactopia-info","text":"Filename Description phyloflash-report.html The Nextflow Execution Report phyloflash-timeline.html The Nextflow Timeline Report phyloflash-trace.txt The Nextflow Trace report","title":"bactopia-info"},{"location":"bactopia-tools/phyloflash/#iqtree","text":"Where possible descriptions were taken from IQ-TREE's Command Reference page, Web Server Tutorial page, and the Tutorial page. Filename Description 16s.alninfo Alignment site statistics 16s.bionj A neighbor joining tree produced by BIONJ 16s.ckp.gz IQ-TREE writes a checkpoint file 16s.contree Consensus tree with assigned branch supports where branch lengths are optimized on the original alignment; printed if Ultrafast Bootstrap is selected 16s.iqtree Full result of the run, this is the main report file 16s.log Run log 16s.mldist Contains the likelihood distances 16s.model.gz Information about all models tested 16s.splits.nex Support values in percentage for all splits (bipartitions), computed as the occurence frequencies in the bootstrap trees 16s.treefile Maximum likelihood tree in NEWICK format, can be visualized with treeviewer programs 16s.ufboot Trees created during the bootstrap steps 16s.uniqueseq.phy Unique sequences indentified by IQ-TREE","title":"iqtree"},{"location":"bactopia-tools/phyloflash/#samples","text":"Where possible descriptions were taken from phyloFlash's Output Summary and the phyloFlash source PhyloFlash.pm Filename Description ${SAMPLE_NAME}.all.dbhits.NR97.fa Reference sequences from database with hits from the supplied reads, clustered at 97% identity ${SAMPLE_NAME}.all.final.fasta All assembled and reconstructed sequences from SPAdes in a single file ${SAMPLE_NAME}.all.final.phyloFlash.dbhits.fa FASTA file of all sequences in database with hits to reconstructed sequences ${SAMPLE_NAME}.all.final.phyloFlash.notmatched.fa FASTA file of full-length sequences without any database hits ${SAMPLE_NAME}.all.vsearch.csv CSV file of Vsearch output ${SAMPLE_NAME}.assemratio.csv CSV file of ratio assembled to unassembled ${SAMPLE_NAME}.assemratio.csv.svg A SVG image of the above ratios ${SAMPLE_NAME}.bbmap.out The bbmap log ${SAMPLE_NAME}.bbmap.sam The alignment of reads against 16S genes ${SAMPLE_NAME}.hitstats A SVG image of the above ratios ${SAMPLE_NAME}.idhistogram Histogram of the % identity of reads vs. reference database sequences, in tab-separated format ${SAMPLE_NAME}.idhistogram.svg A SVG image of the histogram above ${SAMPLE_NAME}.inserthistogram Histogram of detected insert sizes in tab-separated format, if paired-end reads were input ${SAMPLE_NAME}.inserthistogram.svg A SVG image of the above histogram ${SAMPLE_NAME}.mapratio.csv Ratios of mapped vs unmapped to report ${SAMPLE_NAME}.mapratio.csv.svg A SVG image of the above ratio ${SAMPLE_NAME}.phyloFlash Plain text file version of the HTML report ${SAMPLE_NAME}.phyloFlash.extractedSSUclassifications.csv Taxonomic classification of full-length sequences, in CSV format ${SAMPLE_NAME}.phyloFlash.html phyloFlash report file in HTML format, with a report on the taxonomic composition of SSU rRNA reads, quality metrics for the library, and affiliation of the reconstructed/assembled full-length sequences ${SAMPLE_NAME}.phyloFlash.json JSON version of ${SAMPLE_NAME}.phyloFlash ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv The list of uniqe higher level taxa (e.g. orders for bacteria) in the order of their appearance ${SAMPLE_NAME}.phyloFlash.NTUabundance.csv.svg A SVG image depicting the NTU abundances ${SAMPLE_NAME}.phyloFlash.NTUfull_abundance.csv NTU abundances (untruncated) from initial mapping, in CSV format ${SAMPLE_NAME}.phyloFlash.report.csv phyloFlash report in CSV format ${SAMPLE_NAME}.phyloFlash.unassembled.NTUabundance.csv Taxonomic composition of unassembled SSU reads in CSV format ${SAMPLE_NAME}.remap_spades.bbmap.out SAM file of re-mapping extracted reads to SPAdes full-length sequences ${SAMPLE_NAME}.spades.out The SPAdes log ${SAMPLE_NAME}.spades_rRNAs.final.fasta Assembled OTUs from SPAdes with phyloFlash simplified headers \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.1.fq The filtered SSU reads and their paired read, forward read file \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.2.fq The filtered SSU reads and their paired read, reverse read file \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU.sam SAM file of initial read mapping to SSU rRNA database \\({SAMPLE_NAME}.\\) _R1.fastq.gz.SSU_spades.sam SAM file of re-mapping extracted reads to SPAdes full-length sequences ${SAMPLE_NAME}.SSU.collection.alignment.fasta An aligned multifasta of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta A multifasta of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta.tree An NJ tree of the MAFFT alignment of all the predicted OTUs and the references ${SAMPLE_NAME}.SSU.collection.fasta.tree.svg An SVG image of the tree above ${SAMPLE_NAME}.toalign.fasta Sequences from the sample that were used in the MAFFT alignment ${SAMPLE_NAME}-unprocessed.txt Text file with reason for not processing sample","title":"samples"},{"location":"bactopia-tools/phyloflash/#usage","text":"Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. --phyloflash STR Directory containing a pre-built phyloFlash database. Optional Parameters: --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --prefix DIR Prefix to use for final output files Default: phyloflash --outdir DIR Directory to write results to Default: ./ --max_time INT The maximum number of minutes a job should run before being halted. Default: 1440 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 4 phyloFlash Related Parameters: --download_phyloflash Download the latest phyloFlash database, even it exists. --yes You acknowledge SILVAs license. --taxlevel INT Level in the taxonomy string to summarize read counts per taxon. Numeric and 1-based (i.e. \"1\" corresponds to \"Domain\"). Default: 6 --phyloflash_opts STR Extra phyloFlash options in quotes. Default: '' --allow_multiple_16s Include samples with multiple reconstructed 16S genes. Due to high sequence similarity in true multi-copy 16S genes, it is unlikely each copy will be reconstructed, instead only one. In order to get more than one reconstructed 16S gene there must be a significant difference in the sequence identity. As a consequence, any samples that have multiple 16S genes reconstructed contain multiple different species within their sequencing. Default: Exclude samples with multiple 16S genes MAFFT Related Parameters: --align_all Include reconstructed 16S genes as well as the corresponding reference 16S genes in the alignment. --mafft_opts STR MAFFT options to include (in quotes). Default: '' IQ-TREE Related Parameters: --skip_phylogeny Skip the creation a core-genome based phylogeny --m STR Substitution model name Default: MFP --bb INT Ultrafast bootstrap replicates Default: 1000 --alrt INT SH-like approximate likelihood ratio test replicates Default: 1000 --asr Ancestral state reconstruction by empirical Bayes Default: false --iqtree_opts STR Extra IQ-TREE options in quotes. Default: '' Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: false --conatainerPath Path to Singularity containers to be used by the 'slurm' profile. Default: /opt/bactopia/singularity --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds Useful Parameters: --version Print workflow version information --help Show this message and exit","title":"Usage"},{"location":"bactopia-tools/phyloflash/#conda-environment","text":"Below is the command that was used to create the Conda environment. conda create -y -n bactopia-phyloflash -c conda-forge -c bioconda \\ phyloflash \\ mafft \\ iqtree \\ pigz","title":"Conda Environment"},{"location":"bactopia-tools/phyloflash/#references","text":"Barrnap Seemann, T. Barrnap: Bacterial ribosomal RNA predictor . BBTools Bushnell, B. BBMap short read aligner, and other bioinformatic tools. Bedtools Quinlan, A. R. & Hall, I. M. BEDTools: a flexible suite of utilities for comparing genomic features . Bioinformatics 26, 841\u2013842 (2010). IQ-TREE L.-T. Nguyen, H.A. Schmidt, A. von Haeseler, B.Q. Minh (2015) IQ-TREE: A fast and effective stochastic algorithm for estimating maximum likelihood phylogenies. Mol. Biol. Evol., 32:268-274. S. Kalyaanamoorthy, B.Q. Minh, T.K.F. Wong, A. von Haeseler, L.S. Jermiin (2017) ModelFinder: Fast model selection for accurate phylogenetic estimates. Nat. Methods, 14:587-589. D.T. Hoang, O. Chernomor, A. von Haeseler, B.Q. Minh, L.S. Vinh (2018) UFBoot2: Improving the ultrafast bootstrap approximation. Mol. Biol. Evol., 35:518\u2013522. MAFFT Katoh, K. & Standley, D. M. MAFFT multiple sequence alignment software version 7: improvements in performance and usability. Mol. Biol. Evol. 30, 772\u2013780 (2013) nhmmer Wheeler, T. J. & Eddy, S. R. nhmmer: DNA homology search with profile HMMs. Bioinformatics 29, 2487\u20132489 (2013) phyloFlash H. R. Gruber-Vodicka, B.KB. Seah, E. Pruesse. phyloFlash \u2014 Rapid SSU rRNA profiling and targeted assembly from metagenomes. bioRxiv 521922 SILVA rRNA Database Quast, C. et al. The SILVA ribosomal RNA gene database project: improved data processing and web-based tools. Nucleic Acids Res. 41, D590\u20136 (2013) SPAdes Bankevich, A., et al. SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing. Journal of computational biology 19.5 (2012): 455-477. VSEARCH Rognes, T., Flouri, T., Nichols, B., Quince, C. & Mah\u00e9, F. VSEARCH: a versatile open source tool for metagenomics. PeerJ 4, e2584 (2016)","title":"References"},{"location":"bactopia-tools/pirate/","tags":["alignment","gff","pan-genome"],"text":"Bactopia Tool - pirate \u00b6 The pirate module uses PIRATE to create a pan-genome of your samples. Example Usage \u00b6 bactopia --wf pirate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis PIRATE Parameters \u00b6 Parameter Description Default --steps Percent identity thresholds to use for pangenome construction 50,60,70,80,90,95,98 --features Comma-delimited features to use for pangenome construction CDS --para_off Switch off paralog identification False --z Retain all PIRATE intermediate files False --pan_opt Additional arguments to pass to pangenome contruction. Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and pirate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) PIRATE Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019)","title":"Bactopia Tool - `pirate`"},{"location":"bactopia-tools/pirate/#bactopia-tool-pirate","text":"The pirate module uses PIRATE to create a pan-genome of your samples.","title":"Bactopia Tool - pirate"},{"location":"bactopia-tools/pirate/#example-usage","text":"bactopia --wf pirate \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/pirate/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/pirate/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/pirate/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/pirate/#pirate-parameters","text":"Parameter Description Default --steps Percent identity thresholds to use for pangenome construction 50,60,70,80,90,95,98 --features Comma-delimited features to use for pangenome construction CDS --para_off Switch off paralog identification False --z Retain all PIRATE intermediate files False --pan_opt Additional arguments to pass to pangenome contruction.","title":"PIRATE Parameters"},{"location":"bactopia-tools/pirate/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/pirate/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/pirate/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/pirate/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/pirate/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/pirate/#citations","text":"If you use Bactopia and pirate in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) PIRATE Bayliss SC, Thorpe HA, Coyle NM, Sheppard SK, Feil EJ PIRATE: A fast and scalable pangenomics toolbox for clustering diverged orthologues in bacteria. Gigascience 8 (2019)","title":"Citations"},{"location":"bactopia-tools/prokka/","tags":["annotation","fasta"],"text":"Bactopia Tool - prokka \u00b6 The prokka module uses Prokka to rapidly annotate bacterial genomes and plasmids. Example Usage \u00b6 bactopia --wf prokka \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Prokka Parameters \u00b6 Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --prokka_coverage Minimum coverage on query protein 80 --prokka_evalue Similarity e-value cut-off 1e-09 --prokka_opts Extra Prokka options in quotes. Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and prokka in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Prokka Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014)","title":"prokka"},{"location":"bactopia-tools/prokka/#bactopia-tool-prokka","text":"The prokka module uses Prokka to rapidly annotate bacterial genomes and plasmids.","title":"Bactopia Tool - prokka"},{"location":"bactopia-tools/prokka/#example-usage","text":"bactopia --wf prokka \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/prokka/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/prokka/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/prokka/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/prokka/#prokka-parameters","text":"Parameter Description Default --proteins FASTA file of trusted proteins to first annotate from --prodigal_tf Training file to use for Prodigal --prokka_coverage Minimum coverage on query protein 80 --prokka_evalue Similarity e-value cut-off 1e-09 --prokka_opts Extra Prokka options in quotes.","title":"Prokka Parameters"},{"location":"bactopia-tools/prokka/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/prokka/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/prokka/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/prokka/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/prokka/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/prokka/#citations","text":"If you use Bactopia and prokka in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Prokka Seemann T Prokka: rapid prokaryotic genome annotation Bioinformatics 30, 2068\u20132069 (2014)","title":"Citations"},{"location":"bactopia-tools/rgi/","text":"Bactopia Tool - rgi \u00b6 The rgi module uses Resistance Gene Identifier (RGI) to identify antibiotic resistance genes in assemblies. Example Usage \u00b6 bactopia --wf rgi \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the rgi tool. Where possible the file descriptions below were modified from a tools description. rgi/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 rgi \u2502 \u251c\u2500\u2500 nf-rgi.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 rgi_heatmap \u2502 \u251c\u2500\u2500 nf-rgi_heatmap.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 rgi-dag.dot \u2502 \u251c\u2500\u2500 rgi-report.html \u2502 \u251c\u2500\u2500 rgi-timeline.html \u2502 \u2514\u2500\u2500 rgi-trace.txt \u251c\u2500\u2500 rgi-20.{csv,eps,png} \u251c\u2500\u2500 rgi.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description rgi-20.{csv,eps,png} Heatmap representations as text and images, see RGI - Heatmap for more details rgi.tsv A merged TSV file with rgi results from all samples rgi \u00b6 Below is a description of the per-sample results from RGI . Filename Description <SAMPLE_NAME>.json A JSON file with rgi results <SAMPLE_NAME>.txt A tab-delimited file with egi results, see RGI - Output Details for more details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description rgi-dag.dot The Nextflow DAG visualisation rgi-report.html The Nextflow Execution Report rgi-timeline.html The Nextflow Timeline Report rgi-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis RGI Parameters \u00b6 Parameter Description Default --use_diamond Use DIAMOND for alignments instead of BLAST False --include_loose Include loose hits in addition to strict and perfect hits False --exclude_nudge Exclude hits nudged from loose to strict hits False --rgi_frequency Represent samples based on resistance profile False --rgi_category Organize resistance genes based on a category --rgi_cluster Use SciPy's hiearchical clustering algorithm to cluster rows (AMR genes) or columns (samples) --rgi_display Specify display options for categories plain Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and rgi in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Resistance Gene Identifier (RGI) Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020)","title":"rgi"},{"location":"bactopia-tools/rgi/#bactopia-tool-rgi","text":"The rgi module uses Resistance Gene Identifier (RGI) to identify antibiotic resistance genes in assemblies.","title":"Bactopia Tool - rgi"},{"location":"bactopia-tools/rgi/#example-usage","text":"bactopia --wf rgi \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/rgi/#output-overview","text":"Below is the default output structure for the rgi tool. Where possible the file descriptions below were modified from a tools description. rgi/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 rgi \u2502 \u251c\u2500\u2500 nf-rgi.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 custom_dumpsoftwareversions \u2502 \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 rgi_heatmap \u2502 \u251c\u2500\u2500 nf-rgi_heatmap.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 rgi-dag.dot \u2502 \u251c\u2500\u2500 rgi-report.html \u2502 \u251c\u2500\u2500 rgi-timeline.html \u2502 \u2514\u2500\u2500 rgi-trace.txt \u251c\u2500\u2500 rgi-20.{csv,eps,png} \u251c\u2500\u2500 rgi.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml","title":"Output Overview"},{"location":"bactopia-tools/rgi/#results","text":"","title":"Results"},{"location":"bactopia-tools/rgi/#top-level","text":"Below are results that are in the base directory. Filename Description rgi-20.{csv,eps,png} Heatmap representations as text and images, see RGI - Heatmap for more details rgi.tsv A merged TSV file with rgi results from all samples","title":"Top Level"},{"location":"bactopia-tools/rgi/#rgi","text":"Below is a description of the per-sample results from RGI . Filename Description <SAMPLE_NAME>.json A JSON file with rgi results <SAMPLE_NAME>.txt A tab-delimited file with egi results, see RGI - Output Details for more details","title":"rgi"},{"location":"bactopia-tools/rgi/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/rgi/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/rgi/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description rgi-dag.dot The Nextflow DAG visualisation rgi-report.html The Nextflow Execution Report rgi-timeline.html The Nextflow Timeline Report rgi-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/rgi/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/rgi/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/rgi/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/rgi/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/rgi/#rgi-parameters","text":"Parameter Description Default --use_diamond Use DIAMOND for alignments instead of BLAST False --include_loose Include loose hits in addition to strict and perfect hits False --exclude_nudge Exclude hits nudged from loose to strict hits False --rgi_frequency Represent samples based on resistance profile False --rgi_category Organize resistance genes based on a category --rgi_cluster Use SciPy's hiearchical clustering algorithm to cluster rows (AMR genes) or columns (samples) --rgi_display Specify display options for categories plain","title":"RGI Parameters"},{"location":"bactopia-tools/rgi/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/rgi/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/rgi/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/rgi/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/rgi/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/rgi/#citations","text":"If you use Bactopia and rgi in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Resistance Gene Identifier (RGI) Alcock BP, Raphenya AR, Lau TTY, Tsang KK, Bouchard M, Edalatmand A, Huynh W, Nguyen A-L V, Cheng AA, Liu S, Min SY, Miroshnichenko A, Tran H-K, Werfalli RE, Nasir JA, Oloni M, Speicher DJ, Florescu A, Singh B, Faltyn M, Hernandez-Koutoucheva A, Sharma AN, Bordeleau E, Pawlowski AC, Zubyk HL, Dooley D, Griffiths E, Maguire F, Winsor GL, Beiko RG, Brinkman FSL, Hsiao WWL, Domselaar GV, McArthur AG CARD 2020: antibiotic resistome surveillance with the comprehensive antibiotic resistance database. Nucleic acids research 48.D1, D517-D525 (2020)","title":"Citations"},{"location":"bactopia-tools/roary/","text":"Bactopia Tool - roary \u00b6 The roary module uses Roary to create a pan-genome of your samples. Example Usage \u00b6 bactopia --wf roary \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Roary Parameters \u00b6 Parameter Description Default --use_prank Use PRANK instead of MAFFT for core gene False --use_roary Use Roary instead of PIRATE in the 'pangenome' subworkflow False --i Minimum percentage identity for blastp 95 --cd Percentage of isolates a gene must be in to be core 99 --g Maximum number of clusters 50000 --s Do not split paralogs False --ap Allow paralogs in core alignment False --iv MCL inflation value 1.5 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and roary in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Roary Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015)","title":"Bactopia Tool - `roary`"},{"location":"bactopia-tools/roary/#bactopia-tool-roary","text":"The roary module uses Roary to create a pan-genome of your samples.","title":"Bactopia Tool - roary"},{"location":"bactopia-tools/roary/#example-usage","text":"bactopia --wf roary \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/roary/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/roary/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/roary/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/roary/#roary-parameters","text":"Parameter Description Default --use_prank Use PRANK instead of MAFFT for core gene False --use_roary Use Roary instead of PIRATE in the 'pangenome' subworkflow False --i Minimum percentage identity for blastp 95 --cd Percentage of isolates a gene must be in to be core 99 --g Maximum number of clusters 50000 --s Do not split paralogs False --ap Allow paralogs in core alignment False --iv MCL inflation value 1.5","title":"Roary Parameters"},{"location":"bactopia-tools/roary/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/roary/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/roary/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/roary/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/roary/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/roary/#citations","text":"If you use Bactopia and roary in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Roary Page AJ, Cummins CA, Hunt M, Wong VK, Reuter S, Holden MTG, Fookes M, Falush D, Keane JA, Parkhill J Roary: rapid large-scale prokaryote pan genome analysis. Bioinformatics 31, 3691\u20133693 (2015)","title":"Citations"},{"location":"bactopia-tools/scoary/","text":"Bactopia Tool - scoary \u00b6 The scoary module uses Scoary to conduct pan-genome wide association studies of PIRATE and Roary outputs. Example Usage \u00b6 bactopia --wf scoary \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis Scoary Parameters \u00b6 Parameter Description Default --traits Input trait table (CSV) to test for associations --p_value_cutoff For statistical tests, genes with higher p-values will not be reported 0.05 --correction Apply the indicated filtration measure. I --permute Perform N number of permutations of the significant results post-analysis 0 --start_col On which column in the gene presence/absence file do individual strain info start 15 Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and scoary in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Scoary Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016)","title":"Bactopia Tool - `scoary`"},{"location":"bactopia-tools/scoary/#bactopia-tool-scoary","text":"The scoary module uses Scoary to conduct pan-genome wide association studies of PIRATE and Roary outputs.","title":"Bactopia Tool - scoary"},{"location":"bactopia-tools/scoary/#example-usage","text":"bactopia --wf scoary \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/scoary/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/scoary/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/scoary/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/scoary/#scoary-parameters","text":"Parameter Description Default --traits Input trait table (CSV) to test for associations --p_value_cutoff For statistical tests, genes with higher p-values will not be reported 0.05 --correction Apply the indicated filtration measure. I --permute Perform N number of permutations of the significant results post-analysis 0 --start_col On which column in the gene presence/absence file do individual strain info start 15","title":"Scoary Parameters"},{"location":"bactopia-tools/scoary/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/scoary/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/scoary/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/scoary/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/scoary/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/scoary/#citations","text":"If you use Bactopia and scoary in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) Scoary Brynildsrud O, Bohlin J, Scheffer L, Eldholm V Rapid scoring of genes in microbial pan-genome-wide association studies with Scoary. Genome Biol. 17:238 (2016)","title":"Citations"},{"location":"bactopia-tools/seqsero2/","tags":["fasta","fastq","Salmonella","sertotype"],"text":"Bactopia Tool - seqsero2 \u00b6 The seqsero2 module uses SeqSero2 for Salmonella serotype prediction from reads and assemblies . Example Usage \u00b6 bactopia --wf seqsero2 \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the seqsero2 tool. Where possible the file descriptions below were modified from a tools description. seqsero2/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_log.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 seqsero2 \u2502 \u251c\u2500\u2500 nf-seqsero2.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 seqsero2-dag.dot \u2502 \u251c\u2500\u2500 seqsero2-report.html \u2502 \u251c\u2500\u2500 seqsero2-timeline.html \u2502 \u2514\u2500\u2500 seqsero2-trace.txt \u251c\u2500\u2500 seqsero2.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different seqsero2 is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the seqsero2 directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description seqsero2.tsv A merged TSV file with seqsero2 results from all samples SeqSero2 \u00b6 Below is a description of the per-sample results from SeqSero2 . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with SeqSero2 results <SAMPLE_NAME>.txt A text file with key-value pairs of SeqSero2 results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description seqsero2-dag.dot The Nextflow DAG visualisation seqsero2-report.html The Nextflow Execution Report seqsero2-timeline.html The Nextflow Timeline Report seqsero2-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis SeqSero2 Parameters \u00b6 Parameter Description Default --run_mode Workflow to run. 'a' allele mode, or 'k' k-mer mode k --input_type Input format to analyze. 'assembly' or 'fastq' assembly --bwa_mode Algorithms for bwa mapping for allele mode mem Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and seqsero2 in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SeqSero2 Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019)","title":"seqsero2"},{"location":"bactopia-tools/seqsero2/#bactopia-tool-seqsero2","text":"The seqsero2 module uses SeqSero2 for Salmonella serotype prediction from reads and assemblies .","title":"Bactopia Tool - seqsero2"},{"location":"bactopia-tools/seqsero2/#example-usage","text":"bactopia --wf seqsero2 \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/seqsero2/#output-overview","text":"Below is the default output structure for the seqsero2 tool. Where possible the file descriptions below were modified from a tools description. seqsero2/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_log.txt \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_result.txt \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 seqsero2 \u2502 \u251c\u2500\u2500 nf-seqsero2.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 seqsero2-dag.dot \u2502 \u251c\u2500\u2500 seqsero2-report.html \u2502 \u251c\u2500\u2500 seqsero2-timeline.html \u2502 \u2514\u2500\u2500 seqsero2-trace.txt \u251c\u2500\u2500 seqsero2.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different seqsero2 is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the seqsero2 directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/seqsero2/#results","text":"","title":"Results"},{"location":"bactopia-tools/seqsero2/#top-level","text":"Below are results that are in the base directory. Filename Description seqsero2.tsv A merged TSV file with seqsero2 results from all samples","title":"Top Level"},{"location":"bactopia-tools/seqsero2/#seqsero2","text":"Below is a description of the per-sample results from SeqSero2 . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with SeqSero2 results <SAMPLE_NAME>.txt A text file with key-value pairs of SeqSero2 results","title":"SeqSero2"},{"location":"bactopia-tools/seqsero2/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/seqsero2/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/seqsero2/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description seqsero2-dag.dot The Nextflow DAG visualisation seqsero2-report.html The Nextflow Execution Report seqsero2-timeline.html The Nextflow Timeline Report seqsero2-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/seqsero2/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/seqsero2/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/seqsero2/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/seqsero2/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/seqsero2/#seqsero2-parameters","text":"Parameter Description Default --run_mode Workflow to run. 'a' allele mode, or 'k' k-mer mode k --input_type Input format to analyze. 'assembly' or 'fastq' assembly --bwa_mode Algorithms for bwa mapping for allele mode mem","title":"SeqSero2 Parameters"},{"location":"bactopia-tools/seqsero2/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/seqsero2/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/seqsero2/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/seqsero2/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/seqsero2/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/seqsero2/#citations","text":"If you use Bactopia and seqsero2 in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SeqSero2 Zhang S, Den-Bakker HC, Li S, Dinsmore BA, Lane C, Lauer AC, Fields PI, Deng X. SeqSero2: rapid and improved Salmonella serotype determination using whole genome sequencing data. Appl Environ Microbiology 85(23):e01746-19 (2019)","title":"Citations"},{"location":"bactopia-tools/shigatyper/","text":"Bactopia Tool - shigatyper \u00b6 The shigatyper module uses ShigaTyyper to rapidly determine Shigella serotype using Illumina (single or paired-end) or Oxford Nanopore reads taxonomic. Example Usage \u00b6 bactopia --wf shigatyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the shigatyper tool. Where possible the file descriptions below were modified from a tools description. shigatyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-hits.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 shigatyper \u2502 \u251c\u2500\u2500 nf-shigatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 shigatyper-dag.dot \u2502 \u251c\u2500\u2500 shigatyper-report.html \u2502 \u251c\u2500\u2500 shigatyper-timeline.html \u2502 \u2514\u2500\u2500 shigatyper-trace.txt \u251c\u2500\u2500 shigatyper.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different shigatyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the shigatyper directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description shigatyper.tsv A merged TSV file with ShigaTyper results from all samples ShigaTyper \u00b6 Below is a description of the per-sample results from ShigaTyyper . Filename Description -hits.tsv Detailed statistics about each individual gene hit .tsv The final predicted serotype by ShigaTyper Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description shigatyper-dag.dot The Nextflow DAG visualisation shigatyper-report.html The Nextflow Execution Report shigatyper-timeline.html The Nextflow Timeline Report shigatyper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis ShigaTyper Parameters \u00b6 Parameter Description Default Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and shigatyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ShigaTyper Wu Y, Lau HK, Lee T, Lau DK, Payne J In Silico Serotyping Based on Whole-Genome Sequencing Improves the Accuracy of Shigella Identification. Applied and Environmental Microbiology , 85(7). (2019)","title":"shigatyper"},{"location":"bactopia-tools/shigatyper/#bactopia-tool-shigatyper","text":"The shigatyper module uses ShigaTyyper to rapidly determine Shigella serotype using Illumina (single or paired-end) or Oxford Nanopore reads taxonomic.","title":"Bactopia Tool - shigatyper"},{"location":"bactopia-tools/shigatyper/#example-usage","text":"bactopia --wf shigatyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/shigatyper/#output-overview","text":"Below is the default output structure for the shigatyper tool. Where possible the file descriptions below were modified from a tools description. shigatyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-hits.tsv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 shigatyper \u2502 \u251c\u2500\u2500 nf-shigatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 shigatyper-dag.dot \u2502 \u251c\u2500\u2500 shigatyper-report.html \u2502 \u251c\u2500\u2500 shigatyper-timeline.html \u2502 \u2514\u2500\u2500 shigatyper-trace.txt \u251c\u2500\u2500 shigatyper.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different shigatyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the shigatyper directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/shigatyper/#results","text":"","title":"Results"},{"location":"bactopia-tools/shigatyper/#top-level","text":"Below are results that are in the base directory. Filename Description shigatyper.tsv A merged TSV file with ShigaTyper results from all samples","title":"Top Level"},{"location":"bactopia-tools/shigatyper/#shigatyper","text":"Below is a description of the per-sample results from ShigaTyyper . Filename Description -hits.tsv Detailed statistics about each individual gene hit .tsv The final predicted serotype by ShigaTyper","title":"ShigaTyper"},{"location":"bactopia-tools/shigatyper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/shigatyper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/shigatyper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description shigatyper-dag.dot The Nextflow DAG visualisation shigatyper-report.html The Nextflow Execution Report shigatyper-timeline.html The Nextflow Timeline Report shigatyper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/shigatyper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/shigatyper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/shigatyper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/shigatyper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/shigatyper/#shigatyper-parameters","text":"Parameter Description Default","title":"ShigaTyper Parameters"},{"location":"bactopia-tools/shigatyper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/shigatyper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/shigatyper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/shigatyper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/shigatyper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/shigatyper/#citations","text":"If you use Bactopia and shigatyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) ShigaTyper Wu Y, Lau HK, Lee T, Lau DK, Payne J In Silico Serotyping Based on Whole-Genome Sequencing Improves the Accuracy of Shigella Identification. Applied and Environmental Microbiology , 85(7). (2019)","title":"Citations"},{"location":"bactopia-tools/sistr/","text":"Bactopia Tool - sistr \u00b6 The sistr module uses Salmonella In Silico Typing Resource , or SISTR, for serovar prediction of Salmonella assemblies. Example Usage \u00b6 bactopia --wf sistr \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the sistr tool. Where possible the file descriptions below were modified from a tools description. sistr/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.fasta.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.json.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-cgmlst.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 sistr \u2502 \u251c\u2500\u2500 nf-sistr.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 sistr-dag.dot \u2502 \u251c\u2500\u2500 sistr-report.html \u2502 \u251c\u2500\u2500 sistr-timeline.html \u2502 \u2514\u2500\u2500 sistr-trace.txt \u251c\u2500\u2500 sistr.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different sistr is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the sistr directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description sistr.tsv A merged TSV file with SISTR results from all samples SISTR \u00b6 Below is a description of the per-sample results from SISTR . Filename Description <SAMPLE_NAME>-allele.fasta.gz A FASTA file of the cgMLST allele search results <SAMPLE_NAME>-allele.json.gz JSON formated cgMLST allele search results, see SISTR - cgMLST search results for more details <SAMPLE_NAME>-cgmlst.csv A comma-delimited summary of the cgMLST allele search results <SAMPLE_NAME>.tsv A tab-delimited file with SISTR results, see SISTR - Primary results for more details Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description sistr-dag.dot The Nextflow DAG visualisation sistr-report.html The Nextflow Execution Report sistr-timeline.html The Nextflow Timeline Report sistr-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis SISTR Parameters \u00b6 Parameter Description Default --full_cgmlst Use the full set of cgMLST alleles which can include highly similar alleles False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and sistr in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SISTR Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016)","title":"sistr"},{"location":"bactopia-tools/sistr/#bactopia-tool-sistr","text":"The sistr module uses Salmonella In Silico Typing Resource , or SISTR, for serovar prediction of Salmonella assemblies.","title":"Bactopia Tool - sistr"},{"location":"bactopia-tools/sistr/#example-usage","text":"bactopia --wf sistr \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/sistr/#output-overview","text":"Below is the default output structure for the sistr tool. Where possible the file descriptions below were modified from a tools description. sistr/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.fasta.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-allele.json.gz \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-cgmlst.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 sistr \u2502 \u251c\u2500\u2500 nf-sistr.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 sistr-dag.dot \u2502 \u251c\u2500\u2500 sistr-report.html \u2502 \u251c\u2500\u2500 sistr-timeline.html \u2502 \u2514\u2500\u2500 sistr-trace.txt \u251c\u2500\u2500 sistr.tsv \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions_mqc.yml Directory structure might be different sistr is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the sistr directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/sistr/#results","text":"","title":"Results"},{"location":"bactopia-tools/sistr/#top-level","text":"Below are results that are in the base directory. Filename Description sistr.tsv A merged TSV file with SISTR results from all samples","title":"Top Level"},{"location":"bactopia-tools/sistr/#sistr","text":"Below is a description of the per-sample results from SISTR . Filename Description <SAMPLE_NAME>-allele.fasta.gz A FASTA file of the cgMLST allele search results <SAMPLE_NAME>-allele.json.gz JSON formated cgMLST allele search results, see SISTR - cgMLST search results for more details <SAMPLE_NAME>-cgmlst.csv A comma-delimited summary of the cgMLST allele search results <SAMPLE_NAME>.tsv A tab-delimited file with SISTR results, see SISTR - Primary results for more details","title":"SISTR"},{"location":"bactopia-tools/sistr/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/sistr/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/sistr/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description sistr-dag.dot The Nextflow DAG visualisation sistr-report.html The Nextflow Execution Report sistr-timeline.html The Nextflow Timeline Report sistr-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/sistr/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/sistr/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/sistr/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/sistr/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/sistr/#sistr-parameters","text":"Parameter Description Default --full_cgmlst Use the full set of cgMLST alleles which can include highly similar alleles False","title":"SISTR Parameters"},{"location":"bactopia-tools/sistr/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/sistr/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/sistr/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/sistr/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/sistr/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/sistr/#citations","text":"If you use Bactopia and sistr in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SISTR Yoshida CE, Kruczkiewicz P, Laing CR, Lingohr EJ, Gannon VPJ, Nash JHE, Taboada EN The Salmonella In Silico Typing Resource (SISTR): An Open Web-Accessible Tool for Rapidly Typing and Subtyping Draft Salmonella Genome Assemblies. PloS One , 11(1), e0147101. (2016)","title":"Citations"},{"location":"bactopia-tools/spatyper/","tags":["fasta","serotype","Staphylococcus aureus"],"text":"Bactopia Tool - spatyper \u00b6 The spatyper module uses spaTyper to assign spa types to Staphylococcus aureus assemblies. Example Usage \u00b6 bactopia --wf spatyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the spatyper tool. Where possible the file descriptions below were modified from a tools description. spatyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 spatyper \u2502 \u251c\u2500\u2500 nf-spatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 spatyper-dag.dot \u2502 \u251c\u2500\u2500 spatyper-report.html \u2502 \u251c\u2500\u2500 spatyper-timeline.html \u2502 \u2514\u2500\u2500 spatyper-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 spatyper.tsv Directory structure might be different spatyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the spatyper directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description spatyper.tsv A merged TSV file with spaTyper results from all samples spaTyper \u00b6 Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description spatyper-dag.dot The Nextflow DAG visualisation spatyper-report.html The Nextflow Execution Report spatyper-timeline.html The Nextflow Timeline Report spatyper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis spaTyper Parameters \u00b6 Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and spatyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) spaTyper Database Harmsen D, Claus H, Witte W, Rothg\u00e4nger J, Claus H, Turnwald D, and Vogel U Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003)","title":"spatyper"},{"location":"bactopia-tools/spatyper/#bactopia-tool-spatyper","text":"The spatyper module uses spaTyper to assign spa types to Staphylococcus aureus assemblies.","title":"Bactopia Tool - spatyper"},{"location":"bactopia-tools/spatyper/#example-usage","text":"bactopia --wf spatyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/spatyper/#output-overview","text":"Below is the default output structure for the spatyper tool. Where possible the file descriptions below were modified from a tools description. spatyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 spatyper \u2502 \u251c\u2500\u2500 nf-spatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 spatyper-dag.dot \u2502 \u251c\u2500\u2500 spatyper-report.html \u2502 \u251c\u2500\u2500 spatyper-timeline.html \u2502 \u2514\u2500\u2500 spatyper-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 spatyper.tsv Directory structure might be different spatyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the spatyper directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/spatyper/#results","text":"","title":"Results"},{"location":"bactopia-tools/spatyper/#top-level","text":"Below are results that are in the base directory. Filename Description spatyper.tsv A merged TSV file with spaTyper results from all samples","title":"Top Level"},{"location":"bactopia-tools/spatyper/#spatyper","text":"Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results","title":"spaTyper"},{"location":"bactopia-tools/spatyper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/spatyper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/spatyper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description spatyper-dag.dot The Nextflow DAG visualisation spatyper-report.html The Nextflow Execution Report spatyper-timeline.html The Nextflow Timeline Report spatyper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/spatyper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/spatyper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/spatyper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/spatyper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/spatyper/#spatyper-parameters","text":"Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False","title":"spaTyper Parameters"},{"location":"bactopia-tools/spatyper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/spatyper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/spatyper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/spatyper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/spatyper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/spatyper/#citations","text":"If you use Bactopia and spatyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) spaTyper Database Harmsen D, Claus H, Witte W, Rothg\u00e4nger J, Claus H, Turnwald D, and Vogel U Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003)","title":"Citations"},{"location":"bactopia-tools/ssuissero/","text":"Bactopia Tool - ssuissero \u00b6 The ssuissero module uses SsuisSero to predict the serotype of Streptococcus suis assemblies. Example Usage \u00b6 bactopia --wf ssuissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the ssuissero tool. Where possible the file descriptions below were modified from a tools description. ssuissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ssuissero \u2502 \u251c\u2500\u2500 nf-ssuissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ssuissero-dag.dot \u2502 \u251c\u2500\u2500 ssuissero-report.html \u2502 \u251c\u2500\u2500 ssuissero-timeline.html \u2502 \u2514\u2500\u2500 ssuissero-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 ssuissero.tsv Directory structure might be different ssuissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ssuissero directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description ssuissero.tsv A merged TSV file with SsuisSero results from all samples SsuisSero \u00b6 Below is a description of the per-sample results from SsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with SsuisSero results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ssuissero-dag.dot The Nextflow DAG visualisation ssuissero-report.html The Nextflow Execution Report ssuissero-timeline.html The Nextflow Timeline Report ssuissero-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis SsuisSero Parameters \u00b6 Parameter Description Default Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and ssuissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SsuisSero Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub)","title":"ssuissero"},{"location":"bactopia-tools/ssuissero/#bactopia-tool-ssuissero","text":"The ssuissero module uses SsuisSero to predict the serotype of Streptococcus suis assemblies.","title":"Bactopia Tool - ssuissero"},{"location":"bactopia-tools/ssuissero/#example-usage","text":"bactopia --wf ssuissero \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/ssuissero/#output-overview","text":"Below is the default output structure for the ssuissero tool. Where possible the file descriptions below were modified from a tools description. ssuissero/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>_serotyping_res.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 ssuissero \u2502 \u251c\u2500\u2500 nf-ssuissero.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 ssuissero-dag.dot \u2502 \u251c\u2500\u2500 ssuissero-report.html \u2502 \u251c\u2500\u2500 ssuissero-timeline.html \u2502 \u2514\u2500\u2500 ssuissero-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 ssuissero.tsv Directory structure might be different ssuissero is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the ssuissero directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/ssuissero/#results","text":"","title":"Results"},{"location":"bactopia-tools/ssuissero/#top-level","text":"Below are results that are in the base directory. Filename Description ssuissero.tsv A merged TSV file with SsuisSero results from all samples","title":"Top Level"},{"location":"bactopia-tools/ssuissero/#ssuissero","text":"Below is a description of the per-sample results from SsuisSero . Filename Description <SAMPLE_NAME>_serotyping_res.tsv A tab-delimited file with SsuisSero results","title":"SsuisSero"},{"location":"bactopia-tools/ssuissero/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/ssuissero/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/ssuissero/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description ssuissero-dag.dot The Nextflow DAG visualisation ssuissero-report.html The Nextflow Execution Report ssuissero-timeline.html The Nextflow Timeline Report ssuissero-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/ssuissero/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/ssuissero/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/ssuissero/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/ssuissero/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/ssuissero/#ssuissero-parameters","text":"Parameter Description Default","title":"SsuisSero Parameters"},{"location":"bactopia-tools/ssuissero/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/ssuissero/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/ssuissero/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/ssuissero/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/ssuissero/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/ssuissero/#citations","text":"If you use Bactopia and ssuissero in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) SsuisSero Lui J SsuisSero: Rapid Streptococcus suis serotyping (GitHub)","title":"Citations"},{"location":"bactopia-tools/staph-typer/","text":"Bactopia Tools - staph-typer \u00b6 The staph-typer tool includes multiple tools that are specific for typing certain features of Staphylococcus aureus . Currently staph-typer includes AgrVATE - agr locus type and agr operon variants. spaTyper - spa type staphopia-sccmec - SCCmec type This tool will evolve with S. aureus genomics, so you can expect it to add more typing methods (maybe even replace current methods) in the future. If a certain typing method for S. aureus please feel free to suggest it be added!~ Example \u00b6 The following command will run staph-typer on each available sample. bactopia tools staph-typer --bactopia ~/bactopia-tutorial/bactopia Output Overview \u00b6 Below is the default output structure for the staph-typer tool. Where possible the file descriptions below were modified from a tools description. bactopia-tools/ \u2514\u2500\u2500 staph-typer/ \u2514\u2500\u2500 ${PREFIX}/ \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 staph-typer-report.html \u2502 \u251c\u2500\u2500 staph-typer-timeline.html \u2502 \u2514\u2500\u2500 staph-typer-trace.txt \u2514\u2500\u2500 ${SAMPLE_NAME} \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_operon.fna \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_operon_frameshifts.tab \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-blastn_log.txt \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-mummer/ \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-mummer-log.txt \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-snippy/ \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-snippy-log.txt \u2502 \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}-summary.tab \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-spatyper.txt \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}-sccmec.txt \u251c\u2500\u2500 agrvate-results.txt \u251c\u2500\u2500 spatyper-results.txt \u2514\u2500\u2500 sccmec-results.txt Below is a description of staph-typer outputs. Filename Description agrvate-results.txt Merged set of outputs from AgrVATE spatyper-results.txt Merged set of outputs from spaTyper sccmec-results.txt Merged set of outputs from staphopia-sccmec Directory Description \u00b6 bactopia-info \u00b6 Filename Description staph-typer-report.html The Nextflow Execution Report staph-typer-timeline.html The Nextflow Timeline Report staph-typer-trace.txt The Nextflow Trace report Per Sample \u00b6 Filename Description ${SAMPLE_NAME}-spatyper.txt Predicted spa type from spaTyper ${SAMPLE_NAME}-sccmec.txt Predicted SCCmec type from staphopia-sccmec agrvate \u00b6 AgrVATE includes outputs from multiple programs so it gets a separate directory within the sample directory. Extension Description -agr_gp.tab Detailed report for agr kmer matches -agr_operon.fna Agr operon extracted from in-silico PCR -agr_operon_frameshifts.tab Frameshift mutations in CDS of extracted agr operon detected by Snippy log.txt Log files from programs called by AgrVATE -{mummer|snippy}/ Intermediate files from mummer and snippy -summary.tab A final summary report for agr typing Usage \u00b6 Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. AgrVATE Parameters: --typing_only Does agr typing only. Skips agr operon extraction and frameshift detection. spaTyper Parameters: --do_enrich Do PCR product enrichment staphopia-sccmec Parameters: --hamming Report the results as hamming distances. Default: True (perfect match) or False (at least one mismatch) Optional Parameters: --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --prefix DIR Prefix to use for final output files Default: staph-typer --outdir DIR Directory to write results to Default: ./ --min_time INT The minimum number of minutes a job should run before being halted. Default: 60 minutes --max_time INT The maximum number of minutes a job should run before being halted. Default: 120 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 1 Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --registry STR Docker registry to pull containers from. Available options: dockerhub, quay, or github Default: dockerhub --singularity_cache STR Directory where remote Singularity images are stored. If using a cluster, it must be accessible from all compute nodes. Default: NXF_SINGULARITY_CACHEDIR evironment variable, otherwise /local/home/rpetit/.bactopia/singularity --queue STR The name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM). If using multiple queues, please seperate queues by a comma without spaces. Default: general --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. Default: Only result files are transferred back --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. Warning: by doing this you lose the ability to resume workflows. --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: true --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds --nfconfig STR A Nextflow compatible config file for custom profiles. This allows you to create profiles specific to your environment (e.g. SGE, AWS, SLURM, etc...). This config file is loaded last and will overwrite existing variables if set. Default: Bactopia's default configs -resume Nextflow will attempt to resume a previous run. Please notice it is only a single '-' AWS Batch Related Parameters: --aws_region STR AWS Region to be used by Nextflow Default: us-east-1 --aws_volumes STR Volumes to be mounted from the EC2 instance to the Docker container Default: /opt/conda:/mnt/conda --aws_cli_path STR Path to the AWS CLI for Nextflow to use. Default: /home/ec2-user/conda/bin/aws --aws_upload_storage_class STR The S3 storage slass to use for storing files on S3 Default: STANDARD --aws_max_parallel_transfers INT The number of parallele transfers between EC2 and S3 Default: 8 --aws_delay_between_attempts INT The duration of sleep (in seconds) between each transfer between EC2 and S3 Default: 15 --aws_max_transfer_attempts INT The maximum number of times to retry transferring a file between EC2 and S3 Default: 3 --aws_max_retry INT The maximum number of times to retry a process on AWS Batch Default: 4 --aws_ecr_registry STR The ECR registry containing Bactopia related containers. Default: Use the registry given by --registry Useful Parameters: --version Print workflow version information --help Show this message and exit Conda Environment \u00b6 Below is the command used to create the Conda environment. conda create -n staph-typer -c conda-forge -c bioconda agrvate spatyper staphopia-sccmec 'snippy>=4.5.0' References \u00b6 AgrVATE Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. Raghuram V., AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. spaTyper Computational method for finding spa types. Harmsen D., Claus H., Witte W., Rothg\u00e4nger J., Claus H., Turnwald D., and Vogel U.. Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003). Sanchez-Herrero J. F., and Sullivan M. (2020, October 2). spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. staphopia-sccmec A standalone version of Staphopia's SCCmec typing method. Petit III R. A., Read T. D., Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018).","title":"Bactopia Tools - *staph-typer*"},{"location":"bactopia-tools/staph-typer/#bactopia-tools-staph-typer","text":"The staph-typer tool includes multiple tools that are specific for typing certain features of Staphylococcus aureus . Currently staph-typer includes AgrVATE - agr locus type and agr operon variants. spaTyper - spa type staphopia-sccmec - SCCmec type This tool will evolve with S. aureus genomics, so you can expect it to add more typing methods (maybe even replace current methods) in the future. If a certain typing method for S. aureus please feel free to suggest it be added!~","title":"Bactopia Tools - staph-typer"},{"location":"bactopia-tools/staph-typer/#example","text":"The following command will run staph-typer on each available sample. bactopia tools staph-typer --bactopia ~/bactopia-tutorial/bactopia","title":"Example"},{"location":"bactopia-tools/staph-typer/#output-overview","text":"Below is the default output structure for the staph-typer tool. Where possible the file descriptions below were modified from a tools description. bactopia-tools/ \u2514\u2500\u2500 staph-typer/ \u2514\u2500\u2500 ${PREFIX}/ \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 staph-typer-report.html \u2502 \u251c\u2500\u2500 staph-typer-timeline.html \u2502 \u2514\u2500\u2500 staph-typer-trace.txt \u2514\u2500\u2500 ${SAMPLE_NAME} \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_operon.fna \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-agr_operon_frameshifts.tab \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-blastn_log.txt \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-mummer/ \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-mummer-log.txt \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-snippy/ \u2502 \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-snippy-log.txt \u2502 \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}-summary.tab \u2502 \u251c\u2500\u2500 ${SAMPLE_NAME}-spatyper.txt \u2502 \u2514\u2500\u2500 ${SAMPLE_NAME}-sccmec.txt \u251c\u2500\u2500 agrvate-results.txt \u251c\u2500\u2500 spatyper-results.txt \u2514\u2500\u2500 sccmec-results.txt Below is a description of staph-typer outputs. Filename Description agrvate-results.txt Merged set of outputs from AgrVATE spatyper-results.txt Merged set of outputs from spaTyper sccmec-results.txt Merged set of outputs from staphopia-sccmec","title":"Output Overview"},{"location":"bactopia-tools/staph-typer/#directory-description","text":"","title":"Directory Description"},{"location":"bactopia-tools/staph-typer/#bactopia-info","text":"Filename Description staph-typer-report.html The Nextflow Execution Report staph-typer-timeline.html The Nextflow Timeline Report staph-typer-trace.txt The Nextflow Trace report","title":"bactopia-info"},{"location":"bactopia-tools/staph-typer/#per-sample","text":"Filename Description ${SAMPLE_NAME}-spatyper.txt Predicted spa type from spaTyper ${SAMPLE_NAME}-sccmec.txt Predicted SCCmec type from staphopia-sccmec","title":"Per Sample"},{"location":"bactopia-tools/staph-typer/#agrvate","text":"AgrVATE includes outputs from multiple programs so it gets a separate directory within the sample directory. Extension Description -agr_gp.tab Detailed report for agr kmer matches -agr_operon.fna Agr operon extracted from in-silico PCR -agr_operon_frameshifts.tab Frameshift mutations in CDS of extracted agr operon detected by Snippy log.txt Log files from programs called by AgrVATE -{mummer|snippy}/ Intermediate files from mummer and snippy -summary.tab A final summary report for agr typing","title":"agrvate"},{"location":"bactopia-tools/staph-typer/#usage","text":"Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. AgrVATE Parameters: --typing_only Does agr typing only. Skips agr operon extraction and frameshift detection. spaTyper Parameters: --do_enrich Do PCR product enrichment staphopia-sccmec Parameters: --hamming Report the results as hamming distances. Default: True (perfect match) or False (at least one mismatch) Optional Parameters: --include STR A text file containing sample names to include in the analysis. The expected format is a single sample per line. --exclude STR A text file containing sample names to exclude from the analysis. The expected format is a single sample per line. --prefix DIR Prefix to use for final output files Default: staph-typer --outdir DIR Directory to write results to Default: ./ --min_time INT The minimum number of minutes a job should run before being halted. Default: 60 minutes --max_time INT The maximum number of minutes a job should run before being halted. Default: 120 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 1 Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --registry STR Docker registry to pull containers from. Available options: dockerhub, quay, or github Default: dockerhub --singularity_cache STR Directory where remote Singularity images are stored. If using a cluster, it must be accessible from all compute nodes. Default: NXF_SINGULARITY_CACHEDIR evironment variable, otherwise /local/home/rpetit/.bactopia/singularity --queue STR The name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM). If using multiple queues, please seperate queues by a comma without spaces. Default: general --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. Default: Only result files are transferred back --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. Warning: by doing this you lose the ability to resume workflows. --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: true --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds --nfconfig STR A Nextflow compatible config file for custom profiles. This allows you to create profiles specific to your environment (e.g. SGE, AWS, SLURM, etc...). This config file is loaded last and will overwrite existing variables if set. Default: Bactopia's default configs -resume Nextflow will attempt to resume a previous run. Please notice it is only a single '-' AWS Batch Related Parameters: --aws_region STR AWS Region to be used by Nextflow Default: us-east-1 --aws_volumes STR Volumes to be mounted from the EC2 instance to the Docker container Default: /opt/conda:/mnt/conda --aws_cli_path STR Path to the AWS CLI for Nextflow to use. Default: /home/ec2-user/conda/bin/aws --aws_upload_storage_class STR The S3 storage slass to use for storing files on S3 Default: STANDARD --aws_max_parallel_transfers INT The number of parallele transfers between EC2 and S3 Default: 8 --aws_delay_between_attempts INT The duration of sleep (in seconds) between each transfer between EC2 and S3 Default: 15 --aws_max_transfer_attempts INT The maximum number of times to retry transferring a file between EC2 and S3 Default: 3 --aws_max_retry INT The maximum number of times to retry a process on AWS Batch Default: 4 --aws_ecr_registry STR The ECR registry containing Bactopia related containers. Default: Use the registry given by --registry Useful Parameters: --version Print workflow version information --help Show this message and exit","title":"Usage"},{"location":"bactopia-tools/staph-typer/#conda-environment","text":"Below is the command used to create the Conda environment. conda create -n staph-typer -c conda-forge -c bioconda agrvate spatyper staphopia-sccmec 'snippy>=4.5.0'","title":"Conda Environment"},{"location":"bactopia-tools/staph-typer/#references","text":"AgrVATE Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. Raghuram V., AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. spaTyper Computational method for finding spa types. Harmsen D., Claus H., Witte W., Rothg\u00e4nger J., Claus H., Turnwald D., and Vogel U.. Typing of methicillin-resistant Staphylococcus aureus in a university hospital setting using a novel software for spa-repeat determination and database management. J. Clin. Microbiol. 41:5442-5448 (2003). Sanchez-Herrero J. F., and Sullivan M. (2020, October 2). spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. staphopia-sccmec A standalone version of Staphopia's SCCmec typing method. Petit III R. A., Read T. D., Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018).","title":"References"},{"location":"bactopia-tools/staphopiasccmec/","tags":["amr","fasta","sccmec","Staphylococcus aureus"],"text":"Bactopia Tool - staphopiasccmec \u00b6 The staphopiasccmec module uses staphopia-sccmec to assign SCCmec types to Staphylococcus aureus assemblies. Example Usage \u00b6 bactopia --wf staphopiasccmec \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the staphopiasccmec tool. Where possible the file descriptions below were modified from a tools description. staphopiasccmec/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u251c\u2500\u2500 nf-staphopiasccmec.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 staphopiasccmec-dag.dot \u2502 \u251c\u2500\u2500 staphopiasccmec-report.html \u2502 \u251c\u2500\u2500 staphopiasccmec-timeline.html \u2502 \u2514\u2500\u2500 staphopiasccmec-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different staphopiasccmec is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the staphopiasccmec directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples staphopia-sccmec \u00b6 Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description staphopiasccmec-dag.dot The Nextflow DAG visualisation staphopiasccmec-report.html The Nextflow Execution Report staphopiasccmec-timeline.html The Nextflow Timeline Report staphopiasccmec-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis staphopia-sccmec Parameters \u00b6 Parameter Description Default --hamming Report the results as hamming distances False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and staphopiasccmec in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018)","title":"staphopiasccmec"},{"location":"bactopia-tools/staphopiasccmec/#bactopia-tool-staphopiasccmec","text":"The staphopiasccmec module uses staphopia-sccmec to assign SCCmec types to Staphylococcus aureus assemblies.","title":"Bactopia Tool - staphopiasccmec"},{"location":"bactopia-tools/staphopiasccmec/#example-usage","text":"bactopia --wf staphopiasccmec \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/staphopiasccmec/#output-overview","text":"Below is the default output structure for the staphopiasccmec tool. Where possible the file descriptions below were modified from a tools description. staphopiasccmec/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 logs \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u251c\u2500\u2500 nf-staphopiasccmec.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 staphopiasccmec-dag.dot \u2502 \u251c\u2500\u2500 staphopiasccmec-report.html \u2502 \u251c\u2500\u2500 staphopiasccmec-timeline.html \u2502 \u2514\u2500\u2500 staphopiasccmec-trace.txt \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different staphopiasccmec is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the staphopiasccmec directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/staphopiasccmec/#results","text":"","title":"Results"},{"location":"bactopia-tools/staphopiasccmec/#top-level","text":"Below are results that are in the base directory. Filename Description staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples","title":"Top Level"},{"location":"bactopia-tools/staphopiasccmec/#staphopia-sccmec","text":"Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results","title":"staphopia-sccmec"},{"location":"bactopia-tools/staphopiasccmec/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/staphopiasccmec/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/staphopiasccmec/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description staphopiasccmec-dag.dot The Nextflow DAG visualisation staphopiasccmec-report.html The Nextflow Execution Report staphopiasccmec-timeline.html The Nextflow Timeline Report staphopiasccmec-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/staphopiasccmec/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/staphopiasccmec/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/staphopiasccmec/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/staphopiasccmec/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/staphopiasccmec/#staphopia-sccmec-parameters","text":"Parameter Description Default --hamming Report the results as hamming distances False","title":"staphopia-sccmec Parameters"},{"location":"bactopia-tools/staphopiasccmec/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/staphopiasccmec/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/staphopiasccmec/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/staphopiasccmec/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/staphopiasccmec/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/staphopiasccmec/#citations","text":"If you use Bactopia and staphopiasccmec in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018)","title":"Citations"},{"location":"bactopia-tools/staphtyper/","tags":["resistance","Staphylococcus aureus","virulence"],"text":"Bactopia Tool - staphtyper \u00b6 The staphtyper subworkflow includes multiple tools that are specific for typing certain features of Staphylococcus aureus . Currently staphtyper includes AgrVATE - agr locus type and agr operon variants. spaTyper - spa type staphopia-sccmec - SCCmec type This tool will evolve with S. aureus genomics, so you can expect it to add more typing methods (maybe even replace current methods) in the future. If a certain typing method for S. aureus please feel free to suggest it be added!~ Example Usage \u00b6 bactopia --wf staphtyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the staphtyper tool. Where possible the file descriptions below were modified from a tools description. staphtyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-agrvate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-spatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2502 \u251c\u2500\u2500 nf-staphopiasccmec.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 staphtyper-dag.dot \u2502 \u251c\u2500\u2500 staphtyper-report.html \u2502 \u251c\u2500\u2500 staphtyper-timeline.html \u2502 \u2514\u2500\u2500 staphtyper-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u251c\u2500\u2500 spatyper.tsv \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different staphtyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the staphtyper directory structure might be different, but the output descriptions below still apply. Results \u00b6 Top Level \u00b6 Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples spatyper.tsv A merged TSV file with spaTyper results from all samples staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples AgrVATE \u00b6 Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing spaTyper \u00b6 Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results staphopia-sccmec \u00b6 Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description staphtyper-dag.dot The Nextflow DAG visualisation staphtyper-report.html The Nextflow Execution Report staphtyper-timeline.html The Nextflow Timeline Report staphtyper-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis AgrVATE Parameters \u00b6 Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False spaTyper Parameters \u00b6 Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False staphopia-sccmec Parameters \u00b6 Parameter Description Default --hamming Report the results as hamming distances False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and staphtyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018)","title":"staphtyper"},{"location":"bactopia-tools/staphtyper/#bactopia-tool-staphtyper","text":"The staphtyper subworkflow includes multiple tools that are specific for typing certain features of Staphylococcus aureus . Currently staphtyper includes AgrVATE - agr locus type and agr operon variants. spaTyper - spa type staphopia-sccmec - SCCmec type This tool will evolve with S. aureus genomics, so you can expect it to add more typing methods (maybe even replace current methods) in the future. If a certain typing method for S. aureus please feel free to suggest it be added!~","title":"Bactopia Tool - staphtyper"},{"location":"bactopia-tools/staphtyper/#example-usage","text":"bactopia --wf staphtyper \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/staphtyper/#output-overview","text":"Below is the default output structure for the staphtyper tool. Where possible the file descriptions below were modified from a tools description. staphtyper/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-agr_gp.tab \u2502 \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>-blastn_log.txt \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>-summary.tab \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-agrvate.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-spatyper.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2502 \u251c\u2500\u2500 nf-staphopiasccmec.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.tsv \u251c\u2500\u2500 logs \u2502 \u251c\u2500\u2500 csvtk_concat \u2502 \u2502 \u251c\u2500\u2500 agrvate \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u251c\u2500\u2500 spatyper \u2502 \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2502 \u2514\u2500\u2500 staphopiasccmec \u2502 \u2502 \u251c\u2500\u2500 nf-csvtk_concat.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 staphtyper-dag.dot \u2502 \u251c\u2500\u2500 staphtyper-report.html \u2502 \u251c\u2500\u2500 staphtyper-timeline.html \u2502 \u2514\u2500\u2500 staphtyper-trace.txt \u251c\u2500\u2500 agrvate.tsv \u251c\u2500\u2500 software_versions.yml \u251c\u2500\u2500 software_versions_mqc.yml \u251c\u2500\u2500 spatyper.tsv \u2514\u2500\u2500 staphopiasccmec.tsv Directory structure might be different staphtyper is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the staphtyper directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/staphtyper/#results","text":"","title":"Results"},{"location":"bactopia-tools/staphtyper/#top-level","text":"Below are results that are in the base directory. Filename Description agrvate.tsv A merged TSV file with AgrVATE results from all samples spatyper.tsv A merged TSV file with spaTyper results from all samples staphopiasccmec.tsv A merged TSV file with staphopia-sccmec results from all samples","title":"Top Level"},{"location":"bactopia-tools/staphtyper/#agrvate","text":"Below is a description of the per-sample results from AgrVATE . Extension Description -agr_gp.tab Detailed report for agr kmer matches -blastn_log.txt Log files from programs called by AgrVATE -summary.tab A final summary report for agr typing","title":"AgrVATE"},{"location":"bactopia-tools/staphtyper/#spatyper","text":"Below is a description of the per-sample results from spaTyper . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with spaTyper results","title":"spaTyper"},{"location":"bactopia-tools/staphtyper/#staphopia-sccmec","text":"Below is a description of the per-sample results from staphopia-sccmec . Filename Description <SAMPLE_NAME>.tsv A tab-delimited file with staphopia-sccmec results","title":"staphopia-sccmec"},{"location":"bactopia-tools/staphtyper/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/staphtyper/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/staphtyper/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description staphtyper-dag.dot The Nextflow DAG visualisation staphtyper-report.html The Nextflow Execution Report staphtyper-timeline.html The Nextflow Timeline Report staphtyper-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/staphtyper/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/staphtyper/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/staphtyper/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/staphtyper/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/staphtyper/#agrvate-parameters","text":"Parameter Description Default --typing_only agr typing only. Skips agr operon extraction and frameshift detection False","title":"AgrVATE Parameters"},{"location":"bactopia-tools/staphtyper/#spatyper-parameters","text":"Parameter Description Default --repeats List of spa repeats --repeat_order List spa types and order of repeats --do_enrich Do PCR product enrichment False","title":"spaTyper Parameters"},{"location":"bactopia-tools/staphtyper/#staphopia-sccmec-parameters","text":"Parameter Description Default --hamming Report the results as hamming distances False","title":"staphopia-sccmec Parameters"},{"location":"bactopia-tools/staphtyper/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/staphtyper/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/staphtyper/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/staphtyper/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/staphtyper/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/staphtyper/#citations","text":"If you use Bactopia and staphtyper in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) AgrVATE Raghuram V. AgrVATE: Rapid identification of Staphylococcus aureus agr locus type and agr operon variants. (GitHub) spaTyper Sanchez-Herrero JF, and Sullivan M spaTyper: Staphylococcal protein A (spa) characterization pipeline . Zenodo. (2020) staphopia-sccmec Petit III RA, Read TD Staphylococcus aureus viewed from the perspective of 40,000+ genomes. PeerJ 6, e5261 (2018)","title":"Citations"},{"location":"bactopia-tools/summary/","text":"Bactopia Tools - summary \u00b6 The summary tool allows you to quickly aggregate the results of your Bactopia analysis. For each sample the sequence stats (before and after QC), assembly stats, and the annotation stats are put into a single tab-delimited file. For each sample, the summary assigns a rank of Gold , Silver , Bronze , or Fail . The rank is determined by sequence quality and assembly quality. Below is the default cutoffs for each rank. Rank Coverage Mean Per-Read Quality Mean Read Length Total Contigs Gold 100x Q30 95bp 100 Silver 50x Q20 75bp 200 Bronze 20x Q12 49bp 500 Fail <20x < @12 <49bp >500 Samples that fail to meet all the cutoffs for at least a Bronze rank are added to a exclude file. This turns out to be a useful feature beacuse all other Bactopia Tools can read this file and automatically exclude the samples marked as Fail from downstream analysis. Example \u00b6 bactopia tools summary --bactopia ~/bactopia-tutorial/bactopia Output Overview \u00b6 bactopia-tools/ \u2514\u2500\u2500 summary/ \u251c\u2500\u2500 amrfinder \u2502 \u251c\u2500\u2500 amrfinder-(gene|protein)-detailed-summary.txt \u2502 \u2514\u2500\u2500 amrfinder-(gene|protein)-summary.txt \u251c\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 ariba-(card|vfdb|etc...)-detailed-summary.txt \u2502 \u2514\u2500\u2500 ariba-(card|vfdb|etc...)-summary.txt \u251c\u2500\u2500 bactopia-exclude.txt \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 summary-report.html \u2502 \u251c\u2500\u2500 summary-timeline.html \u2502 \u2514\u2500\u2500 summary-trace.txt \u251c\u2500\u2500 bactopia-results.txt \u2514\u2500\u2500 bactopia-summary.txt Filename Description bactopia-exclude.txt A list of samples and the reason they failed quality cutoffs bactopia-results.txt A tab-delimited file containing sequence, assembly and annotation stats for all samples bactopia-summary.txt Brief breakdown of ranks and qc-failures Directory Description \u00b6 amrfinder \u00b6 Filename Description amrfinder-(gene|protein)-detailed-summary.txt Detailed information about each hit against a specific antimicrobial resistance amrfinder-(gene|protein)-summary.txt A presence/absence matrix for hits against a specific antimicrobial resistance ariba \u00b6 Filename Description ariba-(card|vfdb|etc...)-detailed-summary.txt Detailed information about each hit against a reference Ariba dataset ariba-(card|vfdb|etc...)-summary.txt A presence/absence matrix for hits against a reference Ariba dataset bactopia-info \u00b6 Filename Description summary-report.html The Nextflow Execution Report summary-timeline.html The Nextflow Timeline Report summary-trace.txt The Nextflow Trace report Usage \u00b6 Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. Bactopia Summary Parameters: --gold_coverage FLOAT Minimum amount of coverage required for Gold status Default: 100 --gold_quality INT Minimum per-read mean quality score required for Gold status Default: 30 --gold_read_length INT Minimum mean read length required for Gold status Default: 95 --gold_contigs INT Maximum contig count required for Gold status Default: 100 --silver_coverage FLOAT Minimum amount of coverage required for Silver status Default: 50 --silver_quality INT Minimum per-read mean quality score required for Silver status Default: 20 --silver_read_length INT Minimum mean read length required for Silver status Default: 75 --silver_contigs INT Maximum contig count required for Silver status Default: 200 --min_coverage FLOAT Minimum amount of coverage required to pass Default: 20 --min_quality INT Minimum per-read mean quality score required to pass Default: 12 --min_read_length INT Minimum mean read length required to pass Default: 49 --max_contigs INT Maximum contig count required to pass Default: 500 --min_genome_size INT Minimum assembled genome size. Default: null --max_genome_size INT Maximum assembled genome size. Default: null Ariba Summary Parameters: --all_hits Include all hits (matches and partials) in the summary Default: Only report hits that are a match AMRFinder+ Summary Parameters: --subclass Group the report by subclass (ex. Streptomycin). Default: Group by class (ex. Aminoglycoside) Optional Parameters: --prefix STR Prefix to use for final output files Default: bactopia --outdir DIR Directory to write results to Default: ./ --max_time INT The maximum number of minutes a job should run before being halted. Default: 120 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 4 Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: false --conatainerPath Path to Singularity containers to be used by the 'slurm' profile. Default: /opt/bactopia/singularity --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds Useful Parameters: --verbose Increase the verbosity of processes. --version Print workflow version information --help Show this message and exit","title":"Bactopia Tools - *summary*"},{"location":"bactopia-tools/summary/#bactopia-tools-summary","text":"The summary tool allows you to quickly aggregate the results of your Bactopia analysis. For each sample the sequence stats (before and after QC), assembly stats, and the annotation stats are put into a single tab-delimited file. For each sample, the summary assigns a rank of Gold , Silver , Bronze , or Fail . The rank is determined by sequence quality and assembly quality. Below is the default cutoffs for each rank. Rank Coverage Mean Per-Read Quality Mean Read Length Total Contigs Gold 100x Q30 95bp 100 Silver 50x Q20 75bp 200 Bronze 20x Q12 49bp 500 Fail <20x < @12 <49bp >500 Samples that fail to meet all the cutoffs for at least a Bronze rank are added to a exclude file. This turns out to be a useful feature beacuse all other Bactopia Tools can read this file and automatically exclude the samples marked as Fail from downstream analysis.","title":"Bactopia Tools - summary"},{"location":"bactopia-tools/summary/#example","text":"bactopia tools summary --bactopia ~/bactopia-tutorial/bactopia","title":"Example"},{"location":"bactopia-tools/summary/#output-overview","text":"bactopia-tools/ \u2514\u2500\u2500 summary/ \u251c\u2500\u2500 amrfinder \u2502 \u251c\u2500\u2500 amrfinder-(gene|protein)-detailed-summary.txt \u2502 \u2514\u2500\u2500 amrfinder-(gene|protein)-summary.txt \u251c\u2500\u2500 ariba \u2502 \u251c\u2500\u2500 ariba-(card|vfdb|etc...)-detailed-summary.txt \u2502 \u2514\u2500\u2500 ariba-(card|vfdb|etc...)-summary.txt \u251c\u2500\u2500 bactopia-exclude.txt \u251c\u2500\u2500 bactopia-info \u2502 \u251c\u2500\u2500 summary-report.html \u2502 \u251c\u2500\u2500 summary-timeline.html \u2502 \u2514\u2500\u2500 summary-trace.txt \u251c\u2500\u2500 bactopia-results.txt \u2514\u2500\u2500 bactopia-summary.txt Filename Description bactopia-exclude.txt A list of samples and the reason they failed quality cutoffs bactopia-results.txt A tab-delimited file containing sequence, assembly and annotation stats for all samples bactopia-summary.txt Brief breakdown of ranks and qc-failures","title":"Output Overview"},{"location":"bactopia-tools/summary/#directory-description","text":"","title":"Directory Description"},{"location":"bactopia-tools/summary/#amrfinder","text":"Filename Description amrfinder-(gene|protein)-detailed-summary.txt Detailed information about each hit against a specific antimicrobial resistance amrfinder-(gene|protein)-summary.txt A presence/absence matrix for hits against a specific antimicrobial resistance","title":"amrfinder"},{"location":"bactopia-tools/summary/#ariba","text":"Filename Description ariba-(card|vfdb|etc...)-detailed-summary.txt Detailed information about each hit against a reference Ariba dataset ariba-(card|vfdb|etc...)-summary.txt A presence/absence matrix for hits against a reference Ariba dataset","title":"ariba"},{"location":"bactopia-tools/summary/#bactopia-info","text":"Filename Description summary-report.html The Nextflow Execution Report summary-timeline.html The Nextflow Timeline Report summary-trace.txt The Nextflow Trace report","title":"bactopia-info"},{"location":"bactopia-tools/summary/#usage","text":"Required Parameters: --bactopia STR Directory containing Bactopia analysis results for all samples. Bactopia Summary Parameters: --gold_coverage FLOAT Minimum amount of coverage required for Gold status Default: 100 --gold_quality INT Minimum per-read mean quality score required for Gold status Default: 30 --gold_read_length INT Minimum mean read length required for Gold status Default: 95 --gold_contigs INT Maximum contig count required for Gold status Default: 100 --silver_coverage FLOAT Minimum amount of coverage required for Silver status Default: 50 --silver_quality INT Minimum per-read mean quality score required for Silver status Default: 20 --silver_read_length INT Minimum mean read length required for Silver status Default: 75 --silver_contigs INT Maximum contig count required for Silver status Default: 200 --min_coverage FLOAT Minimum amount of coverage required to pass Default: 20 --min_quality INT Minimum per-read mean quality score required to pass Default: 12 --min_read_length INT Minimum mean read length required to pass Default: 49 --max_contigs INT Maximum contig count required to pass Default: 500 --min_genome_size INT Minimum assembled genome size. Default: null --max_genome_size INT Maximum assembled genome size. Default: null Ariba Summary Parameters: --all_hits Include all hits (matches and partials) in the summary Default: Only report hits that are a match AMRFinder+ Summary Parameters: --subclass Group the report by subclass (ex. Streptomycin). Default: Group by class (ex. Aminoglycoside) Optional Parameters: --prefix STR Prefix to use for final output files Default: bactopia --outdir DIR Directory to write results to Default: ./ --max_time INT The maximum number of minutes a job should run before being halted. Default: 120 minutes --max_memory INT The maximum amount of memory (Gb) allowed to a single process. Default: 32 Gb --cpus INT Number of processors made available to a single process. Default: 4 Nextflow Related Parameters: --condadir DIR Directory to Nextflow should use for Conda environments Default: Bactopia's Nextflow directory --publish_mode Set Nextflow's method for publishing output files. Allowed methods are: 'copy' (default) Copies the output files into the published directory. 'copyNoFollow' Copies the output files into the published directory without following symlinks ie. copies the links themselves. 'link' Creates a hard link in the published directory for each process output file. 'rellink' Creates a relative symbolic link in the published directory for each process output file. 'symlink' Creates an absolute symbolic link in the published directory for each process output file. Default: copy --force Nextflow will overwrite existing output files. Default: false --conatainerPath Path to Singularity containers to be used by the 'slurm' profile. Default: /opt/bactopia/singularity --sleep_time After reading datases, the amount of time (seconds) Nextflow will wait before execution. Default: 5 seconds Useful Parameters: --verbose Increase the verbosity of processes. --version Print workflow version information --help Show this message and exit","title":"Usage"},{"location":"bactopia-tools/tbprofiler/","tags":["Mycobacterium tuberculosis","resistance","serotype"],"text":"Bactopia Tool - tbprofiler \u00b6 The tbprofiler module uses TBProfiler for for profiling reads to determine resistance and Mycobacterium tuberculosis strain type. Example Usage \u00b6 bactopia --wf tbprofiler \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt Output Overview \u00b6 Below is the default output structure for the tbprofiler tool. Where possible the file descriptions below were modified from a tools description. tbprofiler/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 bam \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.bam \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 tbprofiler \u2502 \u2502 \u251c\u2500\u2500 nf-tbprofiler.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 vcf \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.targets.csq.vcf.gz \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 tbprofiler-dag.dot \u2502 \u251c\u2500\u2500 tbprofiler-report.html \u2502 \u251c\u2500\u2500 tbprofiler-timeline.html \u2502 \u2514\u2500\u2500 tbprofiler-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions.yml Directory structure might be different tbprofiler is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the tbprofiler directory structure might be different, but the output descriptions below still apply. Results \u00b6 TBProfiler \u00b6 Below is a description of the per-sample results from TBProfiler . Filename Description <SAMPLE_NAME>.results.csv A CSV formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.json A JSON formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.txt A text file with TBProfiler results <SAMPLE_NAME>.bam BAM file with alignment details <SAMPLE_NAME>.targets.csq.vcf.gz VCF with variant info again refernce genomes Audit Trail \u00b6 Below are files that can assist you in understanding which parameters and program versions were used. Logs \u00b6 Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions Nextflow Reports \u00b6 These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description tbprofiler-dag.dot The Nextflow DAG visualisation tbprofiler-report.html The Nextflow Execution Report tbprofiler-timeline.html The Nextflow Timeline Report tbprofiler-trace.txt The Nextflow Trace report Program Versions \u00b6 At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC Parameters \u00b6 Required Parameters \u00b6 Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs Filtering Parameters \u00b6 Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis TBProfiler Parameters \u00b6 Parameter Description Default --call_whole_genome Call whole genome False --mapper Mapping tool to use. If you are using nanopore data it will default to minimap2 bwa --caller Variant calling tool to use freebayes --calling_params Extra variant caller options in quotes --tb_min_depth Minimum depth required to call variant 10 --tb_af Minimum allele frequency to call variants 0.1 --tb_reporting_af Minimum allele frequency to use variants for prediction 0.1 --coverage_fraction_threshold Cutoff used to calculate fraction of region covered by <= this value 0 --suspect Use the suspect suite of tools to add ML predictions False --no_flagstat Don't collect flagstats False --no_delly Don't run delly False Optional Parameters \u00b6 These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False Max Job Request Parameters \u00b6 Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3 Nextflow Configuration Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False Nextflow Profile Parameters \u00b6 Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False Helpful Parameters \u00b6 Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text. Citations \u00b6 If you use Bactopia and tbprofiler in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) TBProfiler Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019)","title":"tbprofiler"},{"location":"bactopia-tools/tbprofiler/#bactopia-tool-tbprofiler","text":"The tbprofiler module uses TBProfiler for for profiling reads to determine resistance and Mycobacterium tuberculosis strain type.","title":"Bactopia Tool - tbprofiler"},{"location":"bactopia-tools/tbprofiler/#example-usage","text":"bactopia --wf tbprofiler \\ --bactopia /path/to/your/bactopia/results \\ --include includes.txt","title":"Example Usage"},{"location":"bactopia-tools/tbprofiler/#output-overview","text":"Below is the default output structure for the tbprofiler tool. Where possible the file descriptions below were modified from a tools description. tbprofiler/ \u251c\u2500\u2500 <SAMPLE_NAME> \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.csv \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.json \u2502 \u251c\u2500\u2500 <SAMPLE_NAME>.results.txt \u2502 \u251c\u2500\u2500 bam \u2502 \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.bam \u2502 \u251c\u2500\u2500 logs \u2502 \u2502 \u2514\u2500\u2500 tbprofiler \u2502 \u2502 \u251c\u2500\u2500 nf-tbprofiler.{begin,err,log,out,run,sh,trace} \u2502 \u2502 \u2514\u2500\u2500 versions.yml \u2502 \u2514\u2500\u2500 vcf \u2502 \u2514\u2500\u2500 <SAMPLE_NAME>.targets.csq.vcf.gz \u251c\u2500\u2500 logs \u2502 \u2514\u2500\u2500 custom_dumpsoftwareversions \u2502 \u251c\u2500\u2500 nf-custom_dumpsoftwareversions.{begin,err,log,out,run,sh,trace} \u2502 \u2514\u2500\u2500 versions.yml \u251c\u2500\u2500 nf-reports \u2502 \u251c\u2500\u2500 tbprofiler-dag.dot \u2502 \u251c\u2500\u2500 tbprofiler-report.html \u2502 \u251c\u2500\u2500 tbprofiler-timeline.html \u2502 \u2514\u2500\u2500 tbprofiler-trace.txt \u251c\u2500\u2500 software_versions.yml \u2514\u2500\u2500 software_versions.yml Directory structure might be different tbprofiler is available as a standalone Bactopia Tool, as well as from the main Bactopia workflow (e.g. through Staphopia or Merlin). If executed from Bactopia, the tbprofiler directory structure might be different, but the output descriptions below still apply.","title":"Output Overview"},{"location":"bactopia-tools/tbprofiler/#results","text":"","title":"Results"},{"location":"bactopia-tools/tbprofiler/#tbprofiler","text":"Below is a description of the per-sample results from TBProfiler . Filename Description <SAMPLE_NAME>.results.csv A CSV formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.json A JSON formated TBProfiler result file of resistance and strain type <SAMPLE_NAME>.results.txt A text file with TBProfiler results <SAMPLE_NAME>.bam BAM file with alignment details <SAMPLE_NAME>.targets.csq.vcf.gz VCF with variant info again refernce genomes","title":"TBProfiler"},{"location":"bactopia-tools/tbprofiler/#audit-trail","text":"Below are files that can assist you in understanding which parameters and program versions were used.","title":"Audit Trail"},{"location":"bactopia-tools/tbprofiler/#logs","text":"Each process that is executed will have a logs folder containing helpful files for you to review if the need ever arises. Filename Description nf-<PROCESS_NAME>.begin An empty file used to designate the process started nf-<PROCESS_NAME>.err Contains STDERR outputs from the process nf-<PROCESS_NAME>.log Contains both STDERR and STDOUT outputs from the process nf-<PROCESS_NAME>.out Contains STDOUT outputs from the process nf-<PROCESS_NAME>.run The script Nextflow uses to stage/unstage files and queue processes based on given profile nf-<PROCESS_NAME>.sh The script executed by bash for the process nf-<PROCESS_NAME>.trace The Nextflow Trace report for the process versions.yml A YAML formatted file with program versions","title":"Logs"},{"location":"bactopia-tools/tbprofiler/#nextflow-reports","text":"These Nextflow reports provide great a great summary of your run. These can be used to optimize resource usage and estimate expected costs if using cloud platforms. Filename Description tbprofiler-dag.dot The Nextflow DAG visualisation tbprofiler-report.html The Nextflow Execution Report tbprofiler-timeline.html The Nextflow Timeline Report tbprofiler-trace.txt The Nextflow Trace report","title":"Nextflow Reports"},{"location":"bactopia-tools/tbprofiler/#program-versions","text":"At the end of each run, each of the versions.yml files are merged into the files below. Filename Description software_versions.yml A complete list of programs and versions used by each process software_versions_mqc.yml A complete list of programs and versions formatted for MultiQC","title":"Program Versions"},{"location":"bactopia-tools/tbprofiler/#parameters","text":"","title":"Parameters"},{"location":"bactopia-tools/tbprofiler/#required-parameters","text":"Define where the pipeline should find input data and save output data. Parameter Description Default --bactopia The path to bactopia results to use as inputs","title":"Required Parameters"},{"location":"bactopia-tools/tbprofiler/#filtering-parameters","text":"Use these parameters to specify which samples to include or exclude. Parameter Description Default --include A text file containing sample names (one per line) to include from the analysis --exclude A text file containing sample names (one per line) to exclude from the analysis","title":"Filtering Parameters"},{"location":"bactopia-tools/tbprofiler/#tbprofiler-parameters","text":"Parameter Description Default --call_whole_genome Call whole genome False --mapper Mapping tool to use. If you are using nanopore data it will default to minimap2 bwa --caller Variant calling tool to use freebayes --calling_params Extra variant caller options in quotes --tb_min_depth Minimum depth required to call variant 10 --tb_af Minimum allele frequency to call variants 0.1 --tb_reporting_af Minimum allele frequency to use variants for prediction 0.1 --coverage_fraction_threshold Cutoff used to calculate fraction of region covered by <= this value 0 --suspect Use the suspect suite of tools to add ML predictions False --no_flagstat Don't collect flagstats False --no_delly Don't run delly False","title":"TBProfiler Parameters"},{"location":"bactopia-tools/tbprofiler/#optional-parameters","text":"These optional parameters can be useful in certain settings. Parameter Description Default --outdir Base directory to write results to ./ --run_name Name of the directory to hold results bactopia --skip_compression Ouput files will not be compressed False --keep_all_files Keeps all analysis files created False","title":"Optional Parameters"},{"location":"bactopia-tools/tbprofiler/#max-job-request-parameters","text":"Set the top limit for requested resources for any single job. Parameter Description Default --max_retry Maximum times to retry a process before allowing it to fail. 3 --max_cpus Maximum number of CPUs that can be requested for any single job. 4 --max_memory Maximum amount of memory (in GB) that can be requested for any single job. 32 --max_time Maximum amount of time (in minutes) that can be requested for any single job. 120 --max_downloads Maximum number of samples to download at a time 3","title":"Max Job Request Parameters"},{"location":"bactopia-tools/tbprofiler/#nextflow-configuration-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --nfconfig A Nextflow compatible config file for custom profiles, loaded last and will overwrite existing variables if set. --publish_dir_mode Method used to save pipeline results to output directory. copy --infodir Directory to keep pipeline Nextflow logs and reports. ${params.outdir}/pipeline_info --force Nextflow will overwrite existing output files. False --cleanup_workdir After Bactopia is successfully executed, the work directory will be deleted. False","title":"Nextflow Configuration Parameters"},{"location":"bactopia-tools/tbprofiler/#nextflow-profile-parameters","text":"Parameters to fine-tune your Nextflow setup. Parameter Description Default --condadir Directory to Nextflow should use for Conda environments --registry Docker registry to pull containers from. dockerhub --singularity_cache Directory where remote Singularity images are stored. --singularity_pull_docker_container Instead of directly downloading Singularity images for use with Singularity, force the workflow to pull and convert Docker containers instead. --force_rebuild Force overwrite of existing pre-built environments. False --queue Comma-separated name of the queue(s) to be used by a job scheduler (e.g. AWS Batch or SLURM) general,high-memory --cluster_opts Additional options to pass to the executor. (e.g. SLURM: '--account=my_acct_name' --disable_scratch All intermediate files created on worker nodes of will be transferred to the head node. False","title":"Nextflow Profile Parameters"},{"location":"bactopia-tools/tbprofiler/#helpful-parameters","text":"Uncommonly used parameters that might be useful. Parameter Description Default --monochrome_logs Do not use coloured log outputs. --nfdir Print directory Nextflow has pulled Bactopia to --sleep_time The amount of time (seconds) Nextflow will wait after setting up datasets before execution. 5 --validate_params Boolean whether to validate parameters against the schema at runtime True --help Display help text. --wf Specify which workflow or Bactopia Tool to execute bactopia --list_wfs List the available workflows and Bactopia Tools to use with '--wf' --show_hidden_params Show all params when using --help --help_all An alias for --help --show_hidden_params --version Display version text.","title":"Helpful Parameters"},{"location":"bactopia-tools/tbprofiler/#citations","text":"If you use Bactopia and tbprofiler in your analysis, please cite the following. Bactopia Petit III RA, Read TD Bactopia - a flexible pipeline for complete analysis of bacterial genomes. mSystems 5 (2020) TBProfiler Phelan JE, O\u2019Sullivan DM, Machado D, Ramos J, Oppong YEA, Campino S, O\u2019Grady J, McNerney R, Hibberd ML, Viveiros M, Huggett JF, Clark TG Integrating informatics tools and portable sequencing technology for rapid detection of resistance to anti-tuberculous drugs. Genome Med 11, 41 (2019)","title":"Citations"},{"location":"bactopia-tools/whatsgnu/","text":"","title":"Whatsgnu"},{"location":"data/resources/","text":"","title":"Index"}]}